(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{80:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return p})),a.d(t,"toc",(function(){return d})),a.d(t,"default",(function(){return h}));var n=a(3),i=a(7),r=(a(0),a(197)),o=a(200),c=a(201),s=a(199),l={id:"tools7",title:"Presentation",sidebar_label:"Presentation",slug:"/dapp-tools/archetype"},p={unversionedId:"dapp-tools/tools7",id:"dapp-tools/tools7",isDocsHomePage:!1,title:"Presentation",description:"Language",source:"@site/docs/dapp-tools/tools7.md",slug:"/dapp-tools/archetype",permalink:"/docs/dapp-tools/archetype",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dapp-tools/tools7.md",version:"current",sidebar_label:"Presentation",sidebar:"tools",previous:{title:"Tezos",permalink:"/docs/dapp-tools/tezos"},next:{title:"Settings",permalink:"/docs/dapp-tools/tutorials/archetype-settings"}},d=[{value:"Language",id:"language",children:[]},{value:"Try Archetype",id:"try-archetype",children:[]},{value:"Exclusive features",id:"exclusive-features",children:[{value:"Easy Business Logic",id:"easy-business-logic",children:[]},{value:"Explicit execution conditions",id:"explicit-execution-conditions",children:[]},{value:"Clear State Machine",id:"clear-state-machine",children:[]},{value:"Smart Storage API",id:"smart-storage-api",children:[]},{value:"Formal Specification",id:"formal-specification",children:[]}]},{value:"Command line",id:"command-line",children:[{value:"Compile to Michelson",id:"compile-to-michelson",children:[]},{value:"Generate javascript",id:"generate-javascript",children:[]},{value:"Generate Why3 language",id:"generate-why3-language",children:[]}]}],b={toc:d};function h(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)(o.a,{img:"archetype.svg",width:"50%",mdxType:"DappFigure"}),Object(r.b)("h2",{id:"language"},"Language"),Object(r.b)("a",{href:"https://archetype-lang.org",target:"_blank"},"Archetype")," is a domain-specific language to develop Smart Contracts on the Tezos blockchain, with all Michelson features, plus exclusive features (new types, state machine design, ...) to ease development, tests and formal verification.",Object(r.b)("h2",{id:"try-archetype"},"Try Archetype"),Object(r.b)("p",null,"Discover Archetype with a ten steps online tutorial."),Object(r.b)(c.a,{url:"https://gitpod.io/#https://github.com/edukera/try-archetype",txt:"try archetype",mdxType:"DappButton"}),Object(r.b)("p",null,"It requires a ",Object(r.b)(s.a,{to:"/docs/dapp-tools/gitpod",mdxType:"Link"},"Gitpod")," account."),Object(r.b)("h2",{id:"exclusive-features"},"Exclusive features"),Object(r.b)("h3",{id:"easy-business-logic"},"Easy Business Logic"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype"}),"archetype blogic_demo(holder : address, value : tez, deadline : date)\n\nentry pay () {\n  transfer ((1 + 7% * (now - deadline) / 1d) * value) to holder\n}\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"pay")," entrypoint applies a penalty fee of 7% per day beyond deadline. Archetype language provides exlcusive types to easily implement readable business rules: rationals, dates, durations ..."),Object(r.b)("h3",{id:"explicit-execution-conditions"},"Explicit execution conditions"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype"}),"archetype exec_cond_demo(admin : address, value : nat)\n\nentry setvalue (v : nat) {\n  called by admin\n  require {\n    r1: transferred > value;\n    r2: now < 2022-01-01;\n  }\n  effect {\n    value := v;\n  }\n")),Object(r.b)("p",null,"  The ",Object(r.b)("inlineCode",{parentName:"p"},"setvalue")," entrypoint executes if the sender is the admin, if the transferred amount is greater than value and if it is called before 2022. Archetype provides specific syntax to establish execution conditions so that the contract is easy to read and check."),Object(r.b)("h3",{id:"clear-state-machine"},"Clear State Machine"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype"}),"archetype state_machine_demo(value : tez, holder : address)\n\nstates =\n| Created initial\n| Intialized\n| Terminated\n\ntransition initialize () {\n  from Created to Intialized\n  when { transferred > value }\n}\n\ntransition terminate () {\n  from Initialized Terminated\n  effect { transfer balance to holder }\n}\n")),Object(r.b)("p",null,"It is possible with Archetype to design the contract as a state machine. Transitions may have guard conditions (like ",Object(r.b)("inlineCode",{parentName:"p"},"initialize"),") and effect on the storage (like ",Object(r.b)("inlineCode",{parentName:"p"},"terminate"),"). State machines are convenient to make the overall process clear and transparent."),Object(r.b)("h3",{id:"smart-storage-api"},"Smart Storage API"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype"}),"archetype asset_demo\n\nasset vehicle {\n  vin          : string;\n  nbrepairs    : nat  = 0;\n  dateofrepair : date = now;\n}\n\nentry repair_oldest () {\n  for v in vehicle.sort(dateofrepair).select(the.nbrepairs = 0).head(3) do\n    vehicle.update(v, { nbrepairs += 1; dateofrepair = now })\n  done\n}\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"repair_oldest")," entrypoint increments the nbrepairs field of the 3 vehicles with oldest date of repair, and with a number of repairs above zero. An asset collection provides a rich API to read/write data (add, remove, update, addupdate, ...), and to iterate over the collection (select, sort, sum, head, tail, ...)."),Object(r.b)("h3",{id:"formal-specification"},"Formal Specification"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-archetype"}),"specification entry repair_oldest () {\n  postcondition p1 {\n    0 <= vehicle.sum(nbrepairs) - before.vehicle.sum(nbrepairs) <= 3\n  }\n}\n")),Object(r.b)("p",null,"The postcondition ",Object(r.b)("inlineCode",{parentName:"p"},"p1")," of ",Object(r.b)("inlineCode",{parentName:"p"},"repair_oldest")," entry point specifies that the difference between the total number of repairs after the entry point's execution and before, is less or equal to 3. Archetype provides a full-featured specification language for contract invariants and entry point postconditions."),Object(r.b)("h2",{id:"command-line"},"Command line"),Object(r.b)("h3",{id:"compile-to-michelson"},"Compile to Michelson"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"$ archetype contract.arl\n")),Object(r.b)("h3",{id:"generate-javascript"},"Generate javascript"),Object(r.b)("p",null,"for contract origination (deployment) from a js DApp:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"$ archeype -t javascript contract.arl\n")),Object(r.b)("h3",{id:"generate-why3-language"},"Generate Why3 language"),Object(r.b)("p",null,"In order to verify the contract with ",Object(r.b)("a",{href:"http://why3.lri.fr/",target:"_blank"},"Why3"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"$ archetype -t whyml contract.arl\n")))}h.isMDXComponent=!0}}]);