(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{140:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return c})),a.d(n,"metadata",(function(){return l})),a.d(n,"toc",(function(){return s})),a.d(n,"default",(function(){return d}));var t=a(3),r=a(7),o=(a(0),a(187)),c=(a(191),a(188),a(189),{id:"nonfungible8",title:"Interface",sidebar_label:"Interface",slug:"/dapp-nonfungible/interface"}),l={unversionedId:"dapp-nonfungible/nonfungible8",id:"dapp-nonfungible/nonfungible8",isDocsHomePage:!1,title:"Interface",description:"The smart contract is a FA2 contract.",source:"@site/docs/dapp-nonfungible/nonfungible8.md",slug:"/dapp-nonfungible/interface",permalink:"/completium-landing/docs/dapp-nonfungible/interface",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dapp-nonfungible/nonfungible8.md",version:"current",sidebar_label:"Interface",sidebar:"nonfungible",previous:{title:"Interactions",permalink:"/completium-landing/docs/dapp-nonfungible/interactions"},next:{title:"Implementation",permalink:"/completium-landing/docs/dapp-nonfungible/implementation"}},s=[{value:"Storage",id:"storage",children:[]},{value:"Entry points",id:"entry-points",children:[{value:"Update operators",id:"update-operators",children:[]},{value:"Transfer",id:"transfer",children:[]},{value:"Balance of",id:"balance-of",children:[]},{value:"Buy",id:"buy",children:[]},{value:"Sell",id:"sell",children:[]}]}],i={toc:s};function d(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},i,a,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The smart contract is a ",Object(o.b)("inlineCode",{parentName:"p"},"FA2")," contract."),Object(o.b)("h2",{id:"storage"},"Storage"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"asset token {\n  tid        : nat;\n  tprice     : tez;\n} initialized by {\n  { 973012;  1.3tz };\n  { 973013;  2.2tz };\n  { 973014;  1.4tz };\n  { 973015;  3.4tz };\n  { 973016;  2.8tz };\n  { 973017;  1.0tz };\n  { 973018;  2.4tz };\n  { 973019;  4.1tz };\n  { 973020; 12.4tz };\n  ...\n  { 973113;  1.4tz }\n}\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"asset ledger identified by ltoken {\n  ltoken     : nat;\n  lowner     : address;\n} initialized by {\n  { 973012; caller };\n  { 973013; caller };\n  { 973014; caller };\n  { 973015; caller };\n  { 973016; caller };\n  { 973017; caller };\n  { 973018; caller };\n  { 973019; caller };\n  { 973020; caller };\n  ...\n  { 973113; caller }\n}\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"asset operator identified by oaddr otoken oowner {\n  oaddr       : address;\n  otoken      : nat;\n  oowner      : address;\n}\n")),Object(o.b)("h2",{id:"entry-points"},"Entry points"),Object(o.b)("h3",{id:"update-operators"},"Update operators"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"record operator_param {\n  opp_owner    : address;\n  opp_operator : address;\n  opp_token_id : nat\n} as ((owner, (operator, token_id)))\n\nentry update_operators (upl : list<or<operator_param, operator_param>>) {\n  ...\n}\n")),Object(o.b)("h3",{id:"transfer"},"Transfer"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"record transfer_destination {\n  to_dest           : address;\n  token_id_dest     : nat;\n  token_amount_dest : nat\n} as ((to_, (token_id, amount)))\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"entry %transfer (txs : list<address * list<transfer_destination>>) {\n  ...\n}\n")),Object(o.b)("h3",{id:"balance-of"},"Balance of"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"record balance_of_request {\n  bo_owner : address;\n  btoken_id : nat;\n} as ((owner, token_id))\n\nrecord balance_of_response {\n  request : balance_of_request;\n  balance_ : nat;\n} as ((request, balance))\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"getter balance_of (requests : list<balance_of_request>) : list<balance_of_response> {\n    ...\n}\n")),Object(o.b)("h3",{id:"buy"},"Buy"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"entry buy (tokenids : list<nat>) {\n ...\n}\n")),Object(o.b)("h3",{id:"sell"},"Sell"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"entry sell (tokenid : nat) {\n  ...\n}\n")))}d.isMDXComponent=!0}}]);