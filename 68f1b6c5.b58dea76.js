(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{129:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return d})),n.d(a,"metadata",(function(){return l})),n.d(a,"toc",(function(){return p})),n.d(a,"default",(function(){return i}));var t=n(3),r=n(7),o=(n(0),n(196)),d={id:"dex12",title:"Implementation",sidebar_label:"Implementation",slug:"/dapp-dex/fa12implementation"},l={unversionedId:"dapp-dex/dex12",id:"dapp-dex/dex12",isDocsHomePage:!1,title:"Implementation",description:"Transfer",source:"@site/docs/dapp-dex/dex12.md",slug:"/dapp-dex/fa12implementation",permalink:"/docs/dapp-dex/fa12implementation",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dapp-dex/dex12.md",version:"current",sidebar_label:"Implementation",sidebar:"dex",previous:{title:"Interface",permalink:"/docs/dapp-dex/fa12interface"},next:{title:"Specification",permalink:"/docs/dapp-dex/specification"}},p=[{value:"Transfer",id:"transfer",children:[]},{value:"Approve",id:"approve",children:[]}],c={toc:p};function i(e){var a=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},c,n,{components:a,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"transfer"},"Transfer"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),'entry %transfer (%from : address, %to : address, value : nat) {\n  require {\n    r1 otherwise "NotEnoughBalance" : ledger[%from].tokens >= value;\n  }\n  effect {\n    if caller <> %from then (\n      var current = allowance[(%from, caller)].amount;\n      dofailif(current < value, ("NotEnoughAllowance", ((value, current))));\n      allowance.update((%from, caller), { amount -=  value });\n    );\n    ledger.update(%from, { tokens -= value });\n    ledger.addupdate(%to, { tokens += value });\n  }\n}\n')),Object(o.b)("h2",{id:"approve"},"Approve"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),'entry approve(spender : address, value : nat) {\n  var k = (caller, spender);\n  if allowance.contains(k) then (\n    var previous = allowance[k].amount;\n    dofailif(previous > 0 and value > 0, (("UnsafeAllowanceChange", previous)));\n  );\n  allowance.addupdate( k, { amount = value });\n}\n')))}i.isMDXComponent=!0}}]);