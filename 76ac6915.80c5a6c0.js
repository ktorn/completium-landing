(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{145:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return i})),a.d(e,"metadata",(function(){return s})),a.d(e,"toc",(function(){return l})),a.d(e,"default",(function(){return d}));var n=a(3),c=(a(0),a(224)),o=a(227),r=(a(228),a(225));const i={id:"contract1",title:"Introduction",sidebar_label:"Introduction",slug:"/contract"},s={unversionedId:"contract/contract1",id:"contract/contract1",isDocsHomePage:!1,title:"Introduction",description:"A smart contract is a program that is executed by the blockchain.",source:"@site/docs/contract/contract1.md",slug:"/contract",permalink:"/docs/contract",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/contract/contract1.md",version:"current",sidebar_label:"Introduction",sidebar:"contract",next:{title:"Programming language",permalink:"/docs/contract/programming-language"}},l=[{value:"Structure",id:"structure",children:[]},{value:"Business logic",id:"business-logic",children:[]},{value:"Cost",id:"cost",children:[]},{value:"Limits",id:"limits",children:[]}],b={toc:l};function d({components:t,...e}){return Object(c.b)("wrapper",Object(n.a)({},b,e,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"A smart contract is a program that is executed by the blockchain."),Object(c.b)(o.a,{img:"smart-contract.svg",width:"35%",mdxType:"DappFigure"}),Object(c.b)("p",null,"Smart contracts unleash the full potential of the blockchain because they enable the development of a new class of applications, called ",Object(c.b)("em",{parentName:"p"},"Decentralized Applications")," (DApps), which benefit from blockchain's strengths (decentralization, trust-less, immutability, governance by consensus in ",Object(c.b)(r.a,{to:"/docs/dapp-tools/tezos",mdxType:"Link"},"Tezos")," case, ...)."),Object(c.b)("p",null,"A smart contract is similar to a stored procedure on a public distributed database. As such, it must ensure the ",Object(c.b)("strong",{parentName:"p"},"logical consistency")," and integrity of the data."),Object(c.b)("h2",{id:"structure"},"Structure"),Object(c.b)("p",null,"A smart contract possesses:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"an ",Object(c.b)("em",{parentName:"li"},"address")),Object(c.b)("li",{parentName:"ol"},"a ",Object(c.b)("em",{parentName:"li"},"balance")," of currency"),Object(c.b)("li",{parentName:"ol"},"a ",Object(c.b)("em",{parentName:"li"},"storage")," of data"),Object(c.b)("li",{parentName:"ol"},"a ",Object(c.b)("em",{parentName:"li"},"code")," to implement the contract's ",Object(c.b)("em",{parentName:"li"},"business logic"),", structured as ",Object(c.b)("em",{parentName:"li"},"entrypoints")," to call")),Object(c.b)("p",null,"Contract storage, code and transactions (incoming and outcoming) are all ",Object(c.b)("em",{parentName:"p"},"publically")," available."),Object(c.b)("h2",{id:"business-logic"},"Business logic"),Object(c.b)("p",null,"Besides the storage data, the following information is available to the contract's business logic:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"when")," the contract is called"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"who")," the contract is called by"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"how much")," currency is ",Object(c.b)("strong",{parentName:"li"},"transferred")," to the contract"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"how much")," currency the contract ",Object(c.b)("strong",{parentName:"li"},"owns")," (balance)")),Object(c.b)("p",null,"The contract can be programmed to send currency to an account or to another contract."),Object(c.b)("h2",{id:"cost"},"Cost"),Object(c.b)("p",null,"Originating (deploying) a smart contract has a cost which depends on the size of the code and the size of the initial storage."),Object(c.b)("p",null,"Calling a smart contract has a cost which depends on:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"the complexity of the execution (number and nature of instructions executed by the program)"),Object(c.b)("li",{parentName:"ul"},"the size of additional data it creates"),Object(c.b)("li",{parentName:"ul"},"a constant fee")),Object(c.b)("p",null,"Currently on ",Object(c.b)(r.a,{to:"/docs/dapp-tools/tezos",mdxType:"Link"},"Tezos"),", the cost of origination is 0.000250 \ua729 per byte of data. The constant fee is the ",Object(c.b)("em",{parentName:"p"},"baker fee")," equal to 0.001189 \ua729 (it may be increased to increase transaction priority)."),Object(c.b)("p",null,"Note that once data storage is allocated to the contract, it does not decrease; if data has been removed by the contract, additional data does not require payment while total data size remains below allocated storage size."),Object(c.b)("h2",{id:"limits"},"Limits"),Object(c.b)("p",null,"The ",Object(c.b)("em",{parentName:"p"},"gas")," is the unit to measure code execution and storage allocation for any kind of transactions (origination, call to an entrypoint)."),Object(c.b)("p",null,"Currently on ",Object(c.b)(r.a,{to:"/docs/dapp-tools/tezos",mdxType:"Link"},"Tezos"),", the gas per transaction is limited to 1040000."))}d.isMDXComponent=!0}}]);