(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{88:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return r})),n.d(e,"metadata",(function(){return p})),n.d(e,"toc",(function(){return s})),n.d(e,"default",(function(){return d}));var o=n(3),a=(n(0),n(224)),i=n(228),c=(n(227),n(225));const r={id:"iot6",title:"Contract Origination",sidebar_label:"Contract origination",slug:"/dapp-iot/origination"},p={unversionedId:"dapp-iot/iot6",id:"dapp-iot/iot6",isDocsHomePage:!1,title:"Contract Origination",description:"The smart contract is written in Archetype language. Go to the Smart contract section for a detailed presentation.",source:"@site/docs/dapp-iot/iot6.md",slug:"/dapp-iot/origination",permalink:"/docs/dapp-iot/origination",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dapp-iot/iot6.md",version:"current",sidebar_label:"Contract origination",sidebar:"dapps",previous:{title:"Technical guide presentation",permalink:"/docs/dapp-iot/tg-presentation"},next:{title:"Contract Interactions",permalink:"/docs/dapp-iot/interactions"}},s=[],l={toc:s};function d({components:t,...e}){return Object(a.b)("wrapper",Object(o.a)({},l,e,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The smart contract is written in ",Object(a.b)("a",{href:"https://archetype-lang.org/"},"Archetype")," language. Go to the ",Object(a.b)(c.a,{to:"",mdxType:"Link"},"Smart contract")," section for a detailed presentation."),Object(a.b)("p",null,"In VSCode, open the ",Object(a.b)(c.a,{to:"/docs/dapp-tools/gitpod#open-terminal",mdxType:"Link"},"terminal")," and enter the following command line to originate (deploy) the smart contract is:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"completium-cli deploy ./contract/switch.arl --named iot\n")),Object(a.b)("p",null,"The ",Object(a.b)(c.a,{to:"/docs/cli/contract#deploy--originate",mdxType:"Link"},"originate command")," triggers two operations:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"the contract compilation to Michelson with archetype compiler"),Object(a.b)("li",{parentName:"ul"},"the Michelson contract origination with Tezos client")),Object(a.b)("p",null,"The contract may then be referred to as ",Object(a.b)("inlineCode",{parentName:"p"},"iot")," in future interactions."),Object(a.b)("p",null,"If you are using the preset ",Object(a.b)(c.a,{to:"/docs/dapp-tools/gitpod",mdxType:"Link"},"Gitpod")," environement, note that ",Object(a.b)(c.a,{to:"/docs/cli",mdxType:"Link"},"completium-cli")," is pre-installed with the ",Object(a.b)(c.a,{to:"/docs/dapp-tools/faucet#admin-account",mdxType:"Link"},"admin")," account. See this section for more information."),Object(a.b)("p",null,"The address of the newly originated contract is visible with this command:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"completium-cli show contract iot\n")),Object(a.b)("p",null,"A smart contract address starts with ",Object(a.b)("inlineCode",{parentName:"p"},"KT1"),". In the situation above, the new contract's address is ",Object(a.b)("inlineCode",{parentName:"p"},"KT19ZQUnVrDT5xnfvPqYhn1DeM489875oWGU"),"."),Object(a.b)("p",null,"You may got to ",Object(a.b)(c.a,{to:"/docs/dapp-tools/bcd",mdxType:"Link"},"Better call dev")," contract explorer to check it:"),Object(a.b)(i.a,{url:"https://better-call.dev/",txt:"go to better call dev",mdxType:"DappButton"}),Object(a.b)("p",null,"The new contract address needs to be set in the DApp's ",Object(a.b)("inlineCode",{parentName:"p"},"src/settings.js")," file, like for example:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'export const contractAddress = "KT19ZQUnVrDT5xnfvPqYhn1DeM489875oWGU"\n')))}d.isMDXComponent=!0}}]);