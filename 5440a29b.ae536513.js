(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{129:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),b=(n(0),n(227)),l=(n(228),n(242)),c=n(243),i={id:"template13",title:"Health care",sidebar_label:"Health care",slug:"/templates/healthcare"},d={unversionedId:"templates/template13",id:"templates/template13",isDocsHomePage:!1,title:"Health care",description:"Introduction",source:"@site/docs/templates/template13.md",slug:"/templates/healthcare",permalink:"/docs/templates/healthcare",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/templates/template13.md",version:"current",sidebar_label:"Health care",sidebar:"templates",previous:{title:"Connected Object",permalink:"/docs/templates/iot"},next:{title:"Idea box",permalink:"/docs/templates/ideabox"}},o=[{value:"Introduction",id:"introduction",children:[]},{value:"API",id:"api",children:[{value:"Storage",id:"storage",children:[]},{value:"Entrypoints",id:"entrypoints",children:[]}]},{value:"Code",id:"code",children:[]}],p={toc:o};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"introduction"},"Introduction"),Object(b.b)("p",null,"This contract between a patient and its insurer establishes the rules of payment:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"between insurance and doctors"),Object(b.b)("li",{parentName:"ul"},"between the patient and the insurer")),Object(b.b)("p",null,"The insurer pays the consultation price to the doctor."),Object(b.b)("p",null,"The patient pays the insurer:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"a fee on a regular basis"),Object(b.b)("li",{parentName:"ul"},"an amount per consultation capped to a fixed deductible amount")),Object(b.b)("h2",{id:"api"},"API"),Object(b.b)("h3",{id:"storage"},"Storage"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"patient")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"address")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Patient's address.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"insurer")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"address")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Insurer's address.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"fee")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"tez")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Fee value, paid by patient to insurer every ",Object(b.b)("inlineCode",{parentName:"td"},"fee_period")," period of time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"fee_period")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"duration")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Covering period for one ",Object(b.b)("inlineCode",{parentName:"td"},"fee")," payment.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"deductible")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"tez")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Maximum amount paid by ",Object(b.b)("inlineCode",{parentName:"td"},"patient")," to ",Object(b.b)("inlineCode",{parentName:"td"},"insurer")," for a consultation.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"doctor")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"collection")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A doctor is defined by an address and the debt due by ",Object(b.b)("inlineCode",{parentName:"td"},"insurer")," to doctor.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"last_fee_date")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Date of last fee payment. Used internally to compute number of due fees.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"patient_confirmed")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"bool")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Has patient confirmed contract ? Used internally to compute ",Object(b.b)("inlineCode",{parentName:"td"},"Running")," state.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"insurer_confirmed")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"bool")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Has insurer confirmed contract ? Used internally to compute ",Object(b.b)("inlineCode",{parentName:"td"},"Running")," state.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"deductible_debt")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"tez")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sum of deductibles due by ",Object(b.b)("inlineCode",{parentName:"td"},"patient")," to ",Object(b.b)("inlineCode",{parentName:"td"},"insurer"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"_state")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"states")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"One of ",Object(b.b)("inlineCode",{parentName:"td"},"Created"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Running"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Canceled"))))),Object(b.b)("h3",{id:"entrypoints"},"Entrypoints"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameters"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"confirm")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Called by ",Object(b.b)("inlineCode",{parentName:"td"},"patient")," and ",Object(b.b)("inlineCode",{parentName:"td"},"insurer")," to confirm contract.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"toRunning")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Internally called by contract to set contrat to ",Object(b.b)("inlineCode",{parentName:"td"},"Running")," state when confirmed by ",Object(b.b)("inlineCode",{parentName:"td"},"patient")," and ",Object(b.b)("inlineCode",{parentName:"td"},"insurer"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"cancel")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Called by ",Object(b.b)("inlineCode",{parentName:"td"},"patient")," or ",Object(b.b)("inlineCode",{parentName:"td"},"insurer")," to cancel contract.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"register_doctor")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"a")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Registers doctor at address ",Object(b.b)("inlineCode",{parentName:"td"},"a"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"declare_consultation")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"p")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A doctor declares a medical consultation for ",Object(b.b)("inlineCode",{parentName:"td"},"patient")," of price ",Object(b.b)("inlineCode",{parentName:"td"},"p"),". ",Object(b.b)("p",null),"It increments:",Object(b.b)("ul",null,Object(b.b)("li",null,Object(b.b)("inlineCode",{parentName:"td"},"deductible_debt")," (paid by ",Object(b.b)("inlineCode",{parentName:"td"},"patient")," to ",Object(b.b)("inlineCode",{parentName:"td"},"insurer"),") by the minimum of ",Object(b.b)("inlineCode",{parentName:"td"},"p")," and ",Object(b.b)("inlineCode",{parentName:"td"},"deductible")),Object(b.b)("li",null,"the debt of ",Object(b.b)("inlineCode",{parentName:"td"},"insurer")," (paid to doctor) by ",Object(b.b)("inlineCode",{parentName:"td"},"p"))))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"pay_doctor")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"doc")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"insurer")," pays doctor ",Object(b.b)("inlineCode",{parentName:"td"},"doc")," the debt value (accumulated by ",Object(b.b)("inlineCode",{parentName:"td"},"declare_declaration"),").")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"pay_fees")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"patient")," pays ",Object(b.b)("inlineCode",{parentName:"td"},"insurer")," the fee. ",Object(b.b)("p",null),"The amount is computed based on ",Object(b.b)("inlineCode",{parentName:"td"},"last_fee_date")," as the number of periods ",Object(b.b)("inlineCode",{parentName:"td"},"period")," multiplied by ",Object(b.b)("inlineCode",{parentName:"td"},"fee"),". It updates ",Object(b.b)("inlineCode",{parentName:"td"},"last_fee_date"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"pay_deductible")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"patient")," pays ",Object(b.b)("inlineCode",{parentName:"td"},"insurer")," the amount of ",Object(b.b)("inlineCode",{parentName:"td"},"deductible_debt")," (accumulated by ",Object(b.b)("inlineCode",{parentName:"td"},"declare_declaration"),").")))),Object(b.b)("h2",{id:"code"},"Code"),Object(b.b)(l.a,{defaultValue:"archetype",values:[{label:"Archetype",value:"archetype"},{label:"Michelson",value:"michelson"},{label:"Specification",value:"specification"}],mdxType:"Tabs"},Object(b.b)(c.a,{value:"archetype",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype",metastring:'title="healthcare.arl"',title:'"healthcare.arl"'}),"archetype health_care(\n  patient       : address,\n  insurer       : address,\n  fee           : tez,\n  fee_period    : duration,\n  deductible    : tez,\n)\n\nvariable last_fee_date : date = now\n\nvariable patient_confirmed : bool = false\nvariable insurer_confirmed : bool = false\n\nvariable deductible_debt : tez = 0tz\n\nasset doctor {\n  addr : address;\n  debt : tez = 0tz;\n}\n\nstates =\n| Created   initial\n| Running\n| Canceled\n\ntransition toRunning () {\n  called by selfaddress\n  from Created to Running\n  with effect { last_fee_date := now }\n}\n\nentry confirm() {\n  if caller = patient then patient_confirmed := true;\n  if caller = insurer then insurer_confirmed := true;\n  if patient_confirmed and insurer_confirmed then\n    transfer 0tz to entry self.toRunning()\n}\n\ntransition cancel () {\n  called by insurer or patient\n  from any to Canceled\n}\n\nentry register_doctor (a : address) {\n  called by patient\n  require { r1 : state = Running; }\n  effect  { doctor.add ({ addr = a }) }\n}\n\nentry declare_consultation (p : tez) {\n  require {\n     r2 : state = Running;\n     r3 : doctor.contains(caller);\n  }\n  effect {\n    doctor.update(caller, { debt += p });\n    deductible_debt += min(p, deductible)\n  }\n}\n\n(* Payment from Insurance to Doctor *)\n\nentry pay_doctor (doc : address) {\n  called by insurer\n  require { r4 : state = Running }\n  effect {\n    var decrease : tez = min(transferred, doctor[doc].debt);\n    transfer decrease to doc;\n    transfer (transferred - decrease) to insurer;\n    doctor.update (doc, { debt -= decrease })\n  }\n}\n\n(* Payments from Patient to Insuance *)\n\nentry pay_fees () {\n  called by patient\n  require { r5 : state = Running }\n  effect {\n    var nb_periods : int = (now - last_fee_date) div fee_period;\n    var due = nb_periods * fee;\n    var decrease : tez = min (transferred, due);\n    transfer decrease to insurer;\n    transfer (transferred - decrease) to patient;\n    last_fee_date += nb_periods * fee_period\n  }\n}\n\nentry pay_deductibles () {\n  called by patient\n  require { r6 : state = Running; }\n  effect {\n    var decrease : tez = min (transferred, deductible_debt);\n    transfer decrease to insurer;\n    transfer (transferred - decrease) to patient;\n    deductible_debt -= decrease\n  }\n}\n"))),Object(b.b)(c.a,{value:"michelson",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),""))),Object(b.b)(c.a,{value:"specification",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype",metastring:'title="healthcare.arl"',title:'"healthcare.arl"'}),"specification entry pay_doctor (docid : address) {\n  postcondition p1 {\n    balance = before.balance\n  }\n}\n\nspecification entry pay_fee () {\n  postcondition p2 {\n    balance = before.balance\n  }\n}\n\nspecification entry pay_consulation () {\n  postcondition p3 {\n    balance = before.balance;\n  }\n}\n")))))}s.isMDXComponent=!0},234:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},240:function(e,t,n){"use strict";var a=n(0),r=n(241);t.a=function(){const e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},241:function(e,t,n){"use strict";var a=n(0);const r=Object(a.createContext)(void 0);t.a=r},242:function(e,t,n){"use strict";var a=n(0),r=n.n(a),b=n(240),l=n(234),c=n(56),i=n.n(c);const d=37,o=39;t.a=function(e){const{lazy:t,block:n,defaultValue:c,values:p,groupId:s,className:m}=e,{tabGroupChoices:u,setTabGroupChoices:O}=Object(b.a)(),[j,N]=Object(a.useState)(c),f=a.Children.toArray(e.children);if(null!=s){const e=u[s];null!=e&&e!==j&&p.some((t=>t.value===e))&&N(e)}const g=e=>{N(e),null!=s&&O(s,e)},y=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":n},m)},p.map((({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===e,className:Object(l.a)("tabs__item",i.a.tabItem,{"tabs__item--active":j===e}),key:e,ref:e=>y.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case o:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case d:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(y,e.target,e)},onFocus:()=>g(e),onClick:()=>{g(e)}},t)))),t?Object(a.cloneElement)(f.filter((e=>e.props.value===j))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},f.map(((e,t)=>Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==j})))))}},243:function(e,t,n){"use strict";var a=n(3),r=n(0),b=n.n(r);t.a=function({children:e,hidden:t,className:n}){return b.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:t,className:n}),e)}}}]);