(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{115:function(n,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return r})),o.d(t,"metadata",(function(){return i})),o.d(t,"toc",(function(){return s})),o.d(t,"default",(function(){return d}));var e=o(3),c=o(7),a=(o(0),o(187)),r=(o(191),o(188),o(189),{id:"zcb7",title:"Interactions",sidebar_label:"Interactions",slug:"/dapp-zcb/interactions"}),i={unversionedId:"dapp-zcb/zcb7",id:"dapp-zcb/zcb7",isDocsHomePage:!1,title:"Interactions",description:"Contract origination",source:"@site/docs/dapp-zcb/zcb7.md",slug:"/dapp-zcb/interactions",permalink:"/completium-landing/docs/dapp-zcb/interactions",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dapp-zcb/zcb7.md",version:"current",sidebar_label:"Interactions",sidebar:"zcb",previous:{title:"Contract Compilation",permalink:"/completium-landing/docs/dapp-zcb/compilation"},next:{title:"Interface",permalink:"/completium-landing/docs/dapp-zcb/interface"}},s=[{value:"Contract origination",id:"contract-origination",children:[]}],p={toc:s};function d(n){var t=n.components,o=Object(c.a)(n,["components"]);return Object(a.b)("wrapper",Object(e.a)({},p,o,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"contract-origination"},"Contract origination"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"src/components/EditorBar.js")," line 42"),Object(a.b)("pre",null,Object(a.b)("code",Object(e.a)({parentName:"pre"},{className:"language-js"}),"const handleClick = () => {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME\n    // Origination 'contract'\n    ///////////////////////////////////////////////////////////////////////////\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(e.a)({parentName:"pre"},{className:"language-js"}),'tezos.wallet.originate({\n  code: ZCBContractCode,\n  init: getStorage(\n    zcbState.contractInfo.issueraccount,\n    zcbState.contractInfo.subscriberaccount,\n    (parseInt(zcbState.contractInfo.faceprice)*1000000).toString(),\n    zcbState.contractInfo.discount,\n    "100",\n    (parseInt(zcbState.contractInfo.duration)*60).toString(),\n    (parseInt(zcbState.contractInfo.period)*60).toString())\n}).send().then(op => {\n  console.log(`Waiting for confirmation of origination...`);\n  props.openSnack();\n  return op.contract()\n}).then (contract => {\n  props.closeSnack();\n  setContractAddress(contract.address);\n  console.log(`Origination completed for ${contract.address}.`);\n}).catch(error => console.log(`Error: ${JSON.stringify(error, null, 2)}`));\n')))}d.isMDXComponent=!0}}]);