"use strict";(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[311],{3079:function(e,n,t){var o=t(7294),r=t(282),a=t(8500),s=t(3457),c=t(9960),i=t(4996);n.Z=function(e){var n=o.useMemo((function(){return(0,a.Z)({palette:{type:"dark"}})}),[!0]);return o.createElement("div",{style:{textAlign:"center",paddingTop:"0px",paddingBottom:"40px"}},o.createElement(s.Z,{theme:n},e.internal?o.createElement(r.Z,{variant:"outlined",size:"large",component:c.Z,to:(0,i.Z)("docs/"+e.url+"/")},e.txt):o.createElement(r.Z,{variant:"outlined",size:"large",onClick:function(){return window.open(e.url,"_blank")}},e.txt)))}},807:function(e,n,t){t(7294),t(4996)},7793:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return l},default:function(){return u}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),s=(t(807),t(7134),t(3079),["components"]),c={id:"game7",title:"Interactions",sidebar_label:"Interactions",slug:"/dapp-game/interactions"},i=void 0,p={unversionedId:"dapp-game/game7",id:"dapp-game/game7",title:"Interactions",description:"Load records",source:"@site/docs/dapp-game/game7.md",sourceDirName:"dapp-game",slug:"/dapp-game/interactions",permalink:"/docs/dapp-game/interactions",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-game/game7.md",tags:[],version:"current",frontMatter:{id:"game7",title:"Interactions",sidebar_label:"Interactions",slug:"/dapp-game/interactions"},sidebar:"dapps",previous:{title:"Contract Origination",permalink:"/docs/dapp-game/origination"},next:{title:"Introduction",permalink:"/docs/dapp-escrow"}},l=[{value:"Load records",id:"load-records",children:[],level:2},{value:"Encrypt",id:"encrypt",children:[],level:2},{value:"Submit score",id:"submit-score",children:[],level:2}],d={toc:l};function u(e){var n=e.components,t=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"load-records"},"Load records"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"async function loadRecords() {\n  try {\n   ///////////////////////////////////////////////////////////////////////////\n   // FIX ME\n   // read contract storage, mainly submission and call DApp's 'setRecords'\n   ///////////////////////////////////////////////////////////////////////////\n  } catch (error) {\n   console.log(`Error: ${error}`);\n  }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const Tezos = new TezosToolkit('https://hangzhounet-tezos.giganode.io');\nconsole.log(contractAddress);\nvar contract  = await Tezos.contract.at(contractAddress);\nvar cstorage  = await contract.storage();\nvar recs      = [];\ncstorage.submission.forEach((s, k, m) => {\n  recs.push({\n    score: parseInt('0'+s.score),\n    account: k\n  });\n});\nsetRecords(sortByScore(recs));\nsetStatus(parseInt('0'+cstorage._state));\n")),(0,a.kt)("h2",{id:"encrypt"},"Encrypt"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"src/components/Competition.js")," line 25"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const handleEncrypt = () => {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME\n    // Encrypt score:\n    // * invoke RPC call 'packData'\n    // * sign with Oracle's private key\n    // NB: this should be done via game server\n    ///////////////////////////////////////////////////////////////////////////\n  }\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'var oracle = new InMemorySigner(\'edsk3eFocAKYDy2GfkFXFnj19ocDFwJ4M4cvrPURgaeyWp19LFzvHE\');\nvar nonce = new Uint8Array(8);\nwindow.crypto.getRandomValues(nonce);\nconsole.log(`score: ${props.score.score}`);\nconst Tezos = new TezosToolkit(\'https://hangzhounet-tezos.giganode.io\');\nTezos.rpc.packData({\n  data: {\n    prim: "Pair",\n    args: [\n      { string: accountAddress },\n      { int: props.score.score.toString() }\n    ]\n  }, type: {\n    prim: "pair",\n    args: [\n      { prim: "address" },\n      { prim: "nat" }\n    ]\n  }\n}).then(wrappedPacked => {\n  const hexScore = wrappedPacked.packed;\n  oracle.sign(hexScore).then(s => {\n    console.log(`score: ${props.score.score.toString(16)}`);\n    console.log(`signed: ${s.sbytes}`);\n    console.log(`sig: ${s.sig}`);\n    console.log(`prefix: ${s.prefixSig}`);\n    props.setSigned({ packed: wrappedPacked.packed, value: s.prefixSig });\n  });\n})\n')),(0,a.kt)("h2",{id:"submit-score"},"Submit score"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"src/components/Competition.js")," line 34"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const submit = () => {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME\n    // Submit score:\n    ///////////////////////////////////////////////////////////////////////////\n  }\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"tezos.wallet.at(contractAddress).then(contract => {\n    contract.methods.submit(props.signed.packed, props.signed.value).send().then(op => {\n      props.openSnack();\n      op.receipt().then(() => {\n        props.closeSnack();\n        props.loadRecords();\n      });\n    }).catch(e => console.log(e));\n});\n")))}u.isMDXComponent=!0}}]);