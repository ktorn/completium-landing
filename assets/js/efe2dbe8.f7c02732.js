(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{222:function(n,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return s})),t.d(r,"metadata",(function(){return c})),t.d(r,"toc",(function(){return l})),t.d(r,"default",(function(){return I}));var i=t(3),e=(t(0),t(238)),a=t(239),m=t(252),p=t(253),o=t(364);const s={id:"template15",title:"Connected Object",sidebar_label:"Connected Object",slug:"/templates/iot"},c={unversionedId:"templates/template15",id:"templates/template15",isDocsHomePage:!1,title:"Connected Object",description:"Introduction",source:"@site/docs/templates/template15.md",slug:"/templates/iot",permalink:"/docs/templates/iot",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/templates/template15.md",version:"current",sidebar_label:"Connected Object",sidebar:"templates",previous:{title:"Miles",permalink:"/docs/templates/miles"},next:{title:"Health care",permalink:"/docs/templates/healthcare"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"API",id:"api",children:[{value:"Storage",id:"storage",children:[]},{value:"Entrypoints",id:"entrypoints",children:[]}]},{value:"Originate",id:"originate",children:[{value:"Command line",id:"command-line",children:[]}]},{value:"Code",id:"code",children:[]}],P={toc:l};function I({components:n,...r}){return Object(e.b)("wrapper",Object(i.a)({},P,r,{components:n,mdxType:"MDXLayout"}),Object(e.b)("h2",{id:"introduction"},"Introduction"),Object(e.b)("p",null,"A connected object reads this contract to decide whether to switch on or off."),Object(e.b)("p",null,"It reads the contract on a regular basis (typically every 5 second):"),Object(e.b)("ul",null,Object(e.b)("li",{parentName:"ul"},"it switches on if the ",Object(e.b)("em",{parentName:"li"},"end of service")," date is in the futur"),Object(e.b)("li",{parentName:"ul"},"it switches off if the ",Object(e.b)("em",{parentName:"li"},"end of service")," date is in the past")),Object(e.b)("p",null,"The object is connected to the internet and executes an HTTP GET request to the Tezos blockchain on a regular basis, and reads the resulting Json answer."),Object(e.b)("p",null,"Any user can transfer tezies to the contract to switch on the object for a duration determined by an exhange rate (tez to duration)."),Object(e.b)("p",null,"See this contract in action in the ",Object(e.b)(a.a,{to:"/docs/dapp-iot/",mdxType:"Link"},"Connected Object")," DApp example."),Object(e.b)("h2",{id:"api"},"API"),Object(e.b)("h3",{id:"storage"},"Storage"),Object(e.b)("table",null,Object(e.b)("thead",{parentName:"table"},Object(e.b)("tr",{parentName:"thead"},Object(e.b)("th",{parentName:"tr",align:null},"Name"),Object(e.b)("th",{parentName:"tr",align:null},"Type"),Object(e.b)("th",{parentName:"tr",align:null},"Description"))),Object(e.b)("tbody",{parentName:"table"},Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"owner")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"adddress")),Object(e.b)("td",{parentName:"tr",align:null},"Object owner can change exchange ",Object(e.b)("inlineCode",{parentName:"td"},"rate")," and collect payments.")),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"rate")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"rational")),Object(e.b)("td",{parentName:"tr",align:null},"Exchange rate between tez and duration: ",Object(e.b)("inlineCode",{parentName:"td"},"rate")," ",Object(e.b)("inlineCode",{parentName:"td"},"time_unit")," in exchange for ",Object(e.b)("inlineCode",{parentName:"td"},"tez_unit")," amount of payment.")),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"endofservice")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"date")),Object(e.b)("td",{parentName:"tr",align:null},"Date of end of service. Read by object to decide whether to switch on or off.")),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"startofservice")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"date")),Object(e.b)("td",{parentName:"tr",align:null},"Date of start of service. For information only.")),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"time_unit")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"duration")),Object(e.b)("td",{parentName:"tr",align:null},"Time unit used in service duration computation.")),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"tez_unit")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"tez")),Object(e.b)("td",{parentName:"tr",align:null},"Tez unit used in service duration computation.")),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"user")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"option<address>")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("ul",null,Object(e.b)("li",null,"some address of the current user to switch on object"),Object(e.b)("li",null," none otherwise")))),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"read_interval")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"duration")),Object(e.b)("td",{parentName:"tr",align:null},"Frequency of read by object.")))),Object(e.b)("h3",{id:"entrypoints"},"Entrypoints"),Object(e.b)("table",null,Object(e.b)("thead",{parentName:"table"},Object(e.b)("tr",{parentName:"thead"},Object(e.b)("th",{parentName:"tr",align:null},"Name"),Object(e.b)("th",{parentName:"tr",align:null},"Argument"),Object(e.b)("th",{parentName:"tr",align:null},"Description"))),Object(e.b)("tbody",{parentName:"table"},Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"start")),Object(e.b)("td",{parentName:"tr",align:null}),Object(e.b)("td",{parentName:"tr",align:null},"Starts service. The duration ",Object(e.b)("em",{parentName:"td"},"d")," of service is computed as: ",Object(e.b)("p",null),Object(e.b)("em",{parentName:"td"},"d")," = ",Object(e.b)("inlineCode",{parentName:"td"},"rate")," * ",Object(e.b)("em",{parentName:"td"},"transferred"))),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"interrupt")),Object(e.b)("td",{parentName:"tr",align:null}),Object(e.b)("td",{parentName:"tr",align:null},"User who started service can interrupt it. ",Object(e.b)("p",null),"It pays back the user so that only the effective duration of service is paid.")),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"collect")),Object(e.b)("td",{parentName:"tr",align:null}),Object(e.b)("td",{parentName:"tr",align:null},"Owner collects payments.")),Object(e.b)("tr",{parentName:"tbody"},Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"setunits")),Object(e.b)("td",{parentName:"tr",align:null},Object(e.b)("inlineCode",{parentName:"td"},"d"),", ",Object(e.b)("inlineCode",{parentName:"td"},"t")),Object(e.b)("td",{parentName:"tr",align:null},"Owner can set time unit to ",Object(e.b)("inlineCode",{parentName:"td"},"d")," and tez unit to ",Object(e.b)("inlineCode",{parentName:"td"},"t")," when computing duration of service.")))),Object(e.b)("h2",{id:"originate"},"Originate"),Object(e.b)("p",null,"Originate a switch contract with the widget below."),Object(e.b)("p",null,'Click "Connect to Wallet" button, fill the fields "Owner" and "Rate", and click "Originate".'),Object(e.b)(o.a,{mdxType:"DeployIOT"}),Object(e.b)("h3",{id:"command-line"},"Command line"),Object(e.b)("p",null,"Originate the contract from ",Object(e.b)("a",{href:"https://archetype-lang.org/"},"Archetype")," code below with the following ",Object(e.b)(a.a,{to:"/docs/cli",mdxType:"Link"},"Completium CLI")," example command:"),Object(e.b)("pre",null,Object(e.b)("code",{parentName:"pre"},"completium-cli deploy switch.arl --init '(@tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG, 2,5)'\n")),Object(e.b)("p",null,"The command sets:"),Object(e.b)("ul",null,Object(e.b)("li",{parentName:"ul"},Object(e.b)("inlineCode",{parentName:"li"},"owner")," constant to ",Object(e.b)("inlineCode",{parentName:"li"},"tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG")),Object(e.b)("li",{parentName:"ul"},Object(e.b)("inlineCode",{parentName:"li"},"rate")," variable to 2.5")),Object(e.b)("h2",{id:"code"},"Code"),Object(e.b)(m.a,{defaultValue:"archetype",values:[{label:"Archetype",value:"archetype"},{label:"Michelson",value:"michelson"}],mdxType:"Tabs"},Object(e.b)(p.a,{value:"archetype",mdxType:"TabItem"},Object(e.b)("pre",null,Object(e.b)("code",{parentName:"pre",className:"language-archetype",metastring:'title="switch.arl"',title:'"switch.arl"'},"archetype switch(\n  owner : address,\n  rate  : rational\n)\n\nvariable endofservice    : date = now\nvariable startofservice  : date = now\n\nvariable time_unit : duration = 1m\nvariable tez_unit : tez = 1tz\n\nvariable user : option<address> = none\n\nvariable read_interval : duration = 5s\n\nfunction get_rate_in_s_by_utz () : rational {\n  var d : int = time_unit;\n  var t : nat = tez_unit;\n  return (rate * d / t)\n}\n\nfunction get_return_tz () : tez {\n  var res : int = 1 / get_rate_in_s_by_utz() * (endofservice - now);\n  return (res * 1utz)\n}\n\nentry start () {\n  require { r1: now > endofservice }\n  effect {\n    var t : nat = transferred;\n    var dur : duration = (get_rate_in_s_by_utz() * t)*1s;\n    if dur > read_interval then begin\n      endofservice   := now + dur + read_interval;\n      startofservice := now;\n      user := some(caller)\n    end\n  }\n}\n\nentry interrupt () {\n  require { r2: caller = opt_get(user) and now < endofservice }\n  effect {\n    transfer (get_return_tz()) to caller;\n    endofservice   := now - read_interval;\n    startofservice := now - read_interval;\n  }\n}\n\nentry collect () {\n  called by owner\n  effect {\n    var keep = 0tz;\n    if now < endofservice then\n      keep := get_return_tz();\n    if balance - keep > 0tz then\n      transfer (balance - keep) to owner\n  }\n}\n\nentry setunits (dunit : duration, tunit : tez) {\n  called by owner\n  effect {\n    time_unit := dunit;\n    tez_unit  := tunit;\n  }\n}\n"))),Object(e.b)(p.a,{value:"michelson",mdxType:"TabItem"},Object(e.b)("pre",null,Object(e.b)("code",{parentName:"pre",className:"language-js"},'# (Pair owner (Pair rate (Pair 1618187115 (Pair 1618187115 (Pair 60 (Pair 1000000 (Pair None 5)))))))\n{\n  storage (pair (address %owner) (pair (pair %rate int nat) (pair (timestamp %endofservice) (pair (timestamp %startofservice) (pair (int %time_unit) (pair (mutez %tez_unit) (pair (option %user address) (int %read_interval))))))));\n  parameter (or (unit %start) (or (unit %interrupt) (or (unit %collect) (pair %setunits (int %dunit) (mutez %tunit)))));\n  code { LAMBDA\n           (pair (pair int nat) (pair mutez int))\n           (pair int nat)\n           { UNPAIR;\n             SWAP;\n             UNPAIR;\n             SWAP;\n             PUSH unit Unit;\n             DIG 1;\n             DUP;\n             DUG 2;\n             PUSH mutez 1;\n             DIG 4;\n             DUP;\n             DUG 5;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               { DUP;\n                 CAR;\n                 SWAP;\n                 DROP };\n             PUSH nat 1;\n             DIG 1;\n             DUP;\n             DUG 2;\n             INT;\n             PAIR;\n             PUSH nat 1;\n             DIG 3;\n             DUP;\n             DUG 4;\n             PAIR;\n             DIG 7;\n             DUP;\n             DUG 8;\n             PAIR;\n             UNPAIR;\n             DIP { UNPAIR };\n             UNPAIR;\n             DIP { SWAP };\n             MUL;\n             DIP { MUL };\n             PAIR;\n             PAIR;\n             UNPAIR;\n             DIP { UNPAIR };\n             UNPAIR;\n             DIG 3;\n             PUSH int 0;\n             DIG 4;\n             DUP;\n             DUG 5;\n             COMPARE;\n             GE;\n             IF\n               { INT }\n               { NEG };\n             MUL;\n             DIP { MUL; ABS };\n             PAIR;\n             DIP { DIG 2; DROP };\n             DUG 2;\n             DROP 2;\n             DUG 3;\n             DROP 3 };\n         LAMBDA\n           (pair timestamp (pair (pair int nat) (pair mutez (pair int (lambda (pair (pair int nat) (pair mutez int)) (pair int nat))))))\n           mutez\n           { UNPAIR;\n             SWAP;\n             UNPAIR;\n             SWAP;\n             UNPAIR;\n             SWAP;\n             UNPAIR;\n             SWAP;\n             PUSH unit Unit;\n             NOW;\n             DIG 6;\n             DUP;\n             DUG 7;\n             SUB;\n             DIG 2;\n             DUP;\n             DUG 3;\n             DIG 4;\n             DUP;\n             DUG 5;\n             DIG 6;\n             DUP;\n             DUG 7;\n             PAIR;\n             DIG 7;\n             DUP;\n             DUG 8;\n             PAIR;\n             EXEC;\n             PUSH nat 1;\n             PUSH nat 1;\n             INT;\n             PAIR;\n             PAIR;\n             UNPAIR;\n             DIP { UNPAIR };\n             UNPAIR;\n             DIG 3;\n             PUSH int 0;\n             DIG 4;\n             DUP;\n             DUG 5;\n             COMPARE;\n             GE;\n             IF\n               { INT }\n               { NEG };\n             MUL;\n             DIP { MUL; ABS };\n             PAIR;\n             PAIR;\n             UNPAIR;\n             UNPAIR;\n             DIG 2;\n             MUL;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               {  };\n             CAR;\n             PUSH mutez 1;\n             PUSH nat 1;\n             DIG 2;\n             DUP;\n             DUG 3;\n             PAIR;\n             PAIR;\n             UNPAIR;\n             UNPAIR;\n             ABS;\n             DIG 2;\n             MUL;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               {  };\n             CAR;\n             DIP { DIG 1; DROP };\n             DUG 1;\n             DROP;\n             DUG 5;\n             DROP 5 };\n         NIL operation;\n         DIG 3;\n         UNPAIR;\n         DIP { UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP };\n         IF_LEFT\n           { DROP;\n             DIG 5;\n             DUP;\n             DUG 6;\n             NOW;\n             COMPARE;\n             GT;\n             NOT;\n             IF\n               { PUSH string "InvalidCondition: r1";\n                 FAILWITH }\n               {  };\n             PUSH mutez 1;\n             AMOUNT;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               { DUP;\n                 CAR;\n                 SWAP;\n                 DROP };\n             PUSH int 1;\n             PUSH nat 1;\n             DIG 2;\n             DUP;\n             DUG 3;\n             INT;\n             PAIR;\n             DIG 13;\n             DUP;\n             DUG 14;\n             DIG 7;\n             DUP;\n             DUG 8;\n             DIG 7;\n             DUP;\n             DUG 8;\n             PAIR;\n             DIG 11;\n             DUP;\n             DUG 12;\n             PAIR;\n             EXEC;\n             PAIR;\n             UNPAIR;\n             DIP { UNPAIR };\n             UNPAIR;\n             DIP { SWAP };\n             MUL;\n             DIP { MUL };\n             PAIR;\n             PAIR;\n             UNPAIR;\n             UNPAIR;\n             DIG 2;\n             MUL;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               {  };\n             CAR;\n             DIG 2;\n             DUP;\n             DUG 3;\n             DIG 1;\n             DUP;\n             DUG 2;\n             COMPARE;\n             GT;\n             IF\n               { DIG 2;\n                 DUP;\n                 DUG 3;\n                 DIG 1;\n                 DUP;\n                 DUG 2;\n                 NOW;\n                 ADD;\n                 ADD;\n                 DIP { DIG 7; DROP };\n                 DUG 7;\n                 NOW;\n                 DIP { DIG 6; DROP };\n                 DUG 6;\n                 SENDER;\n                 SOME;\n                 DIP { DIG 3; DROP };\n                 DUG 3 }\n               {  };\n             DROP 2;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             DIG 1;\n             PAIR }\n           { IF_LEFT\n               { DROP;\n                 DIG 5;\n                 DUP;\n                 DUG 6;\n                 NOW;\n                 COMPARE;\n                 LT;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 IF_NONE\n                   { PUSH string "NoneValue";\n                     FAILWITH }\n                   {  };\n                 SENDER;\n                 COMPARE;\n                 EQ;\n                 AND;\n                 NOT;\n                 IF\n                   { PUSH string "InvalidCondition: r2";\n                     FAILWITH }\n                   {  };\n                 DIG 8;\n                 DUP;\n                 DUG 9;\n                 SENDER;\n                 CONTRACT unit;\n                 IF_NONE\n                   { PUSH string "BadContract";\n                     FAILWITH }\n                   {  };\n                 DIG 11;\n                 DUP;\n                 DUG 12;\n                 DIG 13;\n                 DUP;\n                 DUG 14;\n                 DIG 7;\n                 DUP;\n                 DUG 8;\n                 PAIR;\n                 DIG 6;\n                 DUP;\n                 DUG 7;\n                 PAIR;\n                 DIG 10;\n                 DUP;\n                 DUG 11;\n                 PAIR;\n                 DIG 9;\n                 DUP;\n                 DUG 10;\n                 PAIR;\n                 EXEC;\n                 UNIT;\n                 TRANSFER_TOKENS;\n                 CONS;\n                 DIP { DIG 8; DROP };\n                 DUG 8;\n                 DUP;\n                 NOW;\n                 SUB;\n                 DIP { DIG 5; DROP };\n                 DUG 5;\n                 DUP;\n                 NOW;\n                 SUB;\n                 DIP { DIG 4; DROP };\n                 DUG 4;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 DIG 1;\n                 PAIR }\n               { IF_LEFT\n                   { DROP;\n                     DIG 7;\n                     DUP;\n                     DUG 8;\n                     SENDER;\n                     COMPARE;\n                     EQ;\n                     NOT;\n                     IF\n                       { PUSH string "InvalidCaller";\n                         FAILWITH }\n                       {  };\n                     PUSH mutez 0;\n                     DIG 6;\n                     DUP;\n                     DUG 7;\n                     NOW;\n                     COMPARE;\n                     LT;\n                     IF\n                       { DIG 10;\n                         DUP;\n                         DUG 11;\n                         DIG 12;\n                         DUP;\n                         DUG 13;\n                         DIG 6;\n                         DUP;\n                         DUG 7;\n                         PAIR;\n                         DIG 5;\n                         DUP;\n                         DUG 6;\n                         PAIR;\n                         DIG 9;\n                         DUP;\n                         DUG 10;\n                         PAIR;\n                         DIG 8;\n                         DUP;\n                         DUG 9;\n                         PAIR;\n                         EXEC;\n                         SWAP;\n                         DROP }\n                       {  };\n                     PUSH mutez 0;\n                     DIG 1;\n                     DUP;\n                     DUG 2;\n                     BALANCE;\n                     SUB;\n                     COMPARE;\n                     GT;\n                     IF\n                       { DIG 9;\n                         DUP;\n                         DUG 10;\n                         DIG 9;\n                         DUP;\n                         DUG 10;\n                         CONTRACT unit;\n                         IF_NONE\n                           { PUSH string "BadContract";\n                             FAILWITH }\n                           {  };\n                         DIG 2;\n                         DUP;\n                         DUG 3;\n                         BALANCE;\n                         SUB;\n                         UNIT;\n                         TRANSFER_TOKENS;\n                         CONS;\n                         DIP { DIG 9; DROP };\n                         DUG 9 }\n                       {  };\n                     DROP;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     DIG 1;\n                     PAIR }\n                   { UNPAIR;\n                     SWAP;\n                     DIG 9;\n                     DUP;\n                     DUG 10;\n                     SENDER;\n                     COMPARE;\n                     EQ;\n                     NOT;\n                     IF\n                       { PUSH string "InvalidCaller";\n                         FAILWITH }\n                       {  };\n                     DIG 1;\n                     DUP;\n                     DUG 2;\n                     DIP { DIG 5; DROP };\n                     DUG 5;\n                     DUP;\n                     DIP { DIG 4; DROP };\n                     DUG 4;\n                     DROP 2;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     DIG 1;\n                     PAIR } } };\n         DIP { DROP 2 } };\n}\n')))))}I.isMDXComponent=!0},264:function(n,r,t){"use strict";t.d(r,"a",(function(){return p})),t.d(r,"f",(function(){return o})),t.d(r,"e",(function(){return s})),t.d(r,"b",(function(){return c})),t.d(r,"d",(function(){return l})),t.d(r,"c",(function(){return P}));var i=t(0),e=t.n(i),a=t(274),m=t(330);const[p,o,s,c,l,P]=Object(a.a)((function({appName:n}){const[{wallet:r,tezos:t,accountPkh:i},a]=e.a.useState((()=>({wallet:null,tezos:null,accountPkh:null}))),p=Boolean(t);e.a.useEffect((()=>m.a.onAvailabilityChange((r=>{a({wallet:r?new m.a(n):null,tezos:null,accountPkh:null})}))),[a,n]);const o=e.a.useCallback((async(n,t)=>{try{if(!r)throw new Error("Thanos Wallet not available");await r.connect(n,t);const i=r.toTezos(),e=await i.wallet.pkh();a({wallet:r,tezos:i,accountPkh:e})}catch(i){alert(`Failed to connect ThanosWallet: ${i.message}`)}}),[a,r]);return{wallet:r,tezos:t,accountPkh:i,ready:p,connect:o}}),(n=>n.wallet),(n=>n.tezos),(n=>n.accountPkh),(n=>n.ready),(n=>n.connect))},265:function(n,r,t){"use strict";t.d(r,"a",(function(){return a})),t.d(r,"b",(function(){return m}));var i=t(0),e=t(274);const[a,m]=Object(e.a)((function(){const[n,r]=Object(i.useState)({show:!1,severity:"info",msg:""});return{snackState:n,setInfoSnack:n=>{r({show:!0,severity:"info",msg:n})},setErrorSnack:n=>{r({show:!0,severity:"error",msg:n})},hideSnack:()=>{r((n=>({...n,show:!1})))}}}))},266:function(n,r,t){"use strict";t.d(r,"b",(function(){return i})),t.d(r,"a",(function(){return e}));var i="florencenet",e="florencenet"},293:function(n,r,t){"use strict";var i=t(3),e=t(0),a=t.n(e),m=t(618),p=t(615),o=t(329),s=t(265);function c(n){return a.a.createElement(p.a,Object(i.a)({elevation:6,variant:"filled"},n))}r.a=()=>{const{snackState:n}=Object(s.b)();Object(o.a)();return a.a.createElement(m.a,{open:n.show},a.a.createElement(c,{severity:n.severity},n.msg))}},294:function(n,r,t){"use strict";var i=t(0),e=t.n(i),a=t(264),m=t(266),p=t(604),o=t(610),s=t(329);r.a=n=>{const r=Object(s.a)(),t=Object(a.d)(),i=Object(a.f)(),c=Object(a.c)(),l=e.a.useCallback((n=>async()=>{try{await c(n?"mainnet":m.b)}catch(r){alert(r.message)}}),[c]);return t?e.a.createElement("div",null):i?e.a.createElement(p.a,{variant:"outlined",color:r.palette.text.primary,onClick:l(n.main)},"connect to wallet"):e.a.createElement(o.a,{href:"https://templewallet.com/",rel:"noopener",underline:"none"},e.a.createElement(p.a,{variant:"contained",disableElevation:!0,style:{backgroundColor:"#ed8936",color:"white",fontWeight:"bold"}},"install Temple"))}},320:function(n,r){},321:function(n,r){},325:function(n,r){},326:function(n,r){},327:function(n,r){},328:function(n,r){},361:function(n,r){var t,i;Fraction=function(n,r){if(void 0!==n&&r)"number"==typeof n&&"number"==typeof r?(this.numerator=n,this.denominator=r):"string"==typeof n&&"string"==typeof r&&(this.numerator=parseInt(n),this.denominator=parseInt(r));else if(void 0===r)if(num=n,"number"==typeof num)this.numerator=num,this.denominator=1;else if("string"==typeof num){var t,i,e=num.split(" ");if(e[0]&&(t=e[0]),e[1]&&(i=e[1]),t%1==0&&i&&i.match("/"))return new Fraction(t).add(new Fraction(i));if(!t||i)return;if("string"==typeof t&&t.match("/")){var a=t.split("/");this.numerator=a[0],this.denominator=a[1]}else{if("string"==typeof t&&t.match("."))return new Fraction(parseFloat(t));this.numerator=parseInt(t),this.denominator=1}}this.normalize()},Fraction.prototype.clone=function(){return new Fraction(this.numerator,this.denominator)},Fraction.prototype.toString=function(){if("NaN"===this.denominator)return"NaN";var n=this.numerator/this.denominator>0?Math.floor(this.numerator/this.denominator):Math.ceil(this.numerator/this.denominator),r=this.numerator%this.denominator,t=this.denominator,i=[];return 0!=n&&i.push(n),0!=r&&i.push((0===n?r:Math.abs(r))+"/"+t),i.length>0?i.join(" "):0},Fraction.prototype.rescale=function(n){return this.numerator*=n,this.denominator*=n,this},Fraction.prototype.add=function(n){var r=this.clone();return n=n instanceof Fraction?n.clone():new Fraction(n),td=r.denominator,r.rescale(n.denominator),n.rescale(td),r.numerator+=n.numerator,r.normalize()},Fraction.prototype.subtract=function(n){var r=this.clone();return n=n instanceof Fraction?n.clone():new Fraction(n),td=r.denominator,r.rescale(n.denominator),n.rescale(td),r.numerator-=n.numerator,r.normalize()},Fraction.prototype.multiply=function(n){var r=this.clone();if(n instanceof Fraction)r.numerator*=n.numerator,r.denominator*=n.denominator;else{if("number"!=typeof n)return r.multiply(new Fraction(n));r.numerator*=n}return r.normalize()},Fraction.prototype.divide=function(n){var r=this.clone();if(n instanceof Fraction)r.numerator*=n.denominator,r.denominator*=n.numerator;else{if("number"!=typeof n)return r.divide(new Fraction(n));r.denominator*=n}return r.normalize()},Fraction.prototype.equals=function(n){n instanceof Fraction||(n=new Fraction(n));var r=this.clone().normalize();n=n.clone().normalize();return r.numerator===n.numerator&&r.denominator===n.denominator},Fraction.prototype.normalize=(t=function(n){return"number"==typeof n&&(n>0&&n%1>0&&n%1<1||n<0&&n%-1<0&&n%-1>-1)},i=function(n,r){if(r){var t=Math.pow(10,r);return Math.round(n*t)/t}return Math.round(n)},function(){if(t(this.denominator)){var n=i(this.denominator,9),r=Math.pow(10,n.toString().split(".")[1].length);this.denominator=Math.round(this.denominator*r),this.numerator*=r}t(this.numerator)&&(n=i(this.numerator,9),r=Math.pow(10,n.toString().split(".")[1].length),this.numerator=Math.round(this.numerator*r),this.denominator*=r);var e=Fraction.gcf(this.numerator,this.denominator);return this.numerator/=e,this.denominator/=e,(this.numerator<0&&this.denominator<0||this.numerator>0&&this.denominator<0)&&(this.numerator*=-1,this.denominator*=-1),this}),Fraction.gcf=function(n,r){var t=[],i=Fraction.primeFactors(n),e=Fraction.primeFactors(r);return i.forEach((function(n){var r=e.indexOf(n);r>=0&&(t.push(n),e.splice(r,1))})),0===t.length?1:function(){var n,r=t[0];for(n=1;n<t.length;n++)r*=t[n];return r}()},Fraction.primeFactors=function(n){for(var r=Math.abs(n),t=[],i=2;i*i<=r;)r%i==0?(t.push(i),r/=i):i++;return 1!=r&&t.push(r),t},n.exports.Fraction=Fraction},364:function(n,r,t){"use strict";var i=t(0),e=t.n(i),a=t(452),m=t(392),p=t(613),o=t(393),s=t(604),c=t(564),l=t(602),P=t(264),I=t(293),D=t(265),u=t(294);const d=[{prim:"storage",args:[{prim:"pair",args:[{prim:"address",annots:["%owner"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"int"},{prim:"nat"}],annots:["%rate"]},{prim:"pair",args:[{prim:"timestamp",annots:["%endofservice"]},{prim:"pair",args:[{prim:"timestamp",annots:["%startofservice"]},{prim:"pair",args:[{prim:"int",annots:["%time_unit"]},{prim:"pair",args:[{prim:"mutez",annots:["%tez_unit"]},{prim:"pair",args:[{prim:"option",args:[{prim:"address"}],annots:["%user"]},{prim:"int",annots:["%read_interval"]}]}]}]}]}]}]}]}]},{prim:"parameter",args:[{prim:"or",args:[{prim:"unit",annots:["%start"]},{prim:"or",args:[{prim:"unit",annots:["%interrupt"]},{prim:"or",args:[{prim:"unit",annots:["%collect"]},{prim:"pair",args:[{prim:"int",annots:["%dunit"]},{prim:"mutez",annots:["%tunit"]}],annots:["%setunits"]}]}]}]}]},{prim:"code",args:[[{prim:"LAMBDA",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"int"},{prim:"nat"}]},{prim:"pair",args:[{prim:"mutez"},{prim:"int"}]}]},{prim:"pair",args:[{prim:"int"},{prim:"nat"}]},[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"PUSH",args:[{prim:"unit"},{prim:"Unit"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"PUSH",args:[{prim:"mutez"},{int:"1"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[{prim:"DUP"},{prim:"CAR"},{prim:"SWAP"},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"INT"},{prim:"PAIR"},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"}]]},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"SWAP"}]]},{prim:"MUL"},{prim:"DIP",args:[{int:"1"},[{prim:"MUL"}]]},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"}]]},{prim:"UNPAIR"},{prim:"DIG",args:[{int:"3"}]},{prim:"PUSH",args:[{prim:"int"},{int:"0"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"COMPARE"},{prim:"GE"},{prim:"IF",args:[[{prim:"INT"}],[{prim:"NEG"}]]},{prim:"MUL"},{prim:"DIP",args:[{int:"1"},[{prim:"MUL"},{prim:"ABS"}]]},{prim:"PAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"2"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"2"}]},{prim:"DROP",args:[{int:"2"}]},{prim:"DUG",args:[{int:"3"}]},{prim:"DROP",args:[{int:"3"}]}]]},{prim:"LAMBDA",args:[{prim:"pair",args:[{prim:"timestamp"},{prim:"pair",args:[{prim:"pair",args:[{prim:"int"},{prim:"nat"}]},{prim:"pair",args:[{prim:"mutez"},{prim:"pair",args:[{prim:"int"},{prim:"lambda",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"int"},{prim:"nat"}]},{prim:"pair",args:[{prim:"mutez"},{prim:"int"}]}]},{prim:"pair",args:[{prim:"int"},{prim:"nat"}]}]}]}]}]}]},{prim:"mutez"},[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"PUSH",args:[{prim:"unit"},{prim:"Unit"}]},{prim:"NOW"},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"SUB"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"EXEC"},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"INT"},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"}]]},{prim:"UNPAIR"},{prim:"DIG",args:[{int:"3"}]},{prim:"PUSH",args:[{prim:"int"},{int:"0"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"COMPARE"},{prim:"GE"},{prim:"IF",args:[[{prim:"INT"}],[{prim:"NEG"}]]},{prim:"MUL"},{prim:"DIP",args:[{int:"1"},[{prim:"MUL"},{prim:"ABS"}]]},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"UNPAIR"},{prim:"DIG",args:[{int:"2"}]},{prim:"MUL"},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[]]},{prim:"CAR"},{prim:"PUSH",args:[{prim:"mutez"},{int:"1"}]},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"UNPAIR"},{prim:"ABS"},{prim:"DIG",args:[{int:"2"}]},{prim:"MUL"},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[]]},{prim:"CAR"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"1"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"1"}]},{prim:"DROP",args:[{int:"1"}]},{prim:"DUG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"5"}]}]]},{prim:"NIL",args:[{prim:"operation"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"}]]},{prim:"IF_LEFT",args:[[{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"NOW"},{prim:"COMPARE"},{prim:"GT"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"InvalidCondition: r1"}]},{prim:"FAILWITH"}],[]]},{prim:"PUSH",args:[{prim:"mutez"},{int:"1"}]},{prim:"AMOUNT"},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[{prim:"DUP"},{prim:"CAR"},{prim:"SWAP"},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"PUSH",args:[{prim:"int"},{int:"1"}]},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"INT"},{prim:"PAIR"},{prim:"DIG",args:[{int:"13"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"14"}]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"11"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"12"}]},{prim:"PAIR"},{prim:"EXEC"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"}]]},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"SWAP"}]]},{prim:"MUL"},{prim:"DIP",args:[{int:"1"},[{prim:"MUL"}]]},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"UNPAIR"},{prim:"DIG",args:[{int:"2"}]},{prim:"MUL"},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[]]},{prim:"CAR"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"COMPARE"},{prim:"GT"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"NOW"},{prim:"ADD"},{prim:"ADD"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"7"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"7"}]},{prim:"NOW"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"6"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"6"}]},{prim:"SENDER"},{prim:"SOME"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"3"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"3"}]}],[]]},{prim:"DROP",args:[{int:"2"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"NOW"},{prim:"COMPARE"},{prim:"LT"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"NoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"SENDER"},{prim:"COMPARE"},{prim:"EQ"},{prim:"AND"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"InvalidCondition: r2"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"8"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"9"}]},{prim:"SENDER"},{prim:"CONTRACT",args:[{prim:"unit"}]},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"BadContract"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"11"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"12"}]},{prim:"DIG",args:[{int:"13"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"14"}]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"10"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"11"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"PAIR"},{prim:"EXEC"},{prim:"UNIT"},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"8"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"8"}]},{prim:"DUP"},{prim:"NOW"},{prim:"SUB"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DUP"},{prim:"NOW"},{prim:"SUB"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"SENDER"},{prim:"COMPARE"},{prim:"EQ"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"InvalidCaller"}]},{prim:"FAILWITH"}],[]]},{prim:"PUSH",args:[{prim:"mutez"},{int:"0"}]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"NOW"},{prim:"COMPARE"},{prim:"LT"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"10"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"11"}]},{prim:"DIG",args:[{int:"12"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"13"}]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"8"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"9"}]},{prim:"PAIR"},{prim:"EXEC"},{prim:"SWAP"},{prim:"DROP",args:[{int:"1"}]}],[]]},{prim:"PUSH",args:[{prim:"mutez"},{int:"0"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"BALANCE"},{prim:"SUB"},{prim:"COMPARE"},{prim:"GT"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"CONTRACT",args:[{prim:"unit"}]},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"BadContract"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"BALANCE"},{prim:"SUB"},{prim:"UNIT"},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"9"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"9"}]}],[]]},{prim:"DROP",args:[{int:"1"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"SENDER"},{prim:"COMPARE"},{prim:"EQ"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"InvalidCaller"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"2"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}]]}]]}]]},{prim:"DIP",args:[{int:"1"},[{prim:"DROP",args:[{int:"2"}]}]]}]]}],g=(n,r)=>({prim:"Pair",args:[{string:n},{prim:"Pair",args:[r,{prim:"Pair",args:[{int:"1618169559"},{prim:"Pair",args:[{int:"1618169559"},{prim:"Pair",args:[{int:"60"},{prim:"Pair",args:[{int:"1000000"},{prim:"Pair",args:[{prim:"None"},{int:"5"}]}]}]}]}]}]}]});var b=t(239),U=t(619),A=t(266);const O=n=>{const r=r=>{n.setMain(r.target.checked)};if(Object(P.d)()){const n=Object(P.b)();return e.a.createElement(m.a,{container:!0,direction:"column",justify:"center",alignItems:"center"},e.a.createElement(o.a,{variant:"subtitle2"},"Connected with:"),e.a.createElement(o.a,{variant:"subtitle2",style:{fontFamily:"Courier Prime, monospace"}},n))}return e.a.createElement(m.a,{container:!0},e.a.createElement(m.a,{item:!0,xs:8},e.a.createElement(u.a,{main:n.main})),e.a.createElement(m.a,{item:!0,xs:2},e.a.createElement(U.a,{checked:n.main,onChange:r,name:"checkedB",color:"primary"})),e.a.createElement(m.a,{item:!0,xs:2},e.a.createElement(o.a,{variant:"subtitle2",style:{marginTop:"8px"}},"Mainnet")))};const N=n=>e.a.createElement(m.a,{container:!0,direction:"column",justify:"center",alignItems:"center"},e.a.createElement(o.a,{variant:"subtitle2"},"Contract available at:"),e.a.createElement(o.a,{component:b.a,to:"https://better-call.dev/"+(n.main?"mainnet":A.a)+"/"+n.contract+"/operations",variant:"subtitle2",style:{fontFamily:"Courier Prime, monospace"}},n.contract)),R=()=>{const[n,r]=e.a.useState(""),[i,o]=e.a.useState(1.5),[c,l]=e.a.useState(""),[I,u]=e.a.useState(!1),{setInfoSnack:b,setErrorSnack:U,hideSnack:A}=Object(D.b)(),R=Object(P.e)(),G=Object(P.d)(),h=()=>{return n.length>0&(36!==(r=n).length|!r.startsWith("tz1"));var r},S=()=>!(i>0);return e.a.createElement(a.a,{style:{backgroundColor:"transparent",border:"1px solid #606770",marginTop:"20px",marginBottom:"20px"},raised:!1},e.a.createElement(m.a,{container:!0,style:{padding:22},spacing:3},e.a.createElement(m.a,{item:!0,xs:6},e.a.createElement(p.a,{onChange:n=>{r(n.target.value)},value:n,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"initalholder",label:"Owner",error:h(),helperText:h()?"Invalid address format":""})),e.a.createElement(m.a,{item:!0,xs:6,style:{textAlign:"center",marginTop:"10px"}},e.a.createElement(O,{main:I,setMain:u})),e.a.createElement(m.a,{item:!0,xs:6},e.a.createElement(p.a,{type:"number",onChange:n=>{o(n.target.value)},error:S(),helperText:S()?"Invalid Number":"",value:i,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"totalsupply",label:"Rate"})),e.a.createElement(m.a,{item:!0,xs:6,style:{textAlign:"center",marginTop:"10px"}},""!==c?e.a.createElement(N,{contract:c,main:I}):e.a.createElement(s.a,{variant:"contained",color:"primary",disableElevation:!0,disabled:!G|S()|h()|0==n.length,onClick:async()=>{try{const r=new(0,t(361).Fraction)(i),e={prim:"Pair",args:[{int:r.numerator.toString()},{int:r.denominator.toString()}]},a=await R.wallet.originate({code:d,init:g(n,e)}).send(),m=a.opHash.substring(0,10)+"...";b(`waiting for ${m} to be confirmed ...`);const p=await a.contract();A(),console.log(`Origination completed for ${p.address}.`),setTimeout((()=>l(p.address)),5e3)}catch(r){console.log(r),U(r.message),setTimeout(A,4e3)}}},"originate"))))};r.a=n=>{const r=e.a.useMemo((()=>Object(c.a)({palette:{type:"dark",primary:{light:"#1dc5ff",main:"#00ACE7",dark:"#0a90bf",contrastText:"#fff"}}})),[!0]);return e.a.createElement(P.a,{appName:"Completium IOT"},e.a.createElement(D.a,null,e.a.createElement(l.a,{theme:r},e.a.createElement(R,null),e.a.createElement(I.a,null))))}}}]);