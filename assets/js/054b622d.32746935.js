"use strict";(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[4597],{8496:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return m},toc:function(){return c},default:function(){return u}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=n(9960),o=["components"],p={id:"cli3",title:"Contract",sidebar_label:"Contract",slug:"/cli/contract"},d=void 0,m={unversionedId:"cli/cli3",id:"cli/cli3",title:"Contract",description:"Deploy / originate",source:"@site/docs/cli/cli3.md",sourceDirName:"cli",slug:"/cli/contract",permalink:"/docs/cli/contract",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/cli/cli3.md",tags:[],version:"current",frontMatter:{id:"cli3",title:"Contract",sidebar_label:"Contract",slug:"/cli/contract"},sidebar:"cli",previous:{title:"Account",permalink:"/docs/cli/account"},next:{title:"JS library",permalink:"/docs/cli/jslibrary"}},c=[{value:"Deploy / originate",id:"deploy--originate",children:[{value:"Parameters",id:"parameters",children:[],level:3},{value:"Metadata",id:"metadata",children:[],level:3}],level:2},{value:"Show",id:"show",children:[{value:"Info",id:"info",children:[],level:3},{value:"All contracts",id:"all-contracts",children:[],level:3},{value:"Source",id:"source",children:[],level:3},{value:"Entries",id:"entries",children:[],level:3},{value:"Storage",id:"storage",children:[],level:3}],level:2},{value:"Call",id:"call",children:[],level:2},{value:"Argument",id:"argument",children:[],level:2},{value:"Generate javascript",id:"generate-javascript",children:[],level:2},{value:"Generate whyml",id:"generate-whyml",children:[],level:2}],k={toc:c};function u(t){var e=t.components,n=(0,l.Z)(t,o);return(0,r.kt)("wrapper",(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"deploy--originate"},"Deploy / originate"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deploy")," is the command to originate an archetype contract (with file extension ",(0,r.kt)("inlineCode",{parentName:"p"},".arl"),"), and ",(0,r.kt)("inlineCode",{parentName:"p"},"originate")," is the command to originate a michelson contract (with file extension ",(0,r.kt)("inlineCode",{parentName:"p"},".tz"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli (deploy <FILE.arl> | originate <FILE.tz>) \\\n    [--as <ACCOUNT_ALIAS>] \\\n    [--named <CONTRACT_ALIAS>] \\\n    [--parameters <PARAM> ] \\\n    [--amount <AMOUNT>(tz|utz)] \\\n    [--metadata-storage <PATH_TO_JSON> | --metadata-uri <VALUE_URI>]\n    [--init <MICHELSON_DATA>]\n    [--test-mode]\n    [--force]\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--as")),(0,r.kt)("td",{parentName:"tr",align:null},"Deploys with specified account. Default account is the one returned by command ",(0,r.kt)("inlineCode",{parentName:"td"},"completium-cli show account"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:null},"Names deployed contract with specified logical name. Logical name is used to refer to contract when calling or displaying contract.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--parameters")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies archetype parameter values (only with archetype contract)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--amount")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of XTZ to sent when deploying contract.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--metadata-storage")),(0,r.kt)("td",{parentName:"tr",align:null},"Adds metadata to contract from json file (only with archetype contract).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--metadata-uri")),(0,r.kt)("td",{parentName:"tr",align:null},"Adds metadata to contract from uri (only with archetype contract).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--init")),(0,r.kt)("td",{parentName:"tr",align:null},"Overwrites contract initial storage with Michelson value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--test-mode")),(0,r.kt)("td",{parentName:"tr",align:null},"Generates entrypoint ",(0,r.kt)("inlineCode",{parentName:"td"},"_set_now")," to set ",(0,r.kt)("inlineCode",{parentName:"td"},"now")," value (only with archetype contract, to be used only on testnet)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--force")),(0,r.kt)("td",{parentName:"tr",align:null},"Does not prompt for parameter validation.")))),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli deploy mycontract.arl --amount 15.5tz\n")),(0,r.kt)("p",null,"This creates a contract alias ",(0,r.kt)("inlineCode",{parentName:"p"},"mycontract"),"."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"The following archetype contract requires one parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"fee")," when deployed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="payment.arl"',title:'"payment.arl"'},"archetype payment(fee : tez)\n\nvariable amount : tez = 150tz\n\nentry pay(seller : address) {\n  transfer (amount - fee) to seller\n}\n")),(0,r.kt)("p",null,"The command to deploy:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ completium-cli deploy payment.arl --parameters \'{ "fee" : "5tz" }\'\n')),(0,r.kt)("h3",{id:"metadata"},"Metadata"),(0,r.kt)("p",null,"One way to set ",(0,r.kt)("em",{parentName:"p"},"metadata")," is to provide a json file as the ",(0,r.kt)("inlineCode",{parentName:"p"},"--metadata-storage")," argument."),(0,r.kt)("p",null,"For example the following metadata file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ cat fa12_metadata.json\n{\n  "symbol": "MTK",\n  "name": "MyToken",\n  "decimals": "1",\n  "description": "description of MyToken",\n  "thumbnailUri": "https://completium.com/img/logo_completium_128.png"\n}\n')),(0,r.kt)("p",null,"Then the command to deploy the FA 1.2 contract:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli deploy fa12.arl --metadata-storage fa12_metadata.json\n")),(0,r.kt)("h2",{id:"show"},"Show"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("p",null,"It is possible to show data related to a contract alias:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli show contract <CONTRACT_ALIAS>\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ completium-cli show contract demo\nName:     demo\nNetwork:  edo\nAddress:  KT1CQmaCLLdEQ3X9PmxoqEAy3Xusvs1J5wW1\nSource:   /home/dev/.completium/sources/demo.arl\nLanguage: archetype\nVersion:  1.2.2\nUrl:      https://better-call.dev/edo2net/KT1CQmaCLLdEQ3X9PmxoqEAy3Xusvs1J5wW1\n")),(0,r.kt)("h3",{id:"all-contracts"},"All contracts"),(0,r.kt)("p",null,"The following command lists all contracts managed by ",(0,r.kt)("inlineCode",{parentName:"p"},"$completium-cli"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli show contracts\n")),(0,r.kt)("h3",{id:"source"},"Source"),(0,r.kt)("p",null,"It is possible to show the contract source with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli show source <CONTRACT_ALIAS>\n")),(0,r.kt)("h3",{id:"entries"},"Entries"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli show entries <CONTRACT_ADDRESS|CONTRACT_ALIAS>\n")),(0,r.kt)("p",null,"The command also works with a remote contract address:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli show entries KT1EFgRdrT4r6QLx2riZiPNHjo7gcQM8n7f7\n%confirm (_ : unit)\n%submit (%ckey : address, %pscore : int)\n%decide (_ : unit)\n")),(0,r.kt)("h3",{id:"storage"},"Storage"),(0,r.kt)("p",null,"It is possible to show contract's storage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli show storage <CONTRACT_ALIAS|CONTRACT_ADDRESS>\n")),(0,r.kt)("p",null,"or in json format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli show storage <CONTRACT_ALIAS|CONTRACT_ADDRESS> --json\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ cat simple.arl\narchetype simple\nvariable v  : nat = 0\nentry setvalue(p : nat) { v := p }\n\n$ completium-cli deploy simple.arl\n? simple already exists, overwrite it? Yes\nOriginate settings:\n  network     : granada\n  contract    : simple\n  by          : admin\n  send        : 0 \ua729\n  storage     : 0\n  total cost  : 0.082488 \ua729\n? Confirm settings Yes\nForging operation...\nWaiting for confirmation of origination for KT1WVrMD4RWVEkW9gWqH4ntEMNBckG7Lucm8 ...\nOrigination completed for KT1WVrMD4RWVEkW9gWqH4ntEMNBckG7Lucm8 named simple.\nhttps://better-call.dev/granadanet/KT1WVrMD4RWVEkW9gWqH4ntEMNBckG7Lucm8\n\n$ completium-cli call simple --arg \'{ "p" : 2 }\'\nCall settings:\n  network     : granada\n  contract    : simple_nat\n  by          : admin\n  send        : 0 \ua729\n  entrypoint  : default\n  argument    : 2\n  total cost  : 0.000532 \ua729\n? Confirm settings Yes\nForging operation...\nWaiting for ooGRwqf9GKYsvvggiyqYEF1xRqa9gnXcQDvJJjDt73M1yTrmyAV to be confirmed...\nOperation injected: https://granada.tzstats.com/ooGRwqf9GKYsvvggiyqYEF1xRqa9gnXcQDvJJjDt73M1yTrmyAV\n\n$ completium-cli show storage simple\n2\n\n$ completium-cli show storage simple --json\n{ "int" : 2 }\n')),(0,r.kt)("h2",{id:"call"},"Call"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli call <CONTRACT_ADDRESS|CONTRACT_ALIAS> \\\n  [--as <ACCOUNT_ALIAS>] \\\n  [--entry <ENTRYPOINT>] \\\n  [--arg <ARG>] \\\n  [--arg-michelson <MICHELSON_ARG>] \\\n  [--amount <AMOUNT>(tz|utz)] \\\n  [--force]\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--as")),(0,r.kt)("td",{parentName:"tr",align:null},"Deploys with specified account. Default account is the one returned by command ",(0,r.kt)("inlineCode",{parentName:"td"},"completium-cli show account"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--entry")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the entrypoint to call. ",(0,r.kt)("em",{parentName:"td"},"Must")," be omitted if the contract has only one entrypoint.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--arg")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies entrypoints parameter values (see example below).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--arg-michelson")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies entrypoints parameter values in Michelson format.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--amount")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of XTZ to sent when calling contract.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--force")),(0,r.kt)("td",{parentName:"tr",align:null},"Does not prompt for parameter validation.")))),(0,r.kt)("p",null,"For example, if ",(0,r.kt)("inlineCode",{parentName:"p"},"mycontract.arl")," defines a (non-unique) entry point ",(0,r.kt)("inlineCode",{parentName:"p"},"payback"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-archetype"},"entry payback (i : int, n : nat) {\n  // ...\n}\n")),(0,r.kt)("p",null,"The command to call the entry is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ completium-cli call mycontract --entry payback --arg \'{ "i" : -4, "n" : 5 }\'\n')),(0,r.kt)("h2",{id:"argument"},"Argument"),(0,r.kt)("p",null,"This section presents exemples of parameter and argument values to pass to ",(0,r.kt)("inlineCode",{parentName:"p"},"deploy --param")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"call --arg")," commands."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Archetype type"),(0,r.kt)("th",{parentName:"tr",align:null},"Michelson type"),(0,r.kt)("th",{parentName:"tr",align:null},"Value examples"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"5"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"-10"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"hello"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timestamp")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"1629965551"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"2022-01-01T12:00:00Z"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"duration")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-965551"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"tz1..."'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"10abff"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rational")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pair int nat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[-5, 2]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tez")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mutez")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"5000000"),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"5tz"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"5000000utz"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int * string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pair int string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'[-5, "hello"]'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"option<int>")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"option int")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null")," (for ",(0,r.kt)("inlineCode",{parentName:"td"},"none"),"), ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," (for ",(0,r.kt)("inlineCode",{parentName:"td"},"some(1)"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"or<int, string>")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"or int string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'{ "kind" : "right", "value" : "hello" }'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"list<string>")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"list string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'["world", "hello"]'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"set<string>")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"set string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'["hello", "world"]')," (mind order)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"map<nat, string>")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"map nat string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'[{ "key" : 0, "value" : "value for 0" }, { "key" : 1, "value" : "value for 1" }]')," (mind order)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"asset myasset { id : nat, value : string }")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"map nat string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'[{ "key" : 0, "value" : "value for 0" }, { "key" : 1, "value" : "value for 1" }]')," (mind order)")))),(0,r.kt)("h2",{id:"generate-javascript"},"Generate javascript"),(0,r.kt)("p",null,"The javascript verion of the contract is required when a DApp is originating the contract using ",(0,r.kt)(i.Z,{to:"/docs/dapp-tools/taquito",mdxType:"Link"},"Taquito"),"."),(0,r.kt)("p",null,"The command to generate the javascript version is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli generate javascript <FILE.arl|CONTRACT_ALIAS>\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli generate javascript mycontract.arl > mycontract.js\n")),(0,r.kt)("p",null,"The generated ",(0,r.kt)("inlineCode",{parentName:"p"},"mycontract.js")," file exports:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the Micheline/Json ",(0,r.kt)("inlineCode",{parentName:"li"},"code")," of the contract"),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("inlineCode",{parentName:"li"},"getStorage")," method to build the initial storage")),(0,r.kt)("p",null,"See ",(0,r.kt)(i.Z,{to:"/docs/dapp-tools/taquito#contract-origination",mdxType:"Link"},"here")," an example of how to use in a DApp."),(0,r.kt)("h2",{id:"generate-whyml"},"Generate whyml"),(0,r.kt)("p",null,"The whyml version of the contract is required to formally verify the contract with ",(0,r.kt)(i.Z,{to:"http://why3.lri.fr/",mdxType:"Link"},"Why3"),"."),(0,r.kt)("p",null,"The command to generate the whyml version is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli generate whyml <FILE.arl|CONTRACT_ALIAS>\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ completium-cli generate whyml mycontract.arl > mycontract.mlw\n")),(0,r.kt)("p",null,"The generated ",(0,r.kt)("inlineCode",{parentName:"p"},"mycontract.mlw")," file defines 2 modules:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Mycontract_storage")," that defines the storage"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Mycontract")," that defines entrypoints")))}u.isMDXComponent=!0}}]);