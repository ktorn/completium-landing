(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[9101],{4490:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return p},default:function(){return u}});var a=t(2122),r=t(9756),i=(t(7294),t(3905)),l=t(6742),d=["components"],c={id:"miles10",title:"Interface",sidebar_label:"Interface",slug:"/dapp-miles/miles-contract-interface"},s=void 0,o={unversionedId:"dapp-miles/miles10",id:"dapp-miles/miles10",isDocsHomePage:!1,title:"Interface",description:"The smart contract is developed with the Archetype language.",source:"@site/docs/dapp-miles/miles10.md",sourceDirName:"dapp-miles",slug:"/dapp-miles/miles-contract-interface",permalink:"/docs/dapp-miles/miles-contract-interface",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-miles/miles10.md",version:"current",frontMatter:{id:"miles10",title:"Interface",sidebar_label:"Interface",slug:"/dapp-miles/miles-contract-interface"}},p=[{value:"Storage",id:"storage",children:[]},{value:"Entry points",id:"entry-points",children:[{value:"add",id:"add",children:[]},{value:"consume",id:"consume",children:[]},{value:"clear expired",id:"clear-expired",children:[]}]}],m={toc:p};function u(e){var n=e.components,t=(0,r.Z)(e,d);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The smart contract is developed with the ",(0,i.kt)("a",{href:"https://archetype-lang.org/"},"Archetype")," language."),(0,i.kt)("h2",{id:"storage"},"Storage"),(0,i.kt)("p",null,"The contract defines an admin address that only can call the ",(0,i.kt)("inlineCode",{parentName:"p"},"add")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"clear_expired")," entry points:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"variable admin : address = @tz1MZrh8CvYkp7BfLQMcm6mg5FvL5HRZfACw\n")),(0,i.kt)("p",null,"The contract defines a ",(0,i.kt)(l.Z,{to:"/docs/contract/tuto/archetype-assets",mdxType:"Link"},"collection")," of miles:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset mile identified by id {\n   id         : string;\n   amount     : nat;\n   expiration : date\n}\n")),(0,i.kt)("p",null,"The contract defines a collection of owners and defines which owner owns which miles:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset owner identified by addr {\n  addr  : address;\n  miles : partition<mile> = []\n}\n")),(0,i.kt)("h2",{id:"entry-points"},"Entry points"),(0,i.kt)("h3",{id:"add"},"add"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"entry add (\n          ow                 : address,\n          newmile_id         : string,\n          newmile_amount     : nat,\n          newmile_expiration : date) {\n  called by admin\n  effect { ... }\n}\n")),(0,i.kt)("h3",{id:"consume"},"consume"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"entry consume (quantity : nat) {\n  ...\n}\n")),(0,i.kt)("h3",{id:"clear-expired"},"clear expired"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"entry clear_expired () {\n  called by admin\n  effect {\n    ...\n  }\n}\n")))}u.isMDXComponent=!0}}]);