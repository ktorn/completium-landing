(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{240:function(e,n,t){"use strict";t(0),t(245)},87:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return d})),t.d(n,"default",(function(){return o}));var i=t(3),a=(t(0),t(238));t(240),t(241),t(242);const r={id:"zcb9",title:"Implementation",sidebar_label:"Implementation",slug:"/dapp-zcb/implementation"},s={unversionedId:"dapp-zcb/zcb9",id:"dapp-zcb/zcb9",isDocsHomePage:!1,title:"Implementation",description:"Sign",source:"@site/docs/dapp-zcb/zcb9.md",slug:"/dapp-zcb/implementation",permalink:"/docs/dapp-zcb/implementation",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-zcb/zcb9.md",version:"current",sidebar_label:"Implementation"},d=[{value:"Sign",id:"sign",children:[]},{value:"Terminate",id:"terminate",children:[]},{value:"Dispute",id:"dispute",children:[]}],c={toc:d};function o({components:e,...n}){return Object(a.b)("wrapper",Object(i.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"sign"},"Sign"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"sign")," entry point tests whether the caller is a signer:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-archetype",metastring:"{2,4,11}","{2,4,11}":!0},'entry sign () {\n  if caller = issuer then\n    issuersigned := true\n  else if caller = subscriber then begin\n    subscribersigned := true;\n    var presentvalue = (1 - discount) * facevalue;\n    dorequire(transferred >= presentvalue, "SUBSCRIBER_INVALID_TRANSFERRED");\n    transfer presentvalue to issuer;\n  end else fail("CALLER_NOT_A_SIGNER");\n  if issuersigned and subscribersigned then\n    transfer 0tz to entry self.toSigned();\n}\n')),Object(a.b)("p",null,"If parties have signed, the transition to ",Object(a.b)("em",{parentName:"p"},"Signed")," is triggered with an internal call to ",Object(a.b)("inlineCode",{parentName:"p"},"toSigned")," (line 12)."),Object(a.b)("h2",{id:"terminate"},"Terminate"),Object(a.b)("p",null,"Transition to ",Object(a.b)("em",{parentName:"p"},"Terminated")," is validated if transferred amount and date are valid:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-archetype",metastring:"{6,7}","{6,7}":!0},"transition terminate () {\n  called by issuer\n  from Signed to Terminated when {\n    match signaturedate with\n    | some(s) ->\n      s + maturityduration <= now <= s + maturityduration + paybackduration and\n      transferred >= facevalue\n    | none -> false\n    end\n  } with effect {\n    transfer facevalue to subscriber\n  }\n}\n")),Object(a.b)("h2",{id:"dispute"},"Dispute"),Object(a.b)("p",null,"Transition to 'Disputed' is possible if in ",Object(a.b)("em",{parentName:"p"},"Signed")," state after payback period:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-archetype",metastring:"{6}","{6}":!0},"transition dispute () {\n  called by subscriber\n  from Signed to Disputed when {\n    match signaturedate with\n    | some(d) ->\n      d + maturityduration + paybackduration <=  now\n    | none -> false\n    end\n  }\n}\n")))}o.isMDXComponent=!0}}]);