(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[6564],{7600:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return u},default:function(){return h}});var a=n(2122),i=n(9756),l=(n(7294),n(3905)),r=n(7134),o=n(6742),c=["components"],s={id:"tuto6",title:"State Machine",sidebar_label:"6. State Machine",slug:"/contract/tuto/archetype-statem",hide_title:!0},p=void 0,m={unversionedId:"contract/tuto/tuto6",id:"contract/tuto/tuto6",isDocsHomePage:!1,title:"State Machine",description:"State machine",source:"@site/docs/contract/tuto/tuto6.md",sourceDirName:"contract/tuto",slug:"/contract/tuto/archetype-statem",permalink:"/docs/contract/tuto/archetype-statem",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/contract/tuto/tuto6.md",version:"current",frontMatter:{id:"tuto6",title:"State Machine",sidebar_label:"6. State Machine",slug:"/contract/tuto/archetype-statem",hide_title:!0},sidebar:"contract",previous:{title:"5. Dates arithmetic",permalink:"/docs/contract/tuto/archetype-datearith"},next:{title:"7. Assets",permalink:"/docs/contract/tuto/archetype-assets"}},u=[{value:"State machine",id:"state-machine",children:[{value:"Deploy",id:"deploy",children:[]},{value:"Call entry points",id:"call-entry-points",children:[]},{value:"Next",id:"next",children:[]}]}],d={toc:u};function h(t){var e=t.components,n=(0,i.Z)(t,c);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"state-machine"},"State machine"),(0,l.kt)("p",null,"It is possible to design the smart contract as a state machine which is convenient for ease of read."),(0,l.kt)("p",null,"In this exercise, the machine has 4 states and 3 transitions as illustrated in the shcema below:"),(0,l.kt)(r.Z,{img:"tuto_statem.svg",width:"60%",mdxType:"DappFigure"}),(0,l.kt)("p",null,"Transitions have conditions:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"goes in InProgress state if balance is greater than 3tz"),(0,l.kt)("li",{parentName:"ul"},"complete if internal ",(0,l.kt)("inlineCode",{parentName:"li"},"value")," is strictly greater than 1 (requires calls to ",(0,l.kt)("inlineCode",{parentName:"li"},"inc_value"),")")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="6-state_machine.arl"',title:'"6-state_machine.arl"'},"archetype state_machine\n\nstates =\n| Created initial\n| InProgress\n| Interrupted\n| Completed\n\nvariable value : nat = 0\n\nentry inc_value () {\n  value += 1\n}\n\ntransition init () {\n  from Created to InProgress\n  when { transferred > 3tz }\n  with effect { () /* nothing */}\n}\n\ntransition complete () {\n  from InProgress to Completed\n  when { value > 1 }\n  with effect { transfer balance to caller }\n}\n\ntransition interrupt () {\n  from InProgress to Interrupted\n  with effect { transfer (50% * balance) to caller }\n}\n")),(0,l.kt)("p",null,"Each transition is a contract entry point."),(0,l.kt)("h3",{id:"deploy"},"Deploy"),(0,l.kt)("p",null,"The following ",(0,l.kt)(o.Z,{to:"/docs/cli",mdxType:"Link"},"Completium CLI")," command deploys the contract on the Tezos network:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"completium-cli deploy 6-state_machine.arl\n")),(0,l.kt)("h3",{id:"call-entry-points"},"Call entry points"),(0,l.kt)("p",null,"In this example it is necessary to call specific entry points. A contract's entrypoints may be listed with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"completium-cli show entries 6-state_machine\n")),(0,l.kt)("p",null,"The goal here is to set the state machine to ",(0,l.kt)("inlineCode",{parentName:"p"},"Completed")," state. Use the following commands to transit the machine:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"completium-cli call 6-state_machine --entry init --amount 5tz\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"completium-cli call 6-state_machine --entry inc_value\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"completium-cli call 6-state_machine --entry inc_value\n")),(0,l.kt)("p",null,"At this stage, ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"2"),", which allows transiting to ",(0,l.kt)("inlineCode",{parentName:"p"},"Completed"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"completium-cli call 6-state_machine --entry complete\n")),(0,l.kt)("p",null,"This last call may be replaced by the following command to go to ",(0,l.kt)("inlineCode",{parentName:"p"},"Interrupted")," state:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"completium-cli call 6-state_machine --entry interrupt\n")),(0,l.kt)("h3",{id:"next"},"Next"),(0,l.kt)("p",null,"Open '7-assets.arl' and click on \"Next: Assets\" below."))}h.isMDXComponent=!0}}]);