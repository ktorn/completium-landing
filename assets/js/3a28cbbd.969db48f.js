"use strict";(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[6674],{3079:function(e,t,n){var a=n(7294),o=n(282),r=n(8500),s=n(3457),i=n(9960),l=n(4996);t.Z=function(e){var t=a.useMemo((function(){return(0,r.Z)({palette:{type:"dark"}})}),[!0]);return a.createElement("div",{style:{textAlign:"center",paddingTop:"0px",paddingBottom:"40px"}},a.createElement(s.Z,{theme:t},e.internal?a.createElement(o.Z,{variant:"outlined",size:"large",component:i.Z,to:(0,l.Z)("docs/"+e.url+"/")},e.txt):a.createElement(o.Z,{variant:"outlined",size:"large",onClick:function(){return window.open(e.url,"_blank")}},e.txt)))}},5431:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),s=(n(3079),n(7134),n(9960)),i=["components"],l={id:"iot7",title:"Contract Interactions",sidebar_label:"Contract Interactions",slug:"/dapp-iot/interactions"},c=void 0,p={unversionedId:"dapp-iot/iot7",id:"dapp-iot/iot7",title:"Contract Interactions",description:"Connect to Thanos Wallet",source:"@site/docs/dapp-iot/iot7.md",sourceDirName:"dapp-iot",slug:"/dapp-iot/interactions",permalink:"/docs/dapp-iot/interactions",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-iot/iot7.md",tags:[],version:"current",frontMatter:{id:"iot7",title:"Contract Interactions",sidebar_label:"Contract Interactions",slug:"/dapp-iot/interactions"},sidebar:"dapps",previous:{title:"Contract origination",permalink:"/docs/dapp-iot/origination"},next:{title:"Introduction",permalink:"/docs/dapp-ideabox"}},d=[{value:"Connect to Thanos Wallet",id:"connect-to-thanos-wallet",children:[],level:2},{value:"Read Connected Object parameters",id:"read-connected-object-parameters",children:[],level:2},{value:"Read account",id:"read-account",children:[],level:2},{value:"Start service",id:"start-service",children:[],level:2},{value:"Interrupt service",id:"interrupt-service",children:[],level:2}],u={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"connect-to-thanos-wallet"},"Connect to Thanos Wallet"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"src/dapp.js")," file defines the necessary utilities to connect the DApp to the blockchain via the Thanos wallet:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"check whether wallet is connected"),(0,r.kt)("li",{parentName:"ul"},"get the Taquito's object"),(0,r.kt)("li",{parentName:"ul"},"...")),(0,r.kt)("p",null,"In order to make it available accross the React project, these methods are managed with a Constate storage. Constate provides a local centralized storage for React project with minimum effort."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"src/App.js")," defines a node ",(0,r.kt)("inlineCode",{parentName:"p"},"DAppProvider")," that needs to be wrap the App node. The FIX ME section is to be found line 18 in 'src/DApp.js' file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function App() {\n  return (\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME\n    // Wrap the App's body with <DAppProvider> tag/function in order to benefit\n    // from wallet's service as defined in dapp.js\n    ///////////////////////////////////////////////////////////////////////////\n    <React.Suspense fallback={null}>\n      <PageRouter />\n    </React.Suspense>\n  );\n}\n")),(0,r.kt)("p",null,"The code below shows how to declare the ",(0,r.kt)("inlineCode",{parentName:"p"},"DAppProvider")," so that it makes the Thanos utilities available to the DApp:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function App() {\n    return (\n    <DAppProvider appName={appName}>\n      <React.Suspense fallback={null}>\n        <PageRouter />\n      </React.Suspense>\n    </DAppProvider>\n  );\n}\n")),(0,r.kt)("h2",{id:"read-connected-object-parameters"},"Read Connected Object parameters"),(0,r.kt)("p",null,"The DApp needs to read the smart contract's storage to know about the connected object data:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"price (nb. per minute)"),(0,r.kt)("li",{parentName:"ul"},"date of stop service"),(0,r.kt)("li",{parentName:"ul"},"...")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"loadSwitchContent")," line 66 of ",(0,r.kt)("inlineCode",{parentName:"p"},"Dapp.js")," file is called to read and store the connected object parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"async function loadSwitchContent () {\n    try {\n      ///////////////////////////////////////////////////////////////////////////\n      // FIX ME:\n      // Read contract storage:\n      // * rate\n      // * date of start\n      // * date of stop\n      // * user\n      ///////////////////////////////////////////////////////////////////////////\n    } catch (error) {\n      console.log(`Error: ${error}`);\n    }\n  }\n")),(0,r.kt)("p",null,"The code blow reads the contract storage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"{2,6}","{2,6}":!0},"    const Tezos = new TezosToolkit('https://delphinet-tezos.giganode.io');\n    var contract  = await Tezos.contract.at(contractAddress);\n    var cstorage   = await contract.storage();\n    var dateofstart = new Date(cstorage.dateofstart);\n    var dateofstop = new Date(cstorage.dateofstop);\n    var rate = parseInt(0+cstorage.rate[4])/parseInt(0+cstorage.rate[3]);\n    var user = cstorage.user;\n    setBCSwitch({\n      dateofstart: dateofstart,\n      dateofstop : dateofstop,\n      rate: rate,\n      user: user,\n    });\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"rate")," is of ",(0,r.kt)("inlineCode",{parentName:"p"},"rational")," type in the contract. In ",(0,r.kt)("a",{href:"https://archetype-lang.org/"},"Archetype")," language, rational are encoded as a pair of ",(0,r.kt)("inlineCode",{parentName:"p"},"int")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"nat"),". That's why you need to retrieve numerator and denominator from Taquito's transcoded value (line 6)."),(0,r.kt)("h2",{id:"read-account"},"Read account"),(0,r.kt)("p",null,"Account balance is quite straightforward to retrieve."),(0,r.kt)("p",null,"Implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"loadBalance")," function line 22 of ",(0,r.kt)("inlineCode",{parentName:"p"},"src/components/Account.js")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const loadBalance = React.useCallback(async () => {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME\n    // RETRIEVE ACCOUNT BALANCE\n    // Method props.setBalance(string) is passed the account's balance\n    ///////////////////////////////////////////////////////////////////////////\n}, [tezos, account, props.setBalance]);\n")),(0,r.kt)("p",null,"The code below retrieves the balance and converts it from mutez to tz:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const loadBalance = React.useCallback(async () => {\n    const bal = await tezos.tz.getBalance(address);\n    props.setBalance(tezos.format('mutez', 'tz', bal).toString());\n}, [tezos, address, props.setBalance]);\n")),(0,r.kt)("h2",{id:"start-service"},"Start service"),(0,r.kt)("p",null,"The ",(0,r.kt)(s.Z,{to:"/docs/dapp-iot/implementation#start",mdxType:"Link"},"start")," entry point needs to be called with the current amount of tez in the ",(0,r.kt)("inlineCode",{parentName:"p"},"handleStart")," method line 30 in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/components/Switch.js")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const handleStart = (event) => {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME:\n    // Invode contract's 'start' entry point and provide the\n    // amount of tezos corresponding to the requested duration\n    ///////////////////////////////////////////////////////////////////////////\n}\n")),(0,r.kt)("p",null,"Copy-paste the code below to implement ",(0,r.kt)("inlineCode",{parentName:"p"},"handleStart"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"{4}","{4}":!0},"tezos.wallet.at(contractAddress).then(contract => {\n    var price = (props.switch.rate * duration).toFixed(6);\n    console.log(`calling start with ${price} XTZ`);\n    contract.methods.start(UnitValue).send({ amount : price, fee : '0.1' }).then( op => {\n      var start = Date.now();\n      console.log(`waiting for ${op.opHash} to be confirmed`);\n      setDisable(true);\n      props.openSnack();\n      op.receipt().then(() => {\n        setDisable(false);\n        props.closeSnack();\n        props.resetBalance();\n        props.loadSwitchContent();\n      });\n    })\n});\n")),(0,r.kt)("p",null,"The Taquito's contract object is retrieved with the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"tezos.wallet.at(contractAddress).then(contract => {\n    ...\n});\n")),(0,r.kt)("p",null,"The Taquito's contract's storage object is retrieved with the following code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"contract.storage().then(storage => {\n    ...\n}\n")),(0,r.kt)("h2",{id:"interrupt-service"},"Interrupt service"),(0,r.kt)("p",null,"The ",(0,r.kt)(s.Z,{to:"/docs/dapp-iot/implementation#interrupt",mdxType:"Link"},"interrupt")," entry point needs to be called with the current amount of tez in the ",(0,r.kt)("inlineCode",{parentName:"p"},"handleInterrupt")," method line 129 in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/components/Switch.js")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const handleInterrupt = () => {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME:\n    // Invode contract's 'interrupt' entry point\n    ///////////////////////////////////////////////////////////////////////////\n}\n")),(0,r.kt)("p",null,"Copy-paste the code below to implement ",(0,r.kt)("inlineCode",{parentName:"p"},"handleInterrupt"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"tezos.wallet.at(contractAddress).then(contract => {\n    contract.methods.interrupt(UnitValue).send().then( op => {\n      var d = Date.now();\n      console.log(`waiting for ${op.opHash} to be confirmed`);\n      setDisable(true);\n      props.openSnack();\n      op.receipt().then(() => {\n        setDisable(false);\n        props.closeSnack();\n        props.resetBalance();\n        props.setBCSwitch({\n          dateofstart: d,\n          dateofstop: d,\n          rate: props.switch.rate,\n          user: props.switch.user\n        });\n      });\n    })\n});\n")))}m.isMDXComponent=!0}}]);