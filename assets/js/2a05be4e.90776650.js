(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[4679],{3079:function(n,e,t){"use strict";var a=t(7294),o=t(282),r=t(9277),l=t(3457),s=t(6742),i=t(4996);e.Z=function(n){var e=a.useMemo((function(){return(0,r.Z)({palette:{type:"dark"}})}),[!0]);return a.createElement("div",{style:{textAlign:"center",paddingTop:"0px",paddingBottom:"40px"}},a.createElement(l.Z,{theme:e},n.internal?a.createElement(o.Z,{variant:"outlined",size:"large",component:s.Z,to:(0,i.Z)("docs/"+n.url+"/")},n.txt):a.createElement(o.Z,{variant:"outlined",size:"large",onClick:function(){return window.open(n.url,"_blank")}},n.txt)))}},807:function(n,e,t){"use strict";t(7294),t(4996)},5734:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=t(2122),o=t(9756),r=(t(7294),t(3905)),l=(t(807),t(7134),t(3079),["components"]),s={id:"nonfungible7",title:"Interactions",sidebar_label:"Interactions",slug:"/dapp-nonfungible/interactions"},i=void 0,c={unversionedId:"dapp-nonfungible/nonfungible7",id:"dapp-nonfungible/nonfungible7",isDocsHomePage:!1,title:"Interactions",description:"Read storage",source:"@site/docs/dapp-nonfungible/nonfungible7.md",sourceDirName:"dapp-nonfungible",slug:"/dapp-nonfungible/interactions",permalink:"/docs/dapp-nonfungible/interactions",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-nonfungible/nonfungible7.md",version:"current",frontMatter:{id:"nonfungible7",title:"Interactions",sidebar_label:"Interactions",slug:"/dapp-nonfungible/interactions"},sidebar:"dapps",previous:{title:"Contract Origination",permalink:"/docs/dapp-nonfungible/origination"},next:{title:"Introduction",permalink:"/docs/dapp-dex"}},p=[{value:"Read storage",id:"read-storage",children:[]},{value:"Sell transacation",id:"sell-transacation",children:[]},{value:"Buy transaction",id:"buy-transaction",children:[]}],u={toc:p};function d(n){var e=n.components,t=(0,o.Z)(n,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"read-storage"},"Read storage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"src/Apps.js")," line 62"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"if (!isReady()) {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME\n    // Read conract storage:\n    // * forsales : the list of item for sales\n    // * botwallet : list of purchased items\n    // call 'setNonFungibleState' to set UI state\n    ///////////////////////////////////////////////////////////////////////////\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Tezos.contract\n.at(contractAddress)\n.then(contract => {\n  contract.storage().then(storage => {\n    var forsales = [];\n    var botwallet = [];\n    // operator is an array\n    storage.operator.forEach(element => {\n      forsales.push(element[1].toString());\n    });\n    // ledger is a map\n    // read ledger for ownership information\n    if (ready) {\n      storage.ledger.forEach((l,k,m) => {\n        if(l === accountAddress) {\n          botwallet.push(k);\n        }\n      })\n    }\n    setNonFungibleState({\n      forsales  : forsales,\n      botwallet : botwallet,\n      basket    : nonFungibleState.basket,\n      ready     : true\n    });\n  })\n})\n.catch(error => console.log(`Error: ${error}`));\n")),(0,r.kt)("h2",{id:"sell-transacation"},"Sell transacation"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"src/components/Robots.js")," line"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const handleSell = () => {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME\n    // Call 'sell' entry point\n    ///////////////////////////////////////////////////////////////////////////\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"tezos.wallet.at(contractAddress).then(contract => {\n      contract.methods.sell(props.data.id).send().then(op => {\n        props.openSnack();\n        op.receipt().then(() => {\n          props.closeSnack();\n          setNotReady();\n        })\n      })\n});\n")),(0,r.kt)("h2",{id:"buy-transaction"},"Buy transaction"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"src/components/Account.js")," line 76"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const handleBuy = () => {\n    ///////////////////////////////////////////////////////////////////////////\n    // FIX ME\n    // Call 'buy' entry point\n    ///////////////////////////////////////////////////////////////////////////\n    setOpen(false);\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"tezos.wallet.at(contractAddress).then(contract => {\n    var amount = getTotal(robotributes, nonFungibleState.basket).toFixed(1);\n    contract.methods.buy(nonFungibleState.basket).send({ amount: amount, mutez: false }).then(op => {\n      props.openSnack();\n      op.receipt().then(() => {\n        props.closeSnack();\n        setNotReady();\n      })\n    })\n});\n")))}d.isMDXComponent=!0}}]);