(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[8565],{3079:function(e,n,t){"use strict";var a=t(7294),r=t(282),o=t(9277),l=t(3457),i=t(6742),s=t(4996);n.Z=function(e){var n=a.useMemo((function(){return(0,o.Z)({palette:{type:"dark"}})}),[!0]);return a.createElement("div",{style:{textAlign:"center",paddingTop:"0px",paddingBottom:"40px"}},a.createElement(l.Z,{theme:n},e.internal?a.createElement(r.Z,{variant:"outlined",size:"large",component:i.Z,to:(0,s.Z)("docs/"+e.url+"/")},e.txt):a.createElement(r.Z,{variant:"outlined",size:"large",onClick:function(){return window.open(e.url,"_blank")}},e.txt)))}},807:function(e,n,t){"use strict";t(7294),t(4996)},5819:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var a=t(2122),r=t(9756),o=(t(7294),t(3905)),l=(t(807),t(7134),t(3079),["components"]),i={id:"nonfungible8",title:"Interface",sidebar_label:"Interface",slug:"/dapp-nonfungible/interface"},s=void 0,c={unversionedId:"dapp-nonfungible/nonfungible8",id:"dapp-nonfungible/nonfungible8",isDocsHomePage:!1,title:"Interface",description:"The smart contract is a FA2 contract.",source:"@site/docs/dapp-nonfungible/nonfungible8.md",sourceDirName:"dapp-nonfungible",slug:"/dapp-nonfungible/interface",permalink:"/docs/dapp-nonfungible/interface",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-nonfungible/nonfungible8.md",version:"current",frontMatter:{id:"nonfungible8",title:"Interface",sidebar_label:"Interface",slug:"/dapp-nonfungible/interface"}},d=[{value:"Storage",id:"storage",children:[]},{value:"Entry points",id:"entry-points",children:[{value:"Update operators",id:"update-operators",children:[]},{value:"Transfer",id:"transfer",children:[]},{value:"Balance of",id:"balance-of",children:[]},{value:"Buy",id:"buy",children:[]},{value:"Sell",id:"sell",children:[]}]}],p={toc:d};function u(e){var n=e.components,t=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The smart contract is a ",(0,o.kt)("inlineCode",{parentName:"p"},"FA2")," contract."),(0,o.kt)("h2",{id:"storage"},"Storage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"asset token {\n  tid        : nat;\n  tprice     : tez;\n} initialized by {\n  { 973012;  1.3tz };\n  { 973013;  2.2tz };\n  { 973014;  1.4tz };\n  { 973015;  3.4tz };\n  { 973016;  2.8tz };\n  { 973017;  1.0tz };\n  { 973018;  2.4tz };\n  { 973019;  4.1tz };\n  { 973020; 12.4tz };\n  ...\n  { 973113;  1.4tz }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"asset ledger identified by ltoken {\n  ltoken     : nat;\n  lowner     : address;\n} initialized by {\n  { 973012; caller };\n  { 973013; caller };\n  { 973014; caller };\n  { 973015; caller };\n  { 973016; caller };\n  { 973017; caller };\n  { 973018; caller };\n  { 973019; caller };\n  { 973020; caller };\n  ...\n  { 973113; caller }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"asset operator identified by oaddr otoken oowner {\n  oaddr       : address;\n  otoken      : nat;\n  oowner      : address;\n}\n")),(0,o.kt)("h2",{id:"entry-points"},"Entry points"),(0,o.kt)("h3",{id:"update-operators"},"Update operators"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"record operator_param {\n  opp_owner    : address;\n  opp_operator : address;\n  opp_token_id : nat\n} as ((owner, (operator, token_id)))\n\nentry update_operators (upl : list<or<operator_param, operator_param>>) {\n  ...\n}\n")),(0,o.kt)("h3",{id:"transfer"},"Transfer"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"record transfer_destination {\n  to_dest           : address;\n  token_id_dest     : nat;\n  token_amount_dest : nat\n} as ((to_, (token_id, amount)))\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"entry %transfer (txs : list<address * list<transfer_destination>>) {\n  ...\n}\n")),(0,o.kt)("h3",{id:"balance-of"},"Balance of"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"record balance_of_request {\n  bo_owner : address;\n  btoken_id : nat;\n} as ((owner, token_id))\n\nrecord balance_of_response {\n  request : balance_of_request;\n  balance_ : nat;\n} as ((request, balance))\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"getter balance_of (requests : list<balance_of_request>) : list<balance_of_response> {\n    ...\n}\n")),(0,o.kt)("h3",{id:"buy"},"Buy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"entry buy (tokenids : list<nat>) {\n ...\n}\n")),(0,o.kt)("h3",{id:"sell"},"Sell"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-archetype"},"entry sell (tokenid : nat) {\n  ...\n}\n")))}u.isMDXComponent=!0}}]);