"use strict";(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[4458],{3079:function(t,e,n){var o=n(7294),i=n(282),a=n(8500),r=n(3457),c=n(9960),l=n(4996);e.Z=function(t){var e=o.useMemo((function(){return(0,a.Z)({palette:{type:"dark"}})}),[!0]);return o.createElement("div",{style:{textAlign:"center",paddingTop:"0px",paddingBottom:"40px"}},o.createElement(r.Z,{theme:e},t.internal?o.createElement(i.Z,{variant:"outlined",size:"large",component:c.Z,to:(0,l.Z)("docs/"+t.url+"/")},t.txt):o.createElement(i.Z,{variant:"outlined",size:"large",onClick:function(){return window.open(t.url,"_blank")}},t.txt)))}},1756:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return m},default:function(){return k}});var o=n(7462),i=n(3366),a=(n(7294),n(3905)),r=n(3079),c=(n(7134),n(9960)),l=["components"],p={id:"iot6",title:"Contract Origination",sidebar_label:"Contract origination",slug:"/dapp-iot/origination"},s=void 0,d={unversionedId:"dapp-iot/iot6",id:"dapp-iot/iot6",title:"Contract Origination",description:"The smart contract is written in Archetype language. Go to the Smart contract section for a detailed presentation.",source:"@site/docs/dapp-iot/iot6.md",sourceDirName:"dapp-iot",slug:"/dapp-iot/origination",permalink:"/docs/dapp-iot/origination",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-iot/iot6.md",tags:[],version:"current",frontMatter:{id:"iot6",title:"Contract Origination",sidebar_label:"Contract origination",slug:"/dapp-iot/origination"},sidebar:"dapps",previous:{title:"Presentation",permalink:"/docs/dapp-iot/tg-presentation"},next:{title:"Contract Interactions",permalink:"/docs/dapp-iot/interactions"}},m=[],u={toc:m};function k(t){var e=t.components,n=(0,i.Z)(t,l);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The smart contract is written in ",(0,a.kt)("a",{href:"https://archetype-lang.org/"},"Archetype")," language. Go to the ",(0,a.kt)(c.Z,{to:"",mdxType:"Link"},"Smart contract")," section for a detailed presentation."),(0,a.kt)("p",null,"In VSCode, open the ",(0,a.kt)(c.Z,{to:"/docs/dapp-tools/gitpod#open-terminal",mdxType:"Link"},"terminal")," and enter the following command line to originate (deploy) the smart contract is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"completium-cli deploy ./contract/switch.arl --named iot\n")),(0,a.kt)("p",null,"The ",(0,a.kt)(c.Z,{to:"/docs/cli/contract#deploy--originate",mdxType:"Link"},"originate command")," triggers two operations:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the contract compilation to Michelson with archetype compiler"),(0,a.kt)("li",{parentName:"ul"},"the Michelson contract origination with Tezos client")),(0,a.kt)("p",null,"The contract may then be referred to as ",(0,a.kt)("inlineCode",{parentName:"p"},"iot")," in future interactions."),(0,a.kt)("p",null,"If you are using the preset ",(0,a.kt)(c.Z,{to:"/docs/dapp-tools/gitpod",mdxType:"Link"},"Gitpod")," environement, note that ",(0,a.kt)(c.Z,{to:"/docs/cli",mdxType:"Link"},"completium-cli")," is pre-installed with the ",(0,a.kt)(c.Z,{to:"/docs/dapp-tools/faucet#admin-account",mdxType:"Link"},"admin")," account. See this section for more information."),(0,a.kt)("p",null,"The address of the newly originated contract is visible with this command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"completium-cli show contract iot\n")),(0,a.kt)("p",null,"A smart contract address starts with ",(0,a.kt)("inlineCode",{parentName:"p"},"KT1"),". In the situation above, the new contract's address is ",(0,a.kt)("inlineCode",{parentName:"p"},"KT19ZQUnVrDT5xnfvPqYhn1DeM489875oWGU"),"."),(0,a.kt)("p",null,"You may got to ",(0,a.kt)(c.Z,{to:"/docs/dapp-tools/bcd",mdxType:"Link"},"Better call dev")," contract explorer to check it:"),(0,a.kt)(r.Z,{url:"https://better-call.dev/",txt:"go to better call dev",mdxType:"DappButton"}),(0,a.kt)("p",null,"The new contract address needs to be set in the DApp's ",(0,a.kt)("inlineCode",{parentName:"p"},"src/settings.js")," file, like for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'export const contractAddress = "KT19ZQUnVrDT5xnfvPqYhn1DeM489875oWGU"\n')))}k.isMDXComponent=!0}}]);