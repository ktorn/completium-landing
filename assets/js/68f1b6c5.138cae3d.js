"use strict";(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[3998],{7959:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return i},toc:function(){return u},default:function(){return c}});var t=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],d={id:"dex12",title:"Implementation",sidebar_label:"Implementation",slug:"/dapp-dex/fa12implementation"},p=void 0,i={unversionedId:"dapp-dex/dex12",id:"dapp-dex/dex12",title:"Implementation",description:"Transfer",source:"@site/docs/dapp-dex/dex12.md",sourceDirName:"dapp-dex",slug:"/dapp-dex/fa12implementation",permalink:"/docs/dapp-dex/fa12implementation",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-dex/dex12.md",tags:[],version:"current",frontMatter:{id:"dex12",title:"Implementation",sidebar_label:"Implementation",slug:"/dapp-dex/fa12implementation"}},u=[{value:"Transfer",id:"transfer",children:[],level:2},{value:"Approve",id:"approve",children:[],level:2}],s={toc:u};function c(e){var n=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,t.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"transfer"},"Transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},'entry %transfer (%from : address, %to : address, value : nat) {\n  require {\n    r1 otherwise "NotEnoughBalance" : ledger[%from].tokens >= value;\n  }\n  effect {\n    if caller <> %from then (\n      var current = allowance[(%from, caller)].amount;\n      dofailif(current < value, ("NotEnoughAllowance", ((value, current))));\n      allowance.update((%from, caller), { amount -=  value });\n    );\n    ledger.update(%from, { tokens -= value });\n    ledger.addupdate(%to, { tokens += value });\n  }\n}\n')),(0,l.kt)("h2",{id:"approve"},"Approve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-archetype"},'entry approve(spender : address, value : nat) {\n  var k = (caller, spender);\n  if allowance.contains(k) then (\n    var previous = allowance[k].amount;\n    dofailif(previous > 0 and value > 0, (("UnsafeAllowanceChange", previous)));\n  );\n  allowance.addupdate( k, { amount = value });\n}\n')))}c.isMDXComponent=!0}}]);