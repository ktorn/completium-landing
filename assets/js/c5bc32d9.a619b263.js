(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{200:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return d})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return o}));var a=t(3),c=(t(0),t(238)),r=t(239);const i={id:"miles10",title:"Interface",sidebar_label:"Interface",slug:"/dapp-miles/miles-contract-interface"},d={unversionedId:"dapp-miles/miles10",id:"dapp-miles/miles10",isDocsHomePage:!1,title:"Interface",description:"The smart contract is developed with the Archetype language.",source:"@site/docs/dapp-miles/miles10.md",slug:"/dapp-miles/miles-contract-interface",permalink:"/docs/dapp-miles/miles-contract-interface",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-miles/miles10.md",version:"current",sidebar_label:"Interface"},l=[{value:"Storage",id:"storage",children:[]},{value:"Entry points",id:"entry-points",children:[{value:"add",id:"add",children:[]},{value:"consume",id:"consume",children:[]},{value:"clear expired",id:"clear-expired",children:[]}]}],s={toc:l};function o({components:e,...n}){return Object(c.b)("wrapper",Object(a.a)({},s,n,{components:e,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The smart contract is developed with the ",Object(c.b)("a",{href:"https://archetype-lang.org/"},"Archetype")," language."),Object(c.b)("h2",{id:"storage"},"Storage"),Object(c.b)("p",null,"The contract defines an admin address that only can call the ",Object(c.b)("inlineCode",{parentName:"p"},"add")," and ",Object(c.b)("inlineCode",{parentName:"p"},"clear_expired")," entry points:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-archetype"},"variable admin : address = @tz1MZrh8CvYkp7BfLQMcm6mg5FvL5HRZfACw\n")),Object(c.b)("p",null,"The contract defines a ",Object(c.b)(r.a,{to:"/docs/contract/tuto/archetype-assets",mdxType:"Link"},"collection")," of miles:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-archetype"},"asset mile identified by id {\n   id         : string;\n   amount     : nat;\n   expiration : date\n}\n")),Object(c.b)("p",null,"The contract defines a collection of owners and defines which owner owns which miles:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-archetype"},"asset owner identified by addr {\n  addr  : address;\n  miles : partition<mile> = []\n}\n")),Object(c.b)("h2",{id:"entry-points"},"Entry points"),Object(c.b)("h3",{id:"add"},"add"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-archetype"},"entry add (\n          ow                 : address,\n          newmile_id         : string,\n          newmile_amount     : nat,\n          newmile_expiration : date) {\n  called by admin\n  effect { ... }\n}\n")),Object(c.b)("h3",{id:"consume"},"consume"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-archetype"},"entry consume (quantity : nat) {\n  ...\n}\n")),Object(c.b)("h3",{id:"clear-expired"},"clear expired"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-archetype"},"entry clear_expired () {\n  called by admin\n  effect {\n    ...\n  }\n}\n")))}o.isMDXComponent=!0}}]);