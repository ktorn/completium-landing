(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[4095],{807:function(e,n,t){"use strict";t(7294),t(4996)},8238:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=t(2122),r=t(9756),i=(t(7294),t(3905)),c=(t(807),t(7134),t(3079),["components"]),o={id:"game8",title:"Interface",sidebar_label:"Interface",slug:"/dapp-game/interface"},s=void 0,p={unversionedId:"dapp-game/game8",id:"dapp-game/game8",isDocsHomePage:!1,title:"Interface",description:"Storage",source:"@site/docs/dapp-game/game8.md",sourceDirName:"dapp-game",slug:"/dapp-game/interface",permalink:"/docs/dapp-game/interface",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-game/game8.md",version:"current",frontMatter:{id:"game8",title:"Interface",sidebar_label:"Interface",slug:"/dapp-game/interface"}},d=[{value:"Storage",id:"storage",children:[]},{value:"Entry points",id:"entry-points",children:[{value:"Confirm",id:"confirm",children:[]},{value:"Submit",id:"submit",children:[]},{value:"Decide",id:"decide",children:[]}]}],l={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"storage"},"Storage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"variable organizer : address = @tz1NUKyDbQtSu4g1bgpwgvwqTeggbtKrNkdv\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"variable prize : tez = 10tz\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},'constant oracle : key = "edpkv9k8WZNMyEMuLLVwQfGDqm4pfxSEkTmvgq5DakPUnNbNnQuB14"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"constant noncelength : nat = 8\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"asset submission {\n  competitor : address;\n  score      : nat;\n  timestamp  : date;\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"states =\n | Created     initial\n | InProgress\n | Done\n | Closed\n")),(0,i.kt)("h2",{id:"entry-points"},"Entry points"),(0,i.kt)("h3",{id:"confirm"},"Confirm"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"transition confirm () {\n  called by organizer\n  from Created\n  to InProgress when { transferred = prize }\n}\n")),(0,i.kt)("h3",{id:"submit"},"Submit"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"entry submit (packed_score : bytes, signed_score : signature) {\n    ...\n}\n")),(0,i.kt)("h3",{id:"decide"},"Decide"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-archetype"},"transition decide () {\n  called by organizer\n  from InProgress\n  to Done\n  with effect {\n      ...\n  }\n}\n")))}m.isMDXComponent=!0}}]);