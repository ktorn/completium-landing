(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[4823],{8087:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return h}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),l=n(6742),s=["components"],o={id:"tuto7",title:"Assets",sidebar_label:"7. Assets",slug:"/contract/tuto/archetype-assets",hide_title:!0},c=void 0,p={unversionedId:"contract/tuto/tuto7",id:"contract/tuto/tuto7",isDocsHomePage:!1,title:"Assets",description:"Assets",source:"@site/docs/contract/tuto/tuto7.md",sourceDirName:"contract/tuto",slug:"/contract/tuto/archetype-assets",permalink:"/docs/contract/tuto/archetype-assets",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/contract/tuto/tuto7.md",version:"current",frontMatter:{id:"tuto7",title:"Assets",sidebar_label:"7. Assets",slug:"/contract/tuto/archetype-assets",hide_title:!0},sidebar:"contract",previous:{title:"6. State Machine",permalink:"/docs/contract/tuto/archetype-statem"},next:{title:"8. Call a contract",permalink:"/docs/contract/tuto/archetype-callcontr"}},d=[{value:"Assets",id:"assets",children:[{value:"Deploy",id:"deploy",children:[]},{value:"Call entry point",id:"call-entry-point",children:[]},{value:"Next",id:"next",children:[]}]}],u={toc:d};function h(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"assets"},"Assets"),(0,r.kt)("p",null,"A collection of assets is a convenient way to store indexed records of data; it comes with a rich API to read and write data to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"add, remove, update, addupdate"),(0,r.kt)("li",{parentName:"ul"},"head, tail, sort, select"),(0,r.kt)("li",{parentName:"ul"},"sum"),(0,r.kt)("li",{parentName:"ul"},"...")),(0,r.kt)("p",null,"A detailed presentation of the asset API is available ",(0,r.kt)("a",{href:"https://docs.archetype-lang.org/archetype-language/data-model",target:"_blank"},"here"),"."),(0,r.kt)("p",null,"In this exercise, a vehicle dealer manages his stock of rental cars on-chain for maximal transparency with customers and mechanical service suppliers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a car has a unique identifier, the ",(0,r.kt)("em",{parentName:"li"},"vin"),", and is described with a color, the number of repairs and the last repair date."),(0,r.kt)("li",{parentName:"ul"},"each time a car is repaired, the ",(0,r.kt)("inlineCode",{parentName:"li"},"repair")," entry point is called to update the vehicle's repair data; it increments the number of repairs and updates the last date of repair."),(0,r.kt)("li",{parentName:"ul"},"a mechanical service supplier specializes on repairing the 3 cars with olded repair dates; a dedicated entry point ",(0,r.kt)("inlineCode",{parentName:"li"},"repair_oldest")," has been designed to ease the update process."),(0,r.kt)("li",{parentName:"ul"},"a nother mechanical service supplier is specialised in repainting cars which have been repaired at least once. A dedicated entry point ",(0,r.kt)("inlineCode",{parentName:"li"},"repaint_repaired")," has been designed.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'{30,34,38-40,44-46} title="7-assets.arl"',"{30,34,38-40,44-46}":!0,title:'"7-assets.arl"'},'archetype assets\n\nenum color =\n| White\n| Yellow\n| Red\n| Blue\n\nasset vehicle {\n   vin        : string;\n   c          : color = Yellow;\n   nbrepairs  : nat   = 0;\n   lastrepair : date  = now;\n} initialized by {\n  {"vin0000"; White;  0; 2020-01-01};\n  {"vin0001"; Yellow; 0; 2020-01-01};\n  {"vin0002"; White;  0; 2020-01-01};\n  {"vin0003"; Red;    0; 2020-01-01};\n  {"vin0004"; Red;    0; 2020-01-01};\n  {"vin0005"; Yellow; 0; 2020-01-01};\n  {"vin0006"; White;  0; 2020-01-01};\n  {"vin0007"; Yellow; 0; 2020-01-01};\n  {"vin0008"; Yellow; 1; 2019-01-01};\n  {"vin0009"; Red;    3; 2019-04-01};\n  {"vin0010"; White;  2; 2019-03-01};\n  {"vin0011"; Yellow; 2; 2019-02-01}\n}\n\nentry addvehicle (pvin : string) {\n  vehicle.add({ vin = pvin })\n}\n\nentry repair (k : string) {\n  vehicle.update(k, { nbrepairs += 1; lastrepair = now})\n}\n\nentry repair_oldest() {\n  for v in vehicle.sort(lastrepair).head(3) do\n    vehicle.update(v, { nbrepairs += 1; lastrepair = now })\n  done\n}\n\nentry repaint_repaired (newc : color) {\n  for v in vehicle.select(the.nbrepairs >= 1) do\n    vehicle[v].c := newc\n  done\n}\n')),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"addvehicle")," entry point, the only necessary data to create the new asset is the vin because all other data have a default value. If no default value was set, the following would be necessary to create a new asset:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-archetype"}," vehicle.add({ pvin; pcolor; 0; now })\n")),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"repaint_repaired")," entry point, this update syntax is adapted when a single field is updated; otherwize the ",(0,r.kt)("inlineCode",{parentName:"p"},"update")," operator is preferred for performance reason:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"vehicle.update(v, { color := newc })\n")),(0,r.kt)("p",null,"At last, note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"sort")," function sorts in ascending order. Another way to implement that is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-archetype",metastring:"{1}","{1}":!0},"  for v in vehicle.sort(desc(lastrepair)).tail(3) do\n    vehicle.update(v, { nbrepairs += 1; lastrepair = now })\n  done\n")),(0,r.kt)("h3",{id:"deploy"},"Deploy"),(0,r.kt)("p",null,"The following ",(0,r.kt)(l.Z,{to:"/docs/cli",mdxType:"Link"},"Completium CLI")," command deploys the contract on the Tezos network:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli deploy 7-assets.arl\n")),(0,r.kt)("h3",{id:"call-entry-point"},"Call entry point"),(0,r.kt)("p",null,"The following command adds a vehicle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli call 7-assets --entry addvehicle --with '\"vin0012\"'\n")),(0,r.kt)("p",null,"The following command repairs vehicle with vin ",(0,r.kt)("inlineCode",{parentName:"p"},"vin0005"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli call 7-assets --entry repair --with '\"vin0005\"'\n")),(0,r.kt)("p",null,"The following repairs the 3 oldest vehicles:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli call 7-assets --entry repair_oldest\n")),(0,r.kt)("p",null,"Finally, repaint repaired vehicles in blue:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"completium-cli call 7-assets --entry repaint_repaired --with '3'\n")),(0,r.kt)("p",null,"Enums are implemented with integer values starting from 0."),(0,r.kt)("h3",{id:"next"},"Next"),(0,r.kt)("p",null,"Open '8-1-contract_called.arl' and click on \"Next: Call a Contract\" below."))}h.isMDXComponent=!0}}]);