(self.webpackChunkcompletium_landing=self.webpackChunkcompletium_landing||[]).push([[4550],{3514:function(n,r,t){"use strict";t.d(r,{Z:function(){return k}});var i=t(2137),e=t(7757),a=t.n(e),m=t(7294),p=t(8463),o=t(1749),s=t(1965),l=t(2318),P=t(282),u=t(9277),I=t(3457),c=t(6994),D=t(6032),g=t(7754),d=t(6816),U=[{prim:"storage",args:[{prim:"pair",args:[{prim:"address",annots:["%owner"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"int"},{prim:"nat"}],annots:["%rate"]},{prim:"pair",args:[{prim:"timestamp",annots:["%endofservice"]},{prim:"pair",args:[{prim:"timestamp",annots:["%startofservice"]},{prim:"pair",args:[{prim:"int",annots:["%time_unit"]},{prim:"pair",args:[{prim:"mutez",annots:["%tez_unit"]},{prim:"pair",args:[{prim:"option",args:[{prim:"address"}],annots:["%user"]},{prim:"int",annots:["%read_interval"]}]}]}]}]}]}]}]}]},{prim:"parameter",args:[{prim:"or",args:[{prim:"unit",annots:["%start"]},{prim:"or",args:[{prim:"unit",annots:["%interrupt"]},{prim:"or",args:[{prim:"unit",annots:["%collect"]},{prim:"pair",args:[{prim:"int",annots:["%dunit"]},{prim:"mutez",annots:["%tunit"]}],annots:["%setunits"]}]}]}]}]},{prim:"code",args:[[{prim:"LAMBDA",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"int"},{prim:"nat"}]},{prim:"pair",args:[{prim:"mutez"},{prim:"int"}]}]},{prim:"pair",args:[{prim:"int"},{prim:"nat"}]},[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"PUSH",args:[{prim:"unit"},{prim:"Unit"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"PUSH",args:[{prim:"mutez"},{int:"1"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[{prim:"DUP"},{prim:"CAR"},{prim:"SWAP"},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"INT"},{prim:"PAIR"},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"}]]},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"SWAP"}]]},{prim:"MUL"},{prim:"DIP",args:[{int:"1"},[{prim:"MUL"}]]},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"}]]},{prim:"UNPAIR"},{prim:"DIG",args:[{int:"3"}]},{prim:"PUSH",args:[{prim:"int"},{int:"0"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"COMPARE"},{prim:"GE"},{prim:"IF",args:[[{prim:"INT"}],[{prim:"NEG"}]]},{prim:"MUL"},{prim:"DIP",args:[{int:"1"},[{prim:"MUL"},{prim:"ABS"}]]},{prim:"PAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"2"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"2"}]},{prim:"DROP",args:[{int:"2"}]},{prim:"DUG",args:[{int:"3"}]},{prim:"DROP",args:[{int:"3"}]}]]},{prim:"LAMBDA",args:[{prim:"pair",args:[{prim:"timestamp"},{prim:"pair",args:[{prim:"pair",args:[{prim:"int"},{prim:"nat"}]},{prim:"pair",args:[{prim:"mutez"},{prim:"pair",args:[{prim:"int"},{prim:"lambda",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"int"},{prim:"nat"}]},{prim:"pair",args:[{prim:"mutez"},{prim:"int"}]}]},{prim:"pair",args:[{prim:"int"},{prim:"nat"}]}]}]}]}]}]},{prim:"mutez"},[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"PUSH",args:[{prim:"unit"},{prim:"Unit"}]},{prim:"NOW"},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"SUB"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"EXEC"},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"INT"},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"}]]},{prim:"UNPAIR"},{prim:"DIG",args:[{int:"3"}]},{prim:"PUSH",args:[{prim:"int"},{int:"0"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"COMPARE"},{prim:"GE"},{prim:"IF",args:[[{prim:"INT"}],[{prim:"NEG"}]]},{prim:"MUL"},{prim:"DIP",args:[{int:"1"},[{prim:"MUL"},{prim:"ABS"}]]},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"UNPAIR"},{prim:"DIG",args:[{int:"2"}]},{prim:"MUL"},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[]]},{prim:"CAR"},{prim:"PUSH",args:[{prim:"mutez"},{int:"1"}]},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"UNPAIR"},{prim:"ABS"},{prim:"DIG",args:[{int:"2"}]},{prim:"MUL"},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[]]},{prim:"CAR"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"1"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"1"}]},{prim:"DROP",args:[{int:"1"}]},{prim:"DUG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"5"}]}]]},{prim:"NIL",args:[{prim:"operation"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"}]]},{prim:"IF_LEFT",args:[[{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"NOW"},{prim:"COMPARE"},{prim:"GT"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"InvalidCondition: r1"}]},{prim:"FAILWITH"}],[]]},{prim:"PUSH",args:[{prim:"mutez"},{int:"1"}]},{prim:"AMOUNT"},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[{prim:"DUP"},{prim:"CAR"},{prim:"SWAP"},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"PUSH",args:[{prim:"int"},{int:"1"}]},{prim:"PUSH",args:[{prim:"nat"},{int:"1"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"INT"},{prim:"PAIR"},{prim:"DIG",args:[{int:"13"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"14"}]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"11"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"12"}]},{prim:"PAIR"},{prim:"EXEC"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"}]]},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"SWAP"}]]},{prim:"MUL"},{prim:"DIP",args:[{int:"1"},[{prim:"MUL"}]]},{prim:"PAIR"},{prim:"PAIR"},{prim:"UNPAIR"},{prim:"UNPAIR"},{prim:"DIG",args:[{int:"2"}]},{prim:"MUL"},{prim:"EDIV"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"DivByZero"}]},{prim:"FAILWITH"}],[]]},{prim:"CAR"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"COMPARE"},{prim:"GT"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"NOW"},{prim:"ADD"},{prim:"ADD"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"7"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"7"}]},{prim:"NOW"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"6"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"6"}]},{prim:"SENDER"},{prim:"SOME"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"3"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"3"}]}],[]]},{prim:"DROP",args:[{int:"2"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"NOW"},{prim:"COMPARE"},{prim:"LT"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"NoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"SENDER"},{prim:"COMPARE"},{prim:"EQ"},{prim:"AND"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"InvalidCondition: r2"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"8"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"9"}]},{prim:"SENDER"},{prim:"CONTRACT",args:[{prim:"unit"}]},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"BadContract"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"11"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"12"}]},{prim:"DIG",args:[{int:"13"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"14"}]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"10"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"11"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"PAIR"},{prim:"EXEC"},{prim:"UNIT"},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"8"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"8"}]},{prim:"DUP"},{prim:"NOW"},{prim:"SUB"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DUP"},{prim:"NOW"},{prim:"SUB"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"SENDER"},{prim:"COMPARE"},{prim:"EQ"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"InvalidCaller"}]},{prim:"FAILWITH"}],[]]},{prim:"PUSH",args:[{prim:"mutez"},{int:"0"}]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"NOW"},{prim:"COMPARE"},{prim:"LT"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"10"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"11"}]},{prim:"DIG",args:[{int:"12"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"13"}]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"PAIR"},{prim:"DIG",args:[{int:"8"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"9"}]},{prim:"PAIR"},{prim:"EXEC"},{prim:"SWAP"},{prim:"DROP",args:[{int:"1"}]}],[]]},{prim:"PUSH",args:[{prim:"mutez"},{int:"0"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"BALANCE"},{prim:"SUB"},{prim:"COMPARE"},{prim:"GT"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"CONTRACT",args:[{prim:"unit"}]},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"BadContract"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"BALANCE"},{prim:"SUB"},{prim:"UNIT"},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"9"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"9"}]}],[]]},{prim:"DROP",args:[{int:"1"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"DIG",args:[{int:"9"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"10"}]},{prim:"SENDER"},{prim:"COMPARE"},{prim:"EQ"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"InvalidCaller"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"2"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}]]}]]}]]},{prim:"DIP",args:[{int:"1"},[{prim:"DROP",args:[{int:"2"}]}]]}]]}],A=function(n,r){return{prim:"Pair",args:[{string:n},{prim:"Pair",args:[r,{prim:"Pair",args:[{int:"1618169559"},{prim:"Pair",args:[{int:"1618169559"},{prim:"Pair",args:[{int:"60"},{prim:"Pair",args:[{int:"1000000"},{prim:"Pair",args:[{prim:"None"},{int:"5"}]}]}]}]}]}]}]}},N=t(6742),R=t(7395),G=t(2592),h=function(n){if((0,c.C1)()){var r=(0,c.$u)();return m.createElement(o.Z,{container:!0,direction:"column",justify:"center",alignItems:"center"},m.createElement(l.Z,{variant:"subtitle2"},"Connected with:"),m.createElement(l.Z,{variant:"subtitle2",style:{fontFamily:"Courier Prime, monospace"}},r))}return m.createElement(o.Z,{container:!0},m.createElement(o.Z,{item:!0,xs:8},m.createElement(d.Z,{main:n.main})),m.createElement(o.Z,{item:!0,xs:2},m.createElement(R.Z,{checked:n.main,onChange:function(r){n.setMain(r.target.checked)},name:"checkedB",color:"primary"})),m.createElement(o.Z,{item:!0,xs:2},m.createElement(l.Z,{variant:"subtitle2",style:{marginTop:"8px"}},"Mainnet")))};var f=function(n){return m.createElement(o.Z,{container:!0,direction:"column",justify:"center",alignItems:"center"},m.createElement(l.Z,{variant:"subtitle2"},"Contract available at:"),m.createElement(l.Z,{component:N.Z,to:"https://better-call.dev/"+(n.main?"mainnet":G.WY)+"/"+n.contract+"/operations",variant:"subtitle2",style:{fontFamily:"Courier Prime, monospace"}},n.contract))},S=function(){var n=m.useState(""),r=n[0],e=n[1],l=m.useState(1.5),u=l[0],I=l[1],D=m.useState(""),d=D[0],N=D[1],R=m.useState(!1),G=R[0],S=R[1],k=(0,g.qJ)(),v=k.setInfoSnack,E=k.setErrorSnack,O=k.hideSnack,W=(0,c.Ch)(),C=(0,c.C1)(),y=function(){return r.length>0&(36!==(n=r).length|!n.startsWith("tz1"));var n},T=function(){return!(u>0)},b=function(){var n=(0,i.Z)(a().mark((function n(){var i,e,m,p,o,s;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,i=t(4686).i,e=new i(u),m={prim:"Pair",args:[{int:e.numerator.toString()},{int:e.denominator.toString()}]},n.next=6,W.wallet.originate({code:U,init:A(r,m)}).send();case 6:return p=n.sent,o=p.opHash.substring(0,10)+"...",v("waiting for "+o+" to be confirmed ..."),n.next=11,p.contract();case 11:s=n.sent,O(),console.log("Origination completed for "+s.address+"."),setTimeout((function(){return N(s.address)}),5e3),n.next=22;break;case 17:n.prev=17,n.t0=n.catch(0),console.log(n.t0),E(n.t0.message),setTimeout(O,4e3);case 22:case"end":return n.stop()}}),n,null,[[0,17]])})));return function(){return n.apply(this,arguments)}}();return m.createElement(p.Z,{style:{backgroundColor:"transparent",border:"1px solid #606770",marginTop:"20px",marginBottom:"20px"},raised:!1},m.createElement(o.Z,{container:!0,style:{padding:22},spacing:3},m.createElement(o.Z,{item:!0,xs:6},m.createElement(s.Z,{onChange:function(n){e(n.target.value)},value:r,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"initalholder",label:"Owner",error:y(),helperText:y()?"Invalid address format":""})),m.createElement(o.Z,{item:!0,xs:6,style:{textAlign:"center",marginTop:"10px"}},m.createElement(h,{main:G,setMain:S})),m.createElement(o.Z,{item:!0,xs:6},m.createElement(s.Z,{type:"number",onChange:function(n){I(n.target.value)},error:T(),helperText:T()?"Invalid Number":"",value:u,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"totalsupply",label:"Rate"})),m.createElement(o.Z,{item:!0,xs:6,style:{textAlign:"center",marginTop:"10px"}},""!==d?m.createElement(f,{contract:d,main:G}):m.createElement(P.Z,{variant:"contained",color:"primary",disableElevation:!0,disabled:!C|T()|y()|0==r.length,onClick:b},"originate"))))},k=function(n){var r=m.useMemo((function(){return(0,u.Z)({palette:{type:"dark",primary:{light:"#1dc5ff",main:"#00ACE7",dark:"#0a90bf",contrastText:"#fff"}}})}),[!0]);return m.createElement(c.MZ,{appName:"Completium IOT"},m.createElement(g.q7,null,m.createElement(I.Z,{theme:r},m.createElement(S,null),m.createElement(D.Z,null))))}},6032:function(n,r,t){"use strict";var i=t(2122),e=t(7294),a=t(6912),m=t(8715),p=t(8920),o=t(7754);function s(n){return e.createElement(m.Z,(0,i.Z)({elevation:6,variant:"filled"},n))}r.Z=function(){var n=(0,o.qJ)().snackState;(0,p.Z)();return e.createElement(a.Z,{open:n.show},e.createElement(s,{severity:n.severity},n.msg))}},6816:function(n,r,t){"use strict";var i=t(2137),e=t(7757),a=t.n(e),m=t(7294),p=t(6994),o=t(2592),s=t(282),l=t(9659),P=t(8920);r.Z=function(n){var r=(0,P.Z)(),t=(0,p.C1)(),e=(0,p.Os)(),u=(0,p.$4)(),I=m.useCallback((function(n){return(0,i.Z)(a().mark((function r(){return a().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,u(n?"mainnet":o.L5);case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),alert(r.t0.message);case 8:case 9:case"end":return r.stop()}}),r,null,[[0,5]])})))}),[u]);return t?m.createElement("div",null):e?m.createElement(s.Z,{variant:"outlined",color:r.palette.text.primary,onClick:I(n.main)},"connect to wallet"):m.createElement(l.Z,{href:"https://templewallet.com/",rel:"noopener",underline:"none"},m.createElement(s.Z,{variant:"contained",disableElevation:!0,style:{backgroundColor:"#ed8936",color:"white",fontWeight:"bold"}},"install Temple"))}},2592:function(n,r,t){"use strict";t.d(r,{L5:function(){return i},WY:function(){return e}});var i="florencenet",e="florencenet"},7754:function(n,r,t){"use strict";t.d(r,{q7:function(){return a},qJ:function(){return m}});var i=t(7294);var e=(0,t(1521).Z)((function(){var n=(0,i.useState)({show:!1,severity:"info",msg:""}),r=n[0],t=n[1];return{snackState:r,setInfoSnack:function(n){t({show:!0,severity:"info",msg:n})},setErrorSnack:function(n){t({show:!0,severity:"error",msg:n})},hideSnack:function(){t((function(n){return Object.assign({},n,{show:!1})}))}}})),a=e[0],m=e[1]},6994:function(n,r,t){"use strict";t.d(r,{MZ:function(){return l},Os:function(){return P},Ch:function(){return u},$u:function(){return I},C1:function(){return c},$4:function(){return D}});var i=t(2137),e=t(7757),a=t.n(e),m=t(7294),p=t(1521),o=t(6405),s=(0,p.Z)((function(n){var r=n.appName,t=m.useState((function(){return{wallet:null,tezos:null,accountPkh:null}})),e=t[0],p=e.wallet,s=e.tezos,l=e.accountPkh,P=t[1],u=Boolean(s);m.useEffect((function(){return o.Uw.onAvailabilityChange((function(n){P({wallet:n?new o.Uw(r):null,tezos:null,accountPkh:null})}))}),[P,r]);var I=m.useCallback(function(){var n=(0,i.Z)(a().mark((function n(r,t){var i,e;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(n.prev=0,p){n.next=3;break}throw new Error("Thanos Wallet not available");case 3:return n.next=5,p.connect(r,t);case 5:return i=p.toTezos(),n.next=8,i.wallet.pkh();case 8:e=n.sent,P({wallet:p,tezos:i,accountPkh:e}),n.next=15;break;case 12:n.prev=12,n.t0=n.catch(0),alert("Failed to connect ThanosWallet: "+n.t0.message);case 15:case"end":return n.stop()}}),n,null,[[0,12]])})));return function(r,t){return n.apply(this,arguments)}}(),[P,p]);return{wallet:p,tezos:s,accountPkh:l,ready:u,connect:I}}),(function(n){return n.wallet}),(function(n){return n.tezos}),(function(n){return n.accountPkh}),(function(n){return n.ready}),(function(n){return n.connect})),l=s[0],P=s[1],u=s[2],I=s[3],c=s[4],D=s[5]},2359:function(n,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return P},contentTitle:function(){return u},metadata:function(){return I},toc:function(){return c},default:function(){return g}});var i=t(2122),e=t(9756),a=(t(7294),t(3905)),m=t(6742),p=t(5064),o=t(8215),s=t(3514),l=["components"],P={id:"template15",title:"Connected Object",sidebar_label:"Connected Object",slug:"/templates/iot"},u=void 0,I={unversionedId:"templates/template15",id:"templates/template15",isDocsHomePage:!1,title:"Connected Object",description:"Introduction",source:"@site/docs/templates/template15.md",sourceDirName:"templates",slug:"/templates/iot",permalink:"/docs/templates/iot",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/templates/template15.md",version:"current",frontMatter:{id:"template15",title:"Connected Object",sidebar_label:"Connected Object",slug:"/templates/iot"},sidebar:"templates",previous:{title:"Miles",permalink:"/docs/templates/miles"},next:{title:"Health care",permalink:"/docs/templates/healthcare"}},c=[{value:"Introduction",id:"introduction",children:[]},{value:"API",id:"api",children:[{value:"Storage",id:"storage",children:[]},{value:"Entrypoints",id:"entrypoints",children:[]}]},{value:"Originate",id:"originate",children:[{value:"Command line",id:"command-line",children:[]}]},{value:"Code",id:"code",children:[]}],D={toc:c};function g(n){var r=n.components,t=(0,e.Z)(n,l);return(0,a.kt)("wrapper",(0,i.Z)({},D,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"A connected object reads this contract to decide whether to switch on or off."),(0,a.kt)("p",null,"It reads the contract on a regular basis (typically every 5 second):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"it switches on if the ",(0,a.kt)("em",{parentName:"li"},"end of service")," date is in the futur"),(0,a.kt)("li",{parentName:"ul"},"it switches off if the ",(0,a.kt)("em",{parentName:"li"},"end of service")," date is in the past")),(0,a.kt)("p",null,"The object is connected to the internet and executes an HTTP GET request to the Tezos blockchain on a regular basis, and reads the resulting Json answer."),(0,a.kt)("p",null,"Any user can transfer tezies to the contract to switch on the object for a duration determined by an exhange rate (tez to duration)."),(0,a.kt)("p",null,"See this contract in action in the ",(0,a.kt)(m.Z,{to:"/docs/dapp-iot/",mdxType:"Link"},"Connected Object")," DApp example."),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"storage"},"Storage"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"owner")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"adddress")),(0,a.kt)("td",{parentName:"tr",align:null},"Object owner can change exchange ",(0,a.kt)("inlineCode",{parentName:"td"},"rate")," and collect payments.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"rate")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"rational")),(0,a.kt)("td",{parentName:"tr",align:null},"Exchange rate between tez and duration: ",(0,a.kt)("inlineCode",{parentName:"td"},"rate")," ",(0,a.kt)("inlineCode",{parentName:"td"},"time_unit")," in exchange for ",(0,a.kt)("inlineCode",{parentName:"td"},"tez_unit")," amount of payment.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"endofservice")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"date")),(0,a.kt)("td",{parentName:"tr",align:null},"Date of end of service. Read by object to decide whether to switch on or off.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"startofservice")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"date")),(0,a.kt)("td",{parentName:"tr",align:null},"Date of start of service. For information only.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"time_unit")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"duration")),(0,a.kt)("td",{parentName:"tr",align:null},"Time unit used in service duration computation.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"tez_unit")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"tez")),(0,a.kt)("td",{parentName:"tr",align:null},"Tez unit used in service duration computation.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"user")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"option<address>")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,"some address of the current user to switch on object"),(0,a.kt)("li",null," none otherwise")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"read_interval")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"duration")),(0,a.kt)("td",{parentName:"tr",align:null},"Frequency of read by object.")))),(0,a.kt)("h3",{id:"entrypoints"},"Entrypoints"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Argument"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"start")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Starts service. The duration ",(0,a.kt)("em",{parentName:"td"},"d")," of service is computed as: ",(0,a.kt)("p",null),(0,a.kt)("em",{parentName:"td"},"d")," = ",(0,a.kt)("inlineCode",{parentName:"td"},"rate")," * ",(0,a.kt)("em",{parentName:"td"},"transferred"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"interrupt")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"User who started service can interrupt it. ",(0,a.kt)("p",null),"It pays back the user so that only the effective duration of service is paid.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"collect")),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"Owner collects payments.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"setunits")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"d"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"t")),(0,a.kt)("td",{parentName:"tr",align:null},"Owner can set time unit to ",(0,a.kt)("inlineCode",{parentName:"td"},"d")," and tez unit to ",(0,a.kt)("inlineCode",{parentName:"td"},"t")," when computing duration of service.")))),(0,a.kt)("h2",{id:"originate"},"Originate"),(0,a.kt)("p",null,"Originate a switch contract with the widget below."),(0,a.kt)("p",null,'Click "Connect to Wallet" button, fill the fields "Owner" and "Rate", and click "Originate".'),(0,a.kt)(s.Z,{mdxType:"DeployIOT"}),(0,a.kt)("h3",{id:"command-line"},"Command line"),(0,a.kt)("p",null,"Originate the contract from ",(0,a.kt)("a",{href:"https://archetype-lang.org/"},"Archetype")," code below with the following ",(0,a.kt)(m.Z,{to:"/docs/cli",mdxType:"Link"},"Completium CLI")," example command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"completium-cli deploy switch.arl --init '(@tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG, 2,5)'\n")),(0,a.kt)("p",null,"The command sets:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"owner")," constant to ",(0,a.kt)("inlineCode",{parentName:"li"},"tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rate")," variable to 2.5")),(0,a.kt)("h2",{id:"code"},"Code"),(0,a.kt)(p.Z,{defaultValue:"archetype",values:[{label:"Archetype",value:"archetype"},{label:"Michelson",value:"michelson"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"archetype",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-archetype",metastring:'title="switch.arl"',title:'"switch.arl"'},"archetype switch(\n  owner : address,\n  rate  : rational\n)\n\nvariable endofservice    : date = now\nvariable startofservice  : date = now\n\nvariable time_unit : duration = 1m\nvariable tez_unit : tez = 1tz\n\nvariable user : option<address> = none\n\nvariable read_interval : duration = 5s\n\nfunction get_rate_in_s_by_utz () : rational {\n  var d : int = time_unit;\n  var t : nat = tez_unit;\n  return (rate * d / t)\n}\n\nfunction get_return_tz () : tez {\n  var res : int = 1 / get_rate_in_s_by_utz() * (endofservice - now);\n  return (res * 1utz)\n}\n\nentry start () {\n  require { r1: now > endofservice }\n  effect {\n    var t : nat = transferred;\n    var dur : duration = (get_rate_in_s_by_utz() * t)*1s;\n    if dur > read_interval then begin\n      endofservice   := now + dur + read_interval;\n      startofservice := now;\n      user := some(caller)\n    end\n  }\n}\n\nentry interrupt () {\n  require { r2: caller = opt_get(user) and now < endofservice }\n  effect {\n    transfer (get_return_tz()) to caller;\n    endofservice   := now - read_interval;\n    startofservice := now - read_interval;\n  }\n}\n\nentry collect () {\n  called by owner\n  effect {\n    var keep = 0tz;\n    if now < endofservice then\n      keep := get_return_tz();\n    if balance - keep > 0tz then\n      transfer (balance - keep) to owner\n  }\n}\n\nentry setunits (dunit : duration, tunit : tez) {\n  called by owner\n  effect {\n    time_unit := dunit;\n    tez_unit  := tunit;\n  }\n}\n"))),(0,a.kt)(o.Z,{value:"michelson",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'# (Pair owner (Pair rate (Pair 1618187115 (Pair 1618187115 (Pair 60 (Pair 1000000 (Pair None 5)))))))\n{\n  storage (pair (address %owner) (pair (pair %rate int nat) (pair (timestamp %endofservice) (pair (timestamp %startofservice) (pair (int %time_unit) (pair (mutez %tez_unit) (pair (option %user address) (int %read_interval))))))));\n  parameter (or (unit %start) (or (unit %interrupt) (or (unit %collect) (pair %setunits (int %dunit) (mutez %tunit)))));\n  code { LAMBDA\n           (pair (pair int nat) (pair mutez int))\n           (pair int nat)\n           { UNPAIR;\n             SWAP;\n             UNPAIR;\n             SWAP;\n             PUSH unit Unit;\n             DIG 1;\n             DUP;\n             DUG 2;\n             PUSH mutez 1;\n             DIG 4;\n             DUP;\n             DUG 5;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               { DUP;\n                 CAR;\n                 SWAP;\n                 DROP };\n             PUSH nat 1;\n             DIG 1;\n             DUP;\n             DUG 2;\n             INT;\n             PAIR;\n             PUSH nat 1;\n             DIG 3;\n             DUP;\n             DUG 4;\n             PAIR;\n             DIG 7;\n             DUP;\n             DUG 8;\n             PAIR;\n             UNPAIR;\n             DIP { UNPAIR };\n             UNPAIR;\n             DIP { SWAP };\n             MUL;\n             DIP { MUL };\n             PAIR;\n             PAIR;\n             UNPAIR;\n             DIP { UNPAIR };\n             UNPAIR;\n             DIG 3;\n             PUSH int 0;\n             DIG 4;\n             DUP;\n             DUG 5;\n             COMPARE;\n             GE;\n             IF\n               { INT }\n               { NEG };\n             MUL;\n             DIP { MUL; ABS };\n             PAIR;\n             DIP { DIG 2; DROP };\n             DUG 2;\n             DROP 2;\n             DUG 3;\n             DROP 3 };\n         LAMBDA\n           (pair timestamp (pair (pair int nat) (pair mutez (pair int (lambda (pair (pair int nat) (pair mutez int)) (pair int nat))))))\n           mutez\n           { UNPAIR;\n             SWAP;\n             UNPAIR;\n             SWAP;\n             UNPAIR;\n             SWAP;\n             UNPAIR;\n             SWAP;\n             PUSH unit Unit;\n             NOW;\n             DIG 6;\n             DUP;\n             DUG 7;\n             SUB;\n             DIG 2;\n             DUP;\n             DUG 3;\n             DIG 4;\n             DUP;\n             DUG 5;\n             DIG 6;\n             DUP;\n             DUG 7;\n             PAIR;\n             DIG 7;\n             DUP;\n             DUG 8;\n             PAIR;\n             EXEC;\n             PUSH nat 1;\n             PUSH nat 1;\n             INT;\n             PAIR;\n             PAIR;\n             UNPAIR;\n             DIP { UNPAIR };\n             UNPAIR;\n             DIG 3;\n             PUSH int 0;\n             DIG 4;\n             DUP;\n             DUG 5;\n             COMPARE;\n             GE;\n             IF\n               { INT }\n               { NEG };\n             MUL;\n             DIP { MUL; ABS };\n             PAIR;\n             PAIR;\n             UNPAIR;\n             UNPAIR;\n             DIG 2;\n             MUL;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               {  };\n             CAR;\n             PUSH mutez 1;\n             PUSH nat 1;\n             DIG 2;\n             DUP;\n             DUG 3;\n             PAIR;\n             PAIR;\n             UNPAIR;\n             UNPAIR;\n             ABS;\n             DIG 2;\n             MUL;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               {  };\n             CAR;\n             DIP { DIG 1; DROP };\n             DUG 1;\n             DROP;\n             DUG 5;\n             DROP 5 };\n         NIL operation;\n         DIG 3;\n         UNPAIR;\n         DIP { UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP };\n         IF_LEFT\n           { DROP;\n             DIG 5;\n             DUP;\n             DUG 6;\n             NOW;\n             COMPARE;\n             GT;\n             NOT;\n             IF\n               { PUSH string "InvalidCondition: r1";\n                 FAILWITH }\n               {  };\n             PUSH mutez 1;\n             AMOUNT;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               { DUP;\n                 CAR;\n                 SWAP;\n                 DROP };\n             PUSH int 1;\n             PUSH nat 1;\n             DIG 2;\n             DUP;\n             DUG 3;\n             INT;\n             PAIR;\n             DIG 13;\n             DUP;\n             DUG 14;\n             DIG 7;\n             DUP;\n             DUG 8;\n             DIG 7;\n             DUP;\n             DUG 8;\n             PAIR;\n             DIG 11;\n             DUP;\n             DUG 12;\n             PAIR;\n             EXEC;\n             PAIR;\n             UNPAIR;\n             DIP { UNPAIR };\n             UNPAIR;\n             DIP { SWAP };\n             MUL;\n             DIP { MUL };\n             PAIR;\n             PAIR;\n             UNPAIR;\n             UNPAIR;\n             DIG 2;\n             MUL;\n             EDIV;\n             IF_NONE\n               { PUSH string "DivByZero";\n                 FAILWITH }\n               {  };\n             CAR;\n             DIG 2;\n             DUP;\n             DUG 3;\n             DIG 1;\n             DUP;\n             DUG 2;\n             COMPARE;\n             GT;\n             IF\n               { DIG 2;\n                 DUP;\n                 DUG 3;\n                 DIG 1;\n                 DUP;\n                 DUG 2;\n                 NOW;\n                 ADD;\n                 ADD;\n                 DIP { DIG 7; DROP };\n                 DUG 7;\n                 NOW;\n                 DIP { DIG 6; DROP };\n                 DUG 6;\n                 SENDER;\n                 SOME;\n                 DIP { DIG 3; DROP };\n                 DUG 3 }\n               {  };\n             DROP 2;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             DIG 1;\n             PAIR }\n           { IF_LEFT\n               { DROP;\n                 DIG 5;\n                 DUP;\n                 DUG 6;\n                 NOW;\n                 COMPARE;\n                 LT;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 IF_NONE\n                   { PUSH string "NoneValue";\n                     FAILWITH }\n                   {  };\n                 SENDER;\n                 COMPARE;\n                 EQ;\n                 AND;\n                 NOT;\n                 IF\n                   { PUSH string "InvalidCondition: r2";\n                     FAILWITH }\n                   {  };\n                 DIG 8;\n                 DUP;\n                 DUG 9;\n                 SENDER;\n                 CONTRACT unit;\n                 IF_NONE\n                   { PUSH string "BadContract";\n                     FAILWITH }\n                   {  };\n                 DIG 11;\n                 DUP;\n                 DUG 12;\n                 DIG 13;\n                 DUP;\n                 DUG 14;\n                 DIG 7;\n                 DUP;\n                 DUG 8;\n                 PAIR;\n                 DIG 6;\n                 DUP;\n                 DUG 7;\n                 PAIR;\n                 DIG 10;\n                 DUP;\n                 DUG 11;\n                 PAIR;\n                 DIG 9;\n                 DUP;\n                 DUG 10;\n                 PAIR;\n                 EXEC;\n                 UNIT;\n                 TRANSFER_TOKENS;\n                 CONS;\n                 DIP { DIG 8; DROP };\n                 DUG 8;\n                 DUP;\n                 NOW;\n                 SUB;\n                 DIP { DIG 5; DROP };\n                 DUG 5;\n                 DUP;\n                 NOW;\n                 SUB;\n                 DIP { DIG 4; DROP };\n                 DUG 4;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 DIG 1;\n                 PAIR }\n               { IF_LEFT\n                   { DROP;\n                     DIG 7;\n                     DUP;\n                     DUG 8;\n                     SENDER;\n                     COMPARE;\n                     EQ;\n                     NOT;\n                     IF\n                       { PUSH string "InvalidCaller";\n                         FAILWITH }\n                       {  };\n                     PUSH mutez 0;\n                     DIG 6;\n                     DUP;\n                     DUG 7;\n                     NOW;\n                     COMPARE;\n                     LT;\n                     IF\n                       { DIG 10;\n                         DUP;\n                         DUG 11;\n                         DIG 12;\n                         DUP;\n                         DUG 13;\n                         DIG 6;\n                         DUP;\n                         DUG 7;\n                         PAIR;\n                         DIG 5;\n                         DUP;\n                         DUG 6;\n                         PAIR;\n                         DIG 9;\n                         DUP;\n                         DUG 10;\n                         PAIR;\n                         DIG 8;\n                         DUP;\n                         DUG 9;\n                         PAIR;\n                         EXEC;\n                         SWAP;\n                         DROP }\n                       {  };\n                     PUSH mutez 0;\n                     DIG 1;\n                     DUP;\n                     DUG 2;\n                     BALANCE;\n                     SUB;\n                     COMPARE;\n                     GT;\n                     IF\n                       { DIG 9;\n                         DUP;\n                         DUG 10;\n                         DIG 9;\n                         DUP;\n                         DUG 10;\n                         CONTRACT unit;\n                         IF_NONE\n                           { PUSH string "BadContract";\n                             FAILWITH }\n                           {  };\n                         DIG 2;\n                         DUP;\n                         DUG 3;\n                         BALANCE;\n                         SUB;\n                         UNIT;\n                         TRANSFER_TOKENS;\n                         CONS;\n                         DIP { DIG 9; DROP };\n                         DUG 9 }\n                       {  };\n                     DROP;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     DIG 1;\n                     PAIR }\n                   { UNPAIR;\n                     SWAP;\n                     DIG 9;\n                     DUP;\n                     DUG 10;\n                     SENDER;\n                     COMPARE;\n                     EQ;\n                     NOT;\n                     IF\n                       { PUSH string "InvalidCaller";\n                         FAILWITH }\n                       {  };\n                     DIG 1;\n                     DUP;\n                     DUG 2;\n                     DIP { DIG 5; DROP };\n                     DUG 5;\n                     DUP;\n                     DIP { DIG 4; DROP };\n                     DUG 4;\n                     DROP 2;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     DIG 1;\n                     PAIR } } };\n         DIP { DROP 2 } };\n}\n')))))}g.isMDXComponent=!0},4686:function(n){var r,t;Fraction=function(n,r){if(void 0!==n&&r)"number"==typeof n&&"number"==typeof r?(this.numerator=n,this.denominator=r):"string"==typeof n&&"string"==typeof r&&(this.numerator=parseInt(n),this.denominator=parseInt(r));else if(void 0===r)if(num=n,"number"==typeof num)this.numerator=num,this.denominator=1;else if("string"==typeof num){var t,i,e=num.split(" ");if(e[0]&&(t=e[0]),e[1]&&(i=e[1]),t%1==0&&i&&i.match("/"))return new Fraction(t).add(new Fraction(i));if(!t||i)return;if("string"==typeof t&&t.match("/")){var a=t.split("/");this.numerator=a[0],this.denominator=a[1]}else{if("string"==typeof t&&t.match("."))return new Fraction(parseFloat(t));this.numerator=parseInt(t),this.denominator=1}}this.normalize()},Fraction.prototype.clone=function(){return new Fraction(this.numerator,this.denominator)},Fraction.prototype.toString=function(){if("NaN"===this.denominator)return"NaN";var n=this.numerator/this.denominator>0?Math.floor(this.numerator/this.denominator):Math.ceil(this.numerator/this.denominator),r=this.numerator%this.denominator,t=this.denominator,i=[];return 0!=n&&i.push(n),0!=r&&i.push((0===n?r:Math.abs(r))+"/"+t),i.length>0?i.join(" "):0},Fraction.prototype.rescale=function(n){return this.numerator*=n,this.denominator*=n,this},Fraction.prototype.add=function(n){var r=this.clone();return n=n instanceof Fraction?n.clone():new Fraction(n),td=r.denominator,r.rescale(n.denominator),n.rescale(td),r.numerator+=n.numerator,r.normalize()},Fraction.prototype.subtract=function(n){var r=this.clone();return n=n instanceof Fraction?n.clone():new Fraction(n),td=r.denominator,r.rescale(n.denominator),n.rescale(td),r.numerator-=n.numerator,r.normalize()},Fraction.prototype.multiply=function(n){var r=this.clone();if(n instanceof Fraction)r.numerator*=n.numerator,r.denominator*=n.denominator;else{if("number"!=typeof n)return r.multiply(new Fraction(n));r.numerator*=n}return r.normalize()},Fraction.prototype.divide=function(n){var r=this.clone();if(n instanceof Fraction)r.numerator*=n.denominator,r.denominator*=n.numerator;else{if("number"!=typeof n)return r.divide(new Fraction(n));r.denominator*=n}return r.normalize()},Fraction.prototype.equals=function(n){n instanceof Fraction||(n=new Fraction(n));var r=this.clone().normalize();n=n.clone().normalize();return r.numerator===n.numerator&&r.denominator===n.denominator},Fraction.prototype.normalize=(r=function(n){return"number"==typeof n&&(n>0&&n%1>0&&n%1<1||n<0&&n%-1<0&&n%-1>-1)},t=function(n,r){if(r){var t=Math.pow(10,r);return Math.round(n*t)/t}return Math.round(n)},function(){if(r(this.denominator)){var n=t(this.denominator,9),i=Math.pow(10,n.toString().split(".")[1].length);this.denominator=Math.round(this.denominator*i),this.numerator*=i}r(this.numerator)&&(n=t(this.numerator,9),i=Math.pow(10,n.toString().split(".")[1].length),this.numerator=Math.round(this.numerator*i),this.denominator*=i);var e=Fraction.gcf(this.numerator,this.denominator);return this.numerator/=e,this.denominator/=e,(this.numerator<0&&this.denominator<0||this.numerator>0&&this.denominator<0)&&(this.numerator*=-1,this.denominator*=-1),this}),Fraction.gcf=function(n,r){var t=[],i=Fraction.primeFactors(n),e=Fraction.primeFactors(r);return i.forEach((function(n){var r=e.indexOf(n);r>=0&&(t.push(n),e.splice(r,1))})),0===t.length?1:function(){var n,r=t[0];for(n=1;n<t.length;n++)r*=t[n];return r}()},Fraction.primeFactors=function(n){for(var r=Math.abs(n),t=[],i=2;i*i<=r;)r%i==0?(t.push(i),r/=i):i++;return 1!=r&&t.push(r),t},n.exports.i=Fraction},2361:function(){},4616:function(){}}]);