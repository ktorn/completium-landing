(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{165:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),i=(n(0),n(235)),c=(n(237),n(238),n(239),n(236));const r={id:"dex8",title:"Interface",sidebar_label:"Interface",slug:"/dapp-dex/interface"},d={unversionedId:"dapp-dex/dex8",id:"dapp-dex/dex8",isDocsHomePage:!1,title:"Interface",description:"Storage",source:"@site/docs/dapp-dex/dex8.md",slug:"/dapp-dex/interface",permalink:"/docs/dapp-dex/interface",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-dex/dex8.md",version:"current",sidebar_label:"Interface"},l=[{value:"Storage",id:"storage",children:[]},{value:"Entry points",id:"entry-points",children:[{value:"Register/Delete token",id:"registerdelete-token",children:[]},{value:"Exchange",id:"exchange",children:[]},{value:"Add liquidity",id:"add-liquidity",children:[]},{value:"Remove liquidity",id:"remove-liquidity",children:[]}]}],o={toc:l};function b({components:e,...t}){return Object(i.b)("wrapper",Object(a.a)({},o,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"storage"},"Storage"),Object(i.b)("p",null,"The fee rate is set to 0.3%:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"constant gamma         : rational = 1 - 0.3%\n")),Object(i.b)("p",null,"The difference between the expected exchanged quantitiy and the actual quantitiy must be less than espsilon (in XTZ, see ",Object(i.b)(c.a,{to:"/docs/dapp-dex/implementation#exchange",mdxType:"Link"},"exchange")," entry point implementation):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"constant epsilon       : nat = 1\n")),Object(i.b)("p",null,"Initial number of minted liquidity tokens (see ",Object(i.b)(c.a,{to:"/docs/dapp-dex/implementation#add-liquidity",mdxType:"Link"},"addLiquidity")," entry point implementation):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"constant initialminted : nat = 1_000_000\n")),Object(i.b)("p",null,"Admin account:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"variable admin : address = @tz1Lc2qBKEWCBeDU8npG6zCeCqpmaegRi6Jg\n")),Object(i.b)("p",null,"Token asset:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"asset token {\n  id       : string;      /* token label identifier  */\n  addr     : address;     /* FA 1.2 contract address */\n  name     : string;      /* FA 1.2 name             */\n  iconurl  : string;      /* Icon                    */\n  poolvalue: nat = 0;     /* XTZ value in pool       */\n  totalqty : nat = 0;     /* total number of tokens  */\n  totallqt : nat = 0;     /* total LTQ tokens        */\n}\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"asset liquidity identified by tokenid owner {\n  tokenid  : string;      /* token id                */\n  owner    : address;     /* LQT owner               */\n  lqt      : nat = 0;     /* LQT quantity            */\n}\n")),Object(i.b)("h2",{id:"entry-points"},"Entry points"),Object(i.b)("h3",{id:"registerdelete-token"},"Register/Delete token"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry registertoken (i : string, a : address, n : string, u : string) {\n  called by admin\n  ...\n}\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry deletetoken (i : string) {\n  called by admin\n  ...\n}\n")),Object(i.b)("h3",{id:"exchange"},"Exchange"),Object(i.b)("p",null,"Unique exchange entry point:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"tA: name of token to exchange from"),Object(i.b)("li",{parentName:"ul"},"aA: quantity of tA to exchange"),Object(i.b)("li",{parentName:"ul"},"tB: name of the token to exchange to"),Object(i.b)("li",{parentName:"ul"},"aB: quantitiy of tB to get")),Object(i.b)("p",null,"Names are those specified in the ",Object(i.b)("inlineCode",{parentName:"p"},"token")," asset."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry exchange(tA : string, aA: nat, tB : string, aB : nat) {\n    ...\n}\n")),Object(i.b)("h3",{id:"add-liquidity"},"Add liquidity"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry addLiquidity(tL : string, qL : nat) {\n    ...\n}\n")),Object(i.b)("h3",{id:"remove-liquidity"},"Remove liquidity"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry removeLiquidity(qL : nat, tA : string) {\n    ...\n}\n")))}b.isMDXComponent=!0},237:function(e,t,n){"use strict";n(0),n(242)}}]);