(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{157:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return d})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n(3),i=n(7),c=(n(0),n(224)),r=(n(226),n(227),n(228),n(225)),d={id:"dex8",title:"Interface",sidebar_label:"Interface",slug:"/dapp-dex/interface"},l={unversionedId:"dapp-dex/dex8",id:"dapp-dex/dex8",isDocsHomePage:!1,title:"Interface",description:"Storage",source:"@site/docs/dapp-dex/dex8.md",slug:"/dapp-dex/interface",permalink:"/docs/dapp-dex/interface",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dapp-dex/dex8.md",version:"current",sidebar_label:"Interface"},o=[{value:"Storage",id:"storage",children:[]},{value:"Entry points",id:"entry-points",children:[{value:"Register/Delete token",id:"registerdelete-token",children:[]},{value:"Exchange",id:"exchange",children:[]},{value:"Add liquidity",id:"add-liquidity",children:[]},{value:"Remove liquidity",id:"remove-liquidity",children:[]}]}],b={toc:o};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"storage"},"Storage"),Object(c.b)("p",null,"The fee rate is set to 0.3%:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"constant gamma         : rational = 1 - 0.3%\n")),Object(c.b)("p",null,"The difference between the expected exchanged quantitiy and the actual quantitiy must be less than espsilon (in XTZ, see ",Object(c.b)(r.a,{to:"/docs/dapp-dex/implementation#exchange",mdxType:"Link"},"exchange")," entry point implementation):"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"constant epsilon       : nat = 1\n")),Object(c.b)("p",null,"Initial number of minted liquidity tokens (see ",Object(c.b)(r.a,{to:"/docs/dapp-dex/implementation#add-liquidity",mdxType:"Link"},"addLiquidity")," entry point implementation):"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"constant initialminted : nat = 1_000_000\n")),Object(c.b)("p",null,"Admin account:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"variable admin : address = @tz1Lc2qBKEWCBeDU8npG6zCeCqpmaegRi6Jg\n")),Object(c.b)("p",null,"Token asset:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"asset token {\n  id       : string;      /* token label identifier  */\n  addr     : address;     /* FA 1.2 contract address */\n  name     : string;      /* FA 1.2 name             */\n  iconurl  : string;      /* Icon                    */\n  poolvalue: nat = 0;     /* XTZ value in pool       */\n  totalqty : nat = 0;     /* total number of tokens  */\n  totallqt : nat = 0;     /* total LTQ tokens        */\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"asset liquidity identified by tokenid owner {\n  tokenid  : string;      /* token id                */\n  owner    : address;     /* LQT owner               */\n  lqt      : nat = 0;     /* LQT quantity            */\n}\n")),Object(c.b)("h2",{id:"entry-points"},"Entry points"),Object(c.b)("h3",{id:"registerdelete-token"},"Register/Delete token"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry registertoken (i : string, a : address, n : string, u : string) {\n  called by admin\n  ...\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry deletetoken (i : string) {\n  called by admin\n  ...\n}\n")),Object(c.b)("h3",{id:"exchange"},"Exchange"),Object(c.b)("p",null,"Unique exchange entry point:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"tA: name of token to exchange from"),Object(c.b)("li",{parentName:"ul"},"aA: quantity of tA to exchange"),Object(c.b)("li",{parentName:"ul"},"tB: name of the token to exchange to"),Object(c.b)("li",{parentName:"ul"},"aB: quantitiy of tB to get")),Object(c.b)("p",null,"Names are those specified in the ",Object(c.b)("inlineCode",{parentName:"p"},"token")," asset."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry exchange(tA : string, aA: nat, tB : string, aB : nat) {\n    ...\n}\n")),Object(c.b)("h3",{id:"add-liquidity"},"Add liquidity"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry addLiquidity(tL : string, qL : nat) {\n    ...\n}\n")),Object(c.b)("h3",{id:"remove-liquidity"},"Remove liquidity"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry removeLiquidity(qL : nat, tA : string) {\n    ...\n}\n")))}s.isMDXComponent=!0},226:function(e,t,n){"use strict";n(0),n(230)}}]);