(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{152:function(e,n,i){"use strict";i.r(n),i.d(n,"frontMatter",(function(){return m})),i.d(n,"metadata",(function(){return l})),i.d(n,"toc",(function(){return o})),i.d(n,"default",(function(){return c}));var t=i(3),a=i(7),r=(i(0),i(227)),m={id:"miles9",title:"Implementation",sidebar_label:"Implementation",slug:"/dapp-miles/miles-contract-implementation"},l={unversionedId:"dapp-miles/miles9",id:"dapp-miles/miles9",isDocsHomePage:!1,title:"Implementation",description:"Add",source:"@site/docs/dapp-miles/miles9.md",slug:"/dapp-miles/miles-contract-implementation",permalink:"/docs/dapp-miles/miles-contract-implementation",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/dapp-miles/miles9.md",version:"current",sidebar_label:"Implementation"},o=[{value:"Add",id:"add",children:[]},{value:"Consume",id:"consume",children:[]},{value:"Clear expired",id:"clear-expired",children:[]}],d={toc:o};function c(e){var n=e.components,i=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(t.a)({},d,i,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"add"},"Add"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"entry add (\n    ow                 : address,\n    newmile_id         : string,\n    newmile_amount     : nat,\n    newmile_expiration : date) {\n   called by admin\n   failif {\n     c2 : mile.contains(newmile_id);\n   }\n   effect {\n    owner.addupdate (ow, { miles += [{\n         id = newmile_id;\n         amount = newmile_amount;\n         expiration = newmile_expiration\n        }]\n    })\n   }\n}\n\n")),Object(r.b)("h3",{id:"consume"},"Consume"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),'entry consume (quantity : nat) {\n  effect {\n    var miles = owner[caller].miles.sort(expiration).select(the.expiration >= now);\n    dorequire (miles.sum(the.amount) >= quantity, "NotEnoughMiles");\n    var remainder = quantity;\n    for : loop m in miles do\n      if remainder > 0 then begin\n        if mile[m].amount > remainder then begin\n          mile.update(m, { amount -= remainder });\n          remainder := 0\n        end else if mile[m].amount = remainder then begin\n          remainder := 0;\n          owner[caller].miles.remove(m)\n        end else begin\n          remainder -= mile[m].amount;\n          owner[caller].miles.remove(m)\n        end\n      end\n    done;\n    assert p1\n  }\n}\n')),Object(r.b)("h3",{id:"clear-expired"},"Clear expired"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype"}),"entry clear_expired () {\n  called by admin\n  effect {\n    for : loop2 o in owner do\n      owner[o].miles.removeif(the.expiration < now)\n    done\n  }\n}\n")))}c.isMDXComponent=!0}}]);