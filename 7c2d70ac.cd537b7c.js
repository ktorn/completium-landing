(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{152:function(r,n,e){"use strict";e.r(n),e.d(n,"frontMatter",(function(){return l})),e.d(n,"metadata",(function(){return c})),e.d(n,"toc",(function(){return d})),e.d(n,"default",(function(){return u}));var t=e(3),i=e(7),a=(e(0),e(236)),o=e(237),p=e(249),s=e(250),m=e(450),l={id:"template1",title:"FA 1.2",sidebar_label:"FA 1.2",slug:"/templates/fa12"},c={unversionedId:"templates/template1",id:"templates/template1",isDocsHomePage:!1,title:"FA 1.2",description:"Introduction",source:"@site/docs/templates/template1.md",slug:"/templates/fa12",permalink:"/docs/templates/fa12",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/templates/template1.md",version:"current",sidebar_label:"FA 1.2",sidebar:"templates",previous:{title:"Presentation",permalink:"/docs/templates"},next:{title:"ERC20",permalink:"/docs/templates/erc20"}},d=[{value:"Introduction",id:"introduction",children:[]},{value:"API",id:"api",children:[{value:"Storage",id:"storage",children:[]},{value:"Entrypoints",id:"entrypoints",children:[]}]},{value:"Originate",id:"originate",children:[{value:"Command line",id:"command-line",children:[]}]},{value:"Code",id:"code",children:[]}],g={toc:d};function u(r){var n=r.components,e=Object(i.a)(r,["components"]);return Object(a.b)("wrapper",Object(t.a)({},g,e,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"introduction"},"Introduction"),Object(a.b)("p",null,"A fungible token is basically an association table between the token owner (the account address) and the amount of tokens (a natural integer). It is possible to allow another account to transfer tokens on your behalf."),Object(a.b)("p",null,"This contract implements the ",Object(a.b)(o.a,{to:"https://assets.tqtezos.com/docs/token-contracts/fa12/1-fa12-intro/",mdxType:"Link"},"Financial Asset 1.2")," (FA 1.2) ",Object(a.b)(o.a,{to:"https://gitlab.com/tzip/tzip/blob/master/proposals/tzip-7/tzip-7.md",mdxType:"Link"},"TZIP 7")," specification for fungible token on Tezos."),Object(a.b)("h2",{id:"api"},"API"),Object(a.b)("h3",{id:"storage"},"Storage"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object(t.a)({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object(t.a)({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",Object(t.a)({parentName:"tr"},{align:null}),"Desc"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"totalsupply")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"nat")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),"Total number of tokens.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"ledger")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"collection")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),"Association between token holder and number of tokens.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"allowance")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"collection")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),"Association between the pair owner and spender and the allowed amount.")))),Object(a.b)("h3",{id:"entrypoints"},"Entrypoints"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object(t.a)({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object(t.a)({parentName:"tr"},{align:null}),"Parameters"),Object(a.b)("th",Object(t.a)({parentName:"tr"},{align:null}),"Desc"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"transfer")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"from"),", ",Object(a.b)("inlineCode",{parentName:"td"},"to"),", ",Object(a.b)("inlineCode",{parentName:"td"},"value")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),"Transfers ",Object(a.b)("inlineCode",{parentName:"td"},"value")," tokens from ",Object(a.b)("inlineCode",{parentName:"td"},"from")," to ",Object(a.b)("inlineCode",{parentName:"td"},"to"),". If the ",Object(a.b)("em",{parentName:"td"},"caller")," is not equal to ",Object(a.b)("inlineCode",{parentName:"td"},"from"),", then ",Object(a.b)("em",{parentName:"td"},"caller")," must have been allowed by ",Object(a.b)("inlineCode",{parentName:"td"},"from")," to transfer this amount to ",Object(a.b)("inlineCode",{parentName:"td"},"to"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"approve")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"spender"),", ",Object(a.b)("inlineCode",{parentName:"td"},"value")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),"Approves ",Object(a.b)("inlineCode",{parentName:"td"},"spender")," to transfer ",Object(a.b)("inlineCode",{parentName:"td"},"value")," tokens from ",Object(a.b)("em",{parentName:"td"},"caller"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"getAllowance")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"owner"),", ",Object(a.b)("inlineCode",{parentName:"td"},"spender")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),"Getter for the allowed value for ",Object(a.b)("inlineCode",{parentName:"td"},"owner")," and ",Object(a.b)("inlineCode",{parentName:"td"},"spender"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"getBalance")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"owner")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),"Getter for the number of tokens owned by ",Object(a.b)("inlineCode",{parentName:"td"},"owner"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"getTotalSupply")),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null})),Object(a.b)("td",Object(t.a)({parentName:"tr"},{align:null}),"Getter for ",Object(a.b)("inlineCode",{parentName:"td"},"totalsupply"))))),Object(a.b)("h2",{id:"originate"},"Originate"),Object(a.b)("p",null,"Originate a FA 1.2 contract with the widget below."),Object(a.b)("p",null,'Click "Connect to Wallet" button, fill the fields "Initial Holder" and "Total Supply", and click "Originate".'),Object(a.b)(m.a,{mdxType:"Deploy"}),Object(a.b)("h3",{id:"command-line"},"Command line"),Object(a.b)("p",null,"Originate the contract from ",Object(a.b)("a",{href:"https://archetype-lang.org/"},"Archetype")," code below with the following ",Object(a.b)(o.a,{to:"/docs/cli",mdxType:"Link"},"Completium CLI")," example command:"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{}),"completium-cli deploy fa12.arl --init '(@tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG, 10_000_000)'\n")),Object(a.b)("p",null,"The command sets:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"initialholder")," constant to ",Object(a.b)("inlineCode",{parentName:"li"},"tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"totalsupply")," variable to 10 millions")),Object(a.b)("h2",{id:"code"},"Code"),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(a.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"The Archetype FA 1.2 code has been ",Object(a.b)(o.a,{to:"https://assets.tqtezos.com/docs/token-contracts/fa12/4-fa12-archetype/",mdxType:"Link"},"verified")," towards the formal specification presented below."))),Object(a.b)(p.a,{defaultValue:"archetype",values:[{label:"Archetype",value:"archetype"},{label:"Michelson",value:"michelson"},{label:"Specification",value:"specification"}],mdxType:"Tabs"},Object(a.b)(s.a,{value:"archetype",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype",metastring:'title="fa12.arl"',title:'"fa12.arl"'}),'archetype fa12(const initialholder : address, totalsupply : nat)\n\nasset allowance identified by addr_owner addr_spender to big_map {\n  addr_owner       : address;\n  addr_spender     : address;\n  amount           : nat;\n}\n\nasset ledger identified by holder to big_map {\n  holder     : address;\n  tokens     : nat = 0;\n} initialized by {\n  { holder = initialholder; tokens = totalsupply }\n}\n\nentry %transfer (%from : address, %to : address, value : nat) {\n  require {\n    r1 otherwise "NotEnoughBalance" : ledger[%from].tokens >= value;\n  }\n  effect {\n    if caller <> %from then (\n      var current = allowance[(%from, caller)].amount;\n      dofailif(current < value, ("NotEnoughAllowance", ((value, current))));\n      allowance.update((%from, caller), { amount -=  value });\n    );\n    ledger.update(%from, { tokens -= value });\n    ledger.addupdate(%to, { tokens += value });\n  }\n}\n\nentry approve(spender : address, value : nat) {\n  var k = (caller, spender);\n  if allowance.contains(k) then (\n    var previous = allowance[k].amount;\n    dofailif(previous > 0 and value > 0, (("UnsafeAllowanceChange", previous)));\n  );\n  allowance.addupdate( k, { amount = value });\n}\n\ngetter getAllowance (owner : address, spender : address) : nat {\n  return (allowance[(owner, spender)].amount)\n}\n\ngetter getBalance (owner : address) : nat {\n  return (if (ledger.contains(owner)) then ledger[owner].tokens else 0)\n}\n\ngetter getTotalSupply () : nat {\n  return totalsupply\n}\n'))),Object(a.b)(s.a,{value:"michelson",mdxType:"TabItem"},Object(a.b)("p",null,"The ",Object(a.b)(o.a,{to:"/docs/contract/programming-language#micheslon",mdxType:"Link"},"Michelson")," code is generated with version 1.2.3 of Archetype."),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'# (Pair 10000000 (Pair {  } (Pair { Elt "tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG" 10000000 } { Elt "" 0x68747470733a2f2f636f6d706c657469756d2e636f6d2f6d657461646174612f666131322e6a736f6e })))\n{\n  storage (pair (nat %totalsupply) (pair (big_map %allowance (pair address address) nat) (pair (big_map %ledger address nat) (big_map %metadata string bytes))));\n  parameter (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)) (or (pair %getBalance (address %owner) (contract nat)) (or (pair %getTotalSupply unit (contract nat)) (or (pair %transfer (address %from) (pair (address %to) (nat %value))) (pair %approve (address %spender) (nat %value))))));\n  code { NIL operation;\n         DIG 1;\n         UNPAIR;\n         DIP { UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP };\n         IF_LEFT\n           { UNPAIR;\n             UNPAIR;\n             SWAP;\n             DIG 7;\n             DUP;\n             DUG 8;\n             DIG 3;\n             DUP;\n             DUG 4;\n             AMOUNT;\n             DIG 8;\n             DUP;\n             DUG 9;\n             DIG 4;\n             DUP;\n             DUG 5;\n             DIG 6;\n             DUP;\n             DUG 7;\n             PAIR;\n             GET;\n             IF_NONE\n               { PUSH string "GetNoneValue";\n                 FAILWITH }\n               {  };\n             TRANSFER_TOKENS;\n             CONS;\n             DIP { DIG 7; DROP };\n             DUG 7;\n             DROP 3;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             DIG 1;\n             PAIR }\n           { IF_LEFT\n               { UNPAIR;\n                 DIG 6;\n                 DUP;\n                 DUG 7;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 AMOUNT;\n                 DIG 6;\n                 DUP;\n                 DUG 7;\n                 DIG 4;\n                 DUP;\n                 DUG 5;\n                 MEM;\n                 IF\n                   { DIG 6;\n                     DUP;\n                     DUG 7;\n                     DIG 4;\n                     DUP;\n                     DUG 5;\n                     GET;\n                     IF_NONE\n                       { PUSH string "GetNoneValue";\n                         FAILWITH }\n                       {  } }\n                   { PUSH nat 0 };\n                 TRANSFER_TOKENS;\n                 CONS;\n                 DIP { DIG 6; DROP };\n                 DUG 6;\n                 DROP 2;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 DIG 1;\n                 PAIR }\n               { IF_LEFT\n                   { UNPAIR;\n                     DROP;\n                     DIG 5;\n                     DUP;\n                     DUG 6;\n                     DIG 1;\n                     DUP;\n                     DUG 2;\n                     AMOUNT;\n                     DIG 7;\n                     DUP;\n                     DUG 8;\n                     TRANSFER_TOKENS;\n                     CONS;\n                     DIP { DIG 5; DROP };\n                     DUG 5;\n                     DROP;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     DIG 1;\n                     PAIR }\n                   { IF_LEFT\n                       { UNPAIR;\n                         SWAP;\n                         UNPAIR;\n                         SWAP;\n                         DUP;\n                         DIG 5;\n                         DUP;\n                         DUG 6;\n                         DIG 4;\n                         DUP;\n                         DUG 5;\n                         GET;\n                         IF_NONE\n                           { PUSH string "GetNoneValue";\n                             FAILWITH }\n                           {  };\n                         COMPARE;\n                         GE;\n                         NOT;\n                         IF\n                           { PUSH string "NotEnoughBalance";\n                             FAILWITH }\n                           {  };\n                         DIG 2;\n                         DUP;\n                         DUG 3;\n                         SENDER;\n                         COMPARE;\n                         NEQ;\n                         IF\n                           { DIG 5;\n                             DUP;\n                             DUG 6;\n                             SENDER;\n                             DIG 4;\n                             DUP;\n                             DUG 5;\n                             PAIR;\n                             GET;\n                             IF_NONE\n                               { PUSH string "GetNoneValue";\n                                 FAILWITH }\n                               {  };\n                             DIG 1;\n                             DUP;\n                             DUG 2;\n                             DIG 1;\n                             DUP;\n                             DUG 2;\n                             COMPARE;\n                             LT;\n                             IF\n                               { DUP;\n                                 DIG 2;\n                                 DUP;\n                                 DUG 3;\n                                 PAIR;\n                                 PUSH string "NotEnoughAllowance";\n                                 PAIR;\n                                 FAILWITH }\n                               {  };\n                             DIG 6;\n                             DUP;\n                             DUG 7;\n                             SENDER;\n                             DIG 5;\n                             DUP;\n                             DUG 6;\n                             PAIR;\n                             GET;\n                             IF_NONE\n                               { PUSH string "GetNoneValue";\n                                 FAILWITH }\n                               {  };\n                             DIG 7;\n                             DUP;\n                             DUG 8;\n                             PUSH int 0;\n                             DIG 4;\n                             DUP;\n                             DUG 5;\n                             INT;\n                             DIG 3;\n                             DUP;\n                             DUG 4;\n                             SUB;\n                             COMPARE;\n                             GE;\n                             IF\n                               { DIG 3;\n                                 DUP;\n                                 DUG 4;\n                                 INT;\n                                 DIG 2;\n                                 DUP;\n                                 DUG 3;\n                                 SUB;\n                                 ABS }\n                               { PUSH string "AssignNat";\n                                 FAILWITH };\n                             SOME;\n                             SENDER;\n                             DIG 7;\n                             DUP;\n                             DUG 8;\n                             PAIR;\n                             UPDATE;\n                             DIP { DIG 7; DROP };\n                             DUG 7;\n                             DROP 2 }\n                           {  };\n                         DIG 4;\n                         DUP;\n                         DUG 5;\n                         DIG 3;\n                         DUP;\n                         DUG 4;\n                         GET;\n                         IF_NONE\n                           { PUSH string "GetNoneValue";\n                             FAILWITH }\n                           {  };\n                         DIG 5;\n                         DUP;\n                         DUG 6;\n                         PUSH int 0;\n                         DIG 3;\n                         DUP;\n                         DUG 4;\n                         INT;\n                         DIG 3;\n                         DUP;\n                         DUG 4;\n                         SUB;\n                         COMPARE;\n                         GE;\n                         IF\n                           { DIG 2;\n                             DUP;\n                             DUG 3;\n                             INT;\n                             DIG 2;\n                             DUP;\n                             DUG 3;\n                             SUB;\n                             ABS }\n                           { PUSH string "AssignNat";\n                             FAILWITH };\n                         SOME;\n                         DIG 5;\n                         DUP;\n                         DUG 6;\n                         UPDATE;\n                         DIP { DIG 5; DROP };\n                         DUG 5;\n                         DROP;\n                         DIG 4;\n                         DUP;\n                         DUG 5;\n                         DIG 2;\n                         DUP;\n                         DUG 3;\n                         MEM;\n                         IF\n                           { DIG 4;\n                             DUP;\n                             DUG 5;\n                             DIG 2;\n                             DUP;\n                             DUG 3;\n                             GET;\n                             IF_NONE\n                               { PUSH string "GetNoneValue";\n                                 FAILWITH }\n                               {  };\n                             DIG 5;\n                             DUP;\n                             DUG 6;\n                             DIG 2;\n                             DUP;\n                             DUG 3;\n                             DIG 2;\n                             DUP;\n                             DUG 3;\n                             ADD;\n                             SOME;\n                             DIG 4;\n                             DUP;\n                             DUG 5;\n                             UPDATE;\n                             DIP { DIG 5; DROP };\n                             DUG 5;\n                             DROP }\n                           { DIG 4;\n                             DUP;\n                             DUG 5;\n                             DIG 2;\n                             DUP;\n                             DUG 3;\n                             MEM;\n                             IF\n                               { PUSH string "KeyAlreadyExists";\n                                 FAILWITH }\n                               { DIG 4;\n                                 DUP;\n                                 DUG 5;\n                                 DIG 1;\n                                 DUP;\n                                 DUG 2;\n                                 PUSH nat 0;\n                                 ADD;\n                                 SOME;\n                                 DIG 3;\n                                 DUP;\n                                 DUG 4;\n                                 UPDATE;\n                                 DIP { DIG 4; DROP };\n                                 DUG 4 } };\n                         DROP 3;\n                         SWAP;\n                         PAIR;\n                         SWAP;\n                         PAIR;\n                         SWAP;\n                         PAIR;\n                         DIG 1;\n                         PAIR }\n                       { UNPAIR;\n                         SWAP;\n                         DIG 1;\n                         DUP;\n                         DUG 2;\n                         SENDER;\n                         PAIR;\n                         DIG 5;\n                         DUP;\n                         DUG 6;\n                         DIG 1;\n                         DUP;\n                         DUG 2;\n                         MEM;\n                         IF\n                           { DIG 5;\n                             DUP;\n                             DUG 6;\n                             DIG 1;\n                             DUP;\n                             DUG 2;\n                             GET;\n                             IF_NONE\n                               { PUSH string "GetNoneValue";\n                                 FAILWITH }\n                               {  };\n                             PUSH nat 0;\n                             DIG 3;\n                             DUP;\n                             DUG 4;\n                             COMPARE;\n                             GT;\n                             PUSH nat 0;\n                             DIG 2;\n                             DUP;\n                             DUG 3;\n                             COMPARE;\n                             GT;\n                             AND;\n                             IF\n                               { DUP;\n                                 PUSH string "UnsafeAllowanceChange";\n                                 PAIR;\n                                 FAILWITH }\n                               {  };\n                             DROP }\n                           {  };\n                         DIG 5;\n                         DUP;\n                         DUG 6;\n                         DIG 2;\n                         DUP;\n                         DUG 3;\n                         SOME;\n                         DIG 2;\n                         DUP;\n                         DUG 3;\n                         UPDATE;\n                         DIP { DIG 5; DROP };\n                         DUG 5;\n                         DROP 3;\n                         SWAP;\n                         PAIR;\n                         SWAP;\n                         PAIR;\n                         SWAP;\n                         PAIR;\n                         DIG 1;\n                         PAIR } } } } };\n}\n'))),Object(a.b)(s.a,{value:"specification",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-archetype",metastring:'title="fa12.arl"',title:'"fa12.arl"'}),'specification {\n  s1: ledger.sum(tokens) = totalsupply;\n}\n\nspecification entry %transfer (%from : address, %to : address, value : nat) {\n  fails {\n    f0 with (msg : string) :\n      let some after_ledger_from = ledger[%from] in\n        msg = "NotEnoughBalance" and\n        after_ledger_from.tokens < value\n      otherwise true;\n    f1 with (msg : string * (nat * nat)) :\n      let some after_allowance_from_caller = allowance[(%from,caller)] in\n        msg = ("NotEnoughAllowance", ((value, after_allowance_from_caller.amount))) and\n        caller <> %from and\n        after_allowance_from_caller.amount < value\n      otherwise false;\n  }\n\n  (* LEDGER ASSET *)\n  postcondition transfer_p1 { (* effect on %from nbtokens *)\n    %from <> %to ->\n    let some before_ledger_from = before.ledger[%from] in\n    let some after_ledger_from  = ledger[%from] in\n    after_ledger_from = { before_ledger_from with\n      tokens = abs (before_ledger_from.tokens - value)\n    }\n    otherwise false otherwise false\n  }\n\n  postcondition transfer_p2 { (* effect on %to nbtokens *)\n    %from <> %to ->\n    let some after_ledger_to = ledger[%to] in\n    let some before_ledger_to = before.ledger[%to] in\n      after_ledger_to = { before_ledger_to with\n        tokens = (before_ledger_to.tokens + value)\n      }\n    otherwise\n      after_ledger_to = { holder = %to; tokens = value }\n    otherwise false (* %to ledger asset exists after transfer *) r\n  }\n\n  postcondition transfer_p3 {\n    %from = %to -> ledger = before.ledger\n  }\n\n  postcondition transfer_p4 { (* other ledger assets are unchanged *)\n    forall tokenholder in ledger,\n      tokenholder.holder <> %from ->\n      tokenholder.holder <> %to ->\n      before.ledger[tokenholder.holder] = some(tokenholder)\n  }\n\n  postcondition transfer_p5 { (* no ledger asset is removed *)\n    removed.ledger.isempty()\n  }\n\n  postcondition transfer_p6 { (* number of added asset may be one *)\n    let some before_to = before.ledger[%to] in\n      added.ledger.isempty()\n    otherwise\n      added.ledger = [ { holder = %to; tokens = value } ]\n  }\n\n  (* ALLOWANCE ASSET *)\n  postcondition transfer_p7 { (* effect on allowance *)\n    caller <> %from ->\n    let some before_from_caller = before.allowance[(%from,caller)] in\n    let some after_from_caller = allowance[(%from,caller)] in\n      before_from_caller.amount > value ->\n      after_from_caller = { before_from_caller with\n        amount = abs (before_from_caller.amount - value)\n      }\n    otherwise false\n    otherwise true\n  }\n\n  postcondition transfer_p8 { (* effect on allowance *)\n    caller = %from -> allowance = before.allowance\n  }\n\n  postcondition transfer_p9 { (* other allowance assets are unchanged *)\n    forall a in allowance,\n      a.addr_owner <> %from and a.addr_spender <> caller ->\n      before.allowance[(a.addr_owner, a.addr_spender)] = some(a)\n  }\n\n  postcondition transfer_p10 { (* no allowance is added or removed *)\n    removed.allowance.isempty() and added.allowance.isempty()\n  }\n\n  postcondition transfer_p11 { (* no operation generated *)\n    length (operations) = 0\n  }\n}\n\nspecification entry approve(spender : address, value : nat) {\n  fails {\n    f2 with (msg : (string * nat)) :\n      let some allowance_caller_spender = allowance[(caller, spender)] in\n        msg = ("UnsafeAllowanceChange", allowance_caller_spender.amount) and\n        value > 0 and\n        allowance_caller_spender.amount > 0\n      otherwise false;\n  }\n\n  postcondition approve_p1 { (* effect on allowance asset *)\n    let some after_allowance_caller_spender = allowance[(caller,spender)] in\n    let some before_allowance_caller_spender = before.allowance[(caller,spender)] in\n      after_allowance_caller_spender = { before_allowance_caller_spender with\n        amount = value\n      }\n    otherwise\n      after_allowance_caller_spender = { addr_owner = caller; addr_spender = spender; amount = value }\n    otherwise false\n  }\n\n  postcondition approve_p2 { (* other allowance assets are unchanged *)\n    forall a in allowance,\n      (a.addr_owner, a.addr_spender) <> (caller, spender) ->\n      before.allowance[(a.addr_owner, a.addr_spender)] = some(a)\n  }\n\n  postcondition approve_p3 { (* added allowance *)\n    let some allowance_caller_spender = before.allowance[(caller, spender)] in\n      added.allowance.isempty()\n    otherwise\n      added.allowance = [ { addr_owner = caller; addr_spender = spender; amount = value } ]\n  }\n\n  postcondition approve_p4 { (* no allowance asset is removed *)\n    removed.allowance.isempty()\n  }\n\n  postcondition approve_p5 {\n    ledger = before.ledger\n  }\n\n  postcondition approve_p6 { (*  no operation generated *)\n    length (operations) = 0\n  }\n}\n\nspecification getter getAllowance (owner : address, spender : address) {\n  postcondition getallowance_p1 { (* creates one op *)\n    length (operations) = 1\n  }\n\n  postcondition getallowance_p2 { (* assets are unchanged *)\n    ledger = before.ledger and allowance = before.allowance\n  }\n}\n\nspecification getter getBalance (owner : address) {\n  postcondition getbalance_p1 { (* creates one op *)\n    length (operations) = 1\n  }\n\n  postcondition getbalance_p2 { (* assets are unchanged *)\n    ledger = before.ledger and allowance = before.allowance\n  }\n}\n\nspecification getter getTotalSupply () {\n  postcondition gettotalsupply_p1 { (* creates one op *)\n    length (operations) = 1\n  }\n\n  postcondition gettotalsupply_p2 { (* assets are unchanged *)\n    ledger = before.ledger and allowance = before.allowance\n  }\n}\n')))))}u.isMDXComponent=!0},262:function(r,n,e){"use strict";e.d(n,"a",(function(){return p})),e.d(n,"f",(function(){return s})),e.d(n,"e",(function(){return m})),e.d(n,"b",(function(){return l})),e.d(n,"d",(function(){return c})),e.d(n,"c",(function(){return d}));var t=e(0),i=e.n(t),a=e(271),o=e(332);const[p,s,m,l,c,d]=Object(a.a)((function({appName:r}){const[{wallet:n,tezos:e,accountPkh:t},a]=i.a.useState((()=>({wallet:null,tezos:null,accountPkh:null}))),p=Boolean(e);i.a.useEffect((()=>o.a.onAvailabilityChange((n=>{a({wallet:n?new o.a(r):null,tezos:null,accountPkh:null})}))),[a,r]);const s=i.a.useCallback((async(r,e)=>{try{if(!n)throw new Error("Thanos Wallet not available");await n.connect(r,e);const t=n.toTezos(),i=await t.wallet.pkh();a({wallet:n,tezos:t,accountPkh:i})}catch(t){alert(`Failed to connect ThanosWallet: ${t.message}`)}}),[a,n]);return{wallet:n,tezos:e,accountPkh:t,ready:p,connect:s}}),(r=>r.wallet),(r=>r.tezos),(r=>r.accountPkh),(r=>r.ready),(r=>r.connect))},263:function(r,n,e){"use strict";e.d(n,"a",(function(){return a})),e.d(n,"b",(function(){return o}));var t=e(0),i=e(271);const[a,o]=Object(i.a)((function(){const[r,n]=Object(t.useState)({show:!1,severity:"info",msg:""});return{snackState:r,setInfoSnack:r=>{n({show:!0,severity:"info",msg:r})},setErrorSnack:r=>{n({show:!0,severity:"error",msg:r})},hideSnack:()=>{n((r=>({...r,show:!1})))}}}))},265:function(r,n,e){"use strict";e.r(n),e.d(n,"capitalize",(function(){return t.a})),e.d(n,"createChainedFunction",(function(){return i.a})),e.d(n,"createSvgIcon",(function(){return a.a})),e.d(n,"debounce",(function(){return o.a})),e.d(n,"deprecatedPropType",(function(){return p})),e.d(n,"isMuiElement",(function(){return s.a})),e.d(n,"ownerDocument",(function(){return m.a})),e.d(n,"ownerWindow",(function(){return l.a})),e.d(n,"requirePropFactory",(function(){return c.a})),e.d(n,"setRef",(function(){return d.a})),e.d(n,"unsupportedProp",(function(){return g.a})),e.d(n,"useControlled",(function(){return u.a})),e.d(n,"useEventCallback",(function(){return D.a})),e.d(n,"useForkRef",(function(){return f.a})),e.d(n,"unstable_useId",(function(){return P})),e.d(n,"useIsFocusVisible",(function(){return I.a}));var t=e(253),i=e(289),a=e(293),o=e(304);function p(r,n){return function(){return null}}var s=e(284),m=e(260),l=e(305),c=e(272),d=e(276),g=e(309),u=e(290),D=e(267),f=e(254),b=e(0);function P(r){var n=b.useState(r),e=n[0],t=n[1],i=r||e;return b.useEffect((function(){null==e&&t("mui-".concat(Math.round(1e5*Math.random())))}),[e]),i}var I=e(298)},272:function(r,n,e){"use strict";function t(r){return function(){return null}}e.d(n,"a",(function(){return t}))},288:function(r,n,e){"use strict";var t=e(3),i=e(0),a=e.n(i),o=e(617),p=e(614),s=e(331),m=e(263);function l(r){return a.a.createElement(p.a,Object(t.a)({elevation:6,variant:"filled"},r))}n.a=()=>{const{snackState:r}=Object(m.b)();Object(s.a)();return a.a.createElement(o.a,{open:r.show},a.a.createElement(l,{severity:r.severity},r.msg))}},292:function(r,n,e){"use strict";var t=e(0),i=e.n(t),a=e(262);var o=e(599),p=e(605),s=e(331);n.a=r=>{const n=Object(s.a)(),e=Object(a.d)(),t=Object(a.f)(),m=Object(a.c)(),l=i.a.useCallback((r=>async()=>{try{await m(r?"mainnet":"edo2net")}catch(n){alert(n.message)}}),[m]);return e?i.a.createElement("div",null):t?i.a.createElement(o.a,{variant:"outlined",color:n.palette.text.primary,onClick:l(r.main)},"connect to wallet"):i.a.createElement(p.a,{href:"https://templewallet.com/",rel:"noopener",underline:"none"},i.a.createElement(o.a,{variant:"contained",disableElevation:!0,style:{backgroundColor:"#ed8936",color:"white",fontWeight:"bold"}},"install Temple"))}},306:function(r,n){r.exports=function(r){return r&&r.__esModule?r:{default:r}}},307:function(r,n,e){var t=e(371);function i(){if("function"!=typeof WeakMap)return null;var r=new WeakMap;return i=function(){return r},r}r.exports=function(r){if(r&&r.__esModule)return r;if(null===r||"object"!==t(r)&&"function"!=typeof r)return{default:r};var n=i();if(n&&n.has(r))return n.get(r);var e={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in r)if(Object.prototype.hasOwnProperty.call(r,o)){var p=a?Object.getOwnPropertyDescriptor(r,o):null;p&&(p.get||p.set)?Object.defineProperty(e,o,p):e[o]=r[o]}return e.default=r,n&&n.set(r,e),e}},308:function(r,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return t.createSvgIcon}});var t=e(265)},309:function(r,n,e){"use strict";function t(r,n,e,t,i){return null}e.d(n,"a",(function(){return t}))},322:function(r,n){},323:function(r,n){},327:function(r,n){},328:function(r,n){},329:function(r,n){},330:function(r,n){},354:function(r,n,e){r.exports=e(355)},355:function(r,n,e){var t=function(r){"use strict";var n,e=Object.prototype,t=e.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",p=i.toStringTag||"@@toStringTag";function s(r,n,e){return Object.defineProperty(r,n,{value:e,enumerable:!0,configurable:!0,writable:!0}),r[n]}try{s({},"")}catch(j){s=function(r,n,e){return r[n]=e}}function m(r,n,e,t){var i=n&&n.prototype instanceof f?n:f,a=Object.create(i.prototype),o=new y(t||[]);return a._invoke=function(r,n,e){var t=c;return function(i,a){if(t===g)throw new Error("Generator is already running");if(t===u){if("throw"===i)throw a;return R()}for(e.method=i,e.arg=a;;){var o=e.delegate;if(o){var p=E(o,e);if(p){if(p===D)continue;return p}}if("next"===e.method)e.sent=e._sent=e.arg;else if("throw"===e.method){if(t===c)throw t=u,e.arg;e.dispatchException(e.arg)}else"return"===e.method&&e.abrupt("return",e.arg);t=g;var s=l(r,n,e);if("normal"===s.type){if(t=e.done?u:d,s.arg===D)continue;return{value:s.arg,done:e.done}}"throw"===s.type&&(t=u,e.method="throw",e.arg=s.arg)}}}(r,e,o),a}function l(r,n,e){try{return{type:"normal",arg:r.call(n,e)}}catch(j){return{type:"throw",arg:j}}}r.wrap=m;var c="suspendedStart",d="suspendedYield",g="executing",u="completed",D={};function f(){}function b(){}function P(){}var I={};I[a]=function(){return this};var U=Object.getPrototypeOf,G=U&&U(U(S([])));G&&G!==e&&t.call(G,a)&&(I=G);var h=P.prototype=f.prototype=Object.create(I);function O(r){["next","throw","return"].forEach((function(n){s(r,n,(function(r){return this._invoke(n,r)}))}))}function A(r,n){function e(i,a,o,p){var s=l(r[i],r,a);if("throw"!==s.type){var m=s.arg,c=m.value;return c&&"object"==typeof c&&t.call(c,"__await")?n.resolve(c.__await).then((function(r){e("next",r,o,p)}),(function(r){e("throw",r,o,p)})):n.resolve(c).then((function(r){m.value=r,o(m)}),(function(r){return e("throw",r,o,p)}))}p(s.arg)}var i;this._invoke=function(r,t){function a(){return new n((function(n,i){e(r,t,n,i)}))}return i=i?i.then(a,a):a()}}function E(r,e){var t=r.iterator[e.method];if(t===n){if(e.delegate=null,"throw"===e.method){if(r.iterator.return&&(e.method="return",e.arg=n,E(r,e),"throw"===e.method))return D;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return D}var i=l(t,r.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,D;var a=i.arg;return a?a.done?(e[r.resultName]=a.value,e.next=r.nextLoc,"return"!==e.method&&(e.method="next",e.arg=n),e.delegate=null,D):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,D)}function N(r){var n={tryLoc:r[0]};1 in r&&(n.catchLoc=r[1]),2 in r&&(n.finallyLoc=r[2],n.afterLoc=r[3]),this.tryEntries.push(n)}function v(r){var n=r.completion||{};n.type="normal",delete n.arg,r.completion=n}function y(r){this.tryEntries=[{tryLoc:"root"}],r.forEach(N,this),this.reset(!0)}function S(r){if(r){var e=r[a];if(e)return e.call(r);if("function"==typeof r.next)return r;if(!isNaN(r.length)){var i=-1,o=function e(){for(;++i<r.length;)if(t.call(r,i))return e.value=r[i],e.done=!1,e;return e.value=n,e.done=!0,e};return o.next=o}}return{next:R}}function R(){return{value:n,done:!0}}return b.prototype=h.constructor=P,P.constructor=b,b.displayName=s(P,p,"GeneratorFunction"),r.isGeneratorFunction=function(r){var n="function"==typeof r&&r.constructor;return!!n&&(n===b||"GeneratorFunction"===(n.displayName||n.name))},r.mark=function(r){return Object.setPrototypeOf?Object.setPrototypeOf(r,P):(r.__proto__=P,s(r,p,"GeneratorFunction")),r.prototype=Object.create(h),r},r.awrap=function(r){return{__await:r}},O(A.prototype),A.prototype[o]=function(){return this},r.AsyncIterator=A,r.async=function(n,e,t,i,a){void 0===a&&(a=Promise);var o=new A(m(n,e,t,i),a);return r.isGeneratorFunction(e)?o:o.next().then((function(r){return r.done?r.value:o.next()}))},O(h),s(h,p,"Generator"),h[a]=function(){return this},h.toString=function(){return"[object Generator]"},r.keys=function(r){var n=[];for(var e in r)n.push(e);return n.reverse(),function e(){for(;n.length;){var t=n.pop();if(t in r)return e.value=t,e.done=!1,e}return e.done=!0,e}},r.values=S,y.prototype={constructor:y,reset:function(r){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(v),!r)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=n)},stop:function(){this.done=!0;var r=this.tryEntries[0].completion;if("throw"===r.type)throw r.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var e=this;function i(t,i){return p.type="throw",p.arg=r,e.next=t,i&&(e.method="next",e.arg=n),!!i}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],p=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var s=t.call(o,"catchLoc"),m=t.call(o,"finallyLoc");if(s&&m){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!m)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(r,n){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.tryLoc<=this.prev&&t.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===r||"continue"===r)&&a.tryLoc<=n&&n<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=r,o.arg=n,a?(this.method="next",this.next=a.finallyLoc,D):this.complete(o)},complete:function(r,n){if("throw"===r.type)throw r.arg;return"break"===r.type||"continue"===r.type?this.next=r.arg:"return"===r.type?(this.rval=this.arg=r.arg,this.method="return",this.next="end"):"normal"===r.type&&n&&(this.next=n),D},finish:function(r){for(var n=this.tryEntries.length-1;n>=0;--n){var e=this.tryEntries[n];if(e.finallyLoc===r)return this.complete(e.completion,e.afterLoc),v(e),D}},catch:function(r){for(var n=this.tryEntries.length-1;n>=0;--n){var e=this.tryEntries[n];if(e.tryLoc===r){var t=e.completion;if("throw"===t.type){var i=t.arg;v(e)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(r,e,t){return this.delegate={iterator:S(r),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=n),D}},r}(r.exports);try{regeneratorRuntime=t}catch(i){Function("r","regeneratorRuntime = r")(t)}},356:function(r,n,e){"use strict";function t(r,n,e,t,i,a,o){try{var p=r[a](o),s=p.value}catch(m){return void e(m)}p.done?n(s):Promise.resolve(s).then(t,i)}function i(r){return function(){var n=this,e=arguments;return new Promise((function(i,a){var o=r.apply(n,e);function p(r){t(o,i,a,p,s,"next",r)}function s(r){t(o,i,a,p,s,"throw",r)}p(void 0)}))}}e.d(n,"a",(function(){return i}))},371:function(r,n){function e(n){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?r.exports=e=function(r){return typeof r}:r.exports=e=function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},e(n)}r.exports=e},431:function(r,n,e){"use strict";var t=e(0),i=t.createContext({});n.a=i},450:function(r,n,e){"use strict";(function(r){var t=e(354),i=e.n(t),a=e(356),o=e(0),p=e.n(o),s=e(396),m=e(398),l=e(612),c=e(399),d=e(599),g=e(559),u=e(597),D=e(262),f=e(288),b=e(263),P=e(292),I=e(550),U=e(237),G=e(619),h=e(616),O=e(607),A=e(606),E=e(551),N=e.n(E),v=function(r){if(Object(D.d)()){var n=Object(D.b)();return p.a.createElement(m.a,{container:!0,direction:"column",justify:"center",alignItems:"center"},p.a.createElement(c.a,{variant:"subtitle2"},"Connected with:"),p.a.createElement(c.a,{variant:"subtitle2",style:{fontFamily:"Courier Prime, monospace"}},n))}return p.a.createElement(m.a,{container:!0},p.a.createElement(m.a,{item:!0,xs:8},p.a.createElement(P.a,{main:r.main})),p.a.createElement(m.a,{item:!0,xs:2},p.a.createElement(G.a,{checked:r.main,onChange:function(n){r.setMain(n.target.checked)},name:"checkedB",color:"primary"})),p.a.createElement(m.a,{item:!0,xs:2},p.a.createElement(c.a,{variant:"subtitle2",style:{marginTop:"8px"}},"Mainnet")))};var y=function(r){return p.a.createElement(m.a,{container:!0,direction:"column",justify:"center",alignItems:"center"},p.a.createElement(c.a,{variant:"subtitle2"},"Contract available at:"),p.a.createElement(c.a,{component:U.a,to:"https://better-call.dev/"+(r.main?"mainnet":"edo2net")+"/"+r.contract+"/operations",variant:"subtitle2",style:{fontFamily:"Courier Prime, monospace"}},r.contract))};function S(n,e,t,i,a){var o={symbol:n,name:e,decimals:t,description:i,thumbnailUri:a};return r.from(JSON.stringify(o)).toString("hex")}var R=function(){var r=p.a.useState(""),n=r[0],e=r[1],t=p.a.useState(1e7),o=t[0],g=t[1],u=p.a.useState(""),f=u[0],P=u[1],U=p.a.useState(!1),G=U[0],E=U[1],R=p.a.useState("CMPL"),j=R[0],w=R[1],T=p.a.useState("Completium Token"),_=T[0],F=T[1],x=p.a.useState(1),C=x[0],H=x[1],L=p.a.useState("https://completium.com/img/logo_completium_128.png"),W=L[0],k=L[1],M=p.a.useState(!1),B=M[0],V=M[1],z=Object(b.b)(),q=z.setInfoSnack,K=z.setErrorSnack,$=z.hideSnack,J=Object(D.e)(),Y=Object(D.d)(),Q=function(){return n.length>0&(36!==(r=n).length|!r.startsWith("tz1"));var r},X=function(){return!(Math.round(o)==o&o>0)},Z=function(){var r=Object(a.a)(i.a.mark((function r(){var e,t,a;return i.a.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,J.wallet.originate({code:G?I.b:I.a,init:G?Object(I.d)(n,o,S(j,_,C,"",W)):Object(I.c)(n,o)}).send();case 3:return e=r.sent,t=e.opHash.substring(0,10)+"...",q("waiting for "+t+" to be confirmed ..."),r.next=8,e.contract();case 8:a=r.sent,$(),console.log("Origination completed for "+a.address+"."),setTimeout((function(){return P(a.address)}),5e3),r.next=19;break;case 14:r.prev=14,r.t0=r.catch(0),console.log(r.t0),K(r.t0.message),setTimeout($,4e3);case 19:case"end":return r.stop()}}),r,null,[[0,14]])})));return function(){return r.apply(this,arguments)}}();return p.a.createElement(s.a,{style:{backgroundColor:"transparent",border:"1px solid #606770",marginTop:"20px",marginBottom:"20px"},raised:!1},p.a.createElement(m.a,{container:!0,style:{padding:22},spacing:3},p.a.createElement(m.a,{item:!0,xs:6},p.a.createElement(l.a,{onChange:function(r){e(r.target.value)},value:n,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"initalholder",label:"Initial Holder",error:Q(),helperText:Q()?"Invalid address format":""})),p.a.createElement(m.a,{item:!0,xs:6,style:{textAlign:"center",marginTop:"10px"}},p.a.createElement(v,{main:B,setMain:V})),p.a.createElement(m.a,{item:!0,xs:6},p.a.createElement(l.a,{type:"number",onChange:function(r){g(r.target.value)},error:X(),helperText:X()?"Invalid Natural Integer":"",value:o,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"totalsupply",label:"Total Supply"})),p.a.createElement(m.a,{item:!0,xs:6,style:{textAlign:"center",marginTop:"10px"}},""!==f?p.a.createElement(y,{contract:f,main:B}):p.a.createElement(d.a,{variant:"contained",color:"primary",disableElevation:!0,disabled:!Y|X()|Q()|0==n.length,onClick:Z},"originate"))),p.a.createElement(h.a,{expanded:G,onChange:function(r,n){E(n)},style:{backgroundColor:"transparent"}},p.a.createElement(A.a,{expandIcon:p.a.createElement(N.a,null),"aria-controls":"panel4bh-content",id:"panel4bh-header"},p.a.createElement(c.a,{style:{marginLeft:"10px"}},"Metadata")),p.a.createElement(O.a,null,p.a.createElement(m.a,{container:!0,spacing:3,style:{marginLeft:"0px"}},p.a.createElement(m.a,{item:!0,xs:6},p.a.createElement(l.a,{onChange:function(r){w(r.target.value)},error:!1,helperText:"Token symbol, like 'USD' for United States Dollar.",value:j,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"symbol",label:"Symbol"})),p.a.createElement(m.a,{item:!0,xs:6},p.a.createElement(l.a,{onChange:function(r){F(r.target.value)},error:!1,helperText:"Token name, like 'Bitcoin' for BTC asset.",value:_,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"name",label:"Name"})),p.a.createElement(m.a,{item:!0,xs:6},p.a.createElement(l.a,{type:"number",onChange:function(r){H(r.target.value)},error:!1,helperText:"A number of decimal places after point.",value:C,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"decimals",label:"Decimals"})),p.a.createElement(m.a,{item:!0,xs:6},p.a.createElement(l.a,{onChange:function(r){k(r.target.value)},error:!1,helperText:"Image URL for token logo.",value:W,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"url",label:"Icon URL"}))))))};n.a=function(r){var n=p.a.useMemo((function(){return Object(g.a)({palette:{type:"dark",primary:{light:"#1dc5ff",main:"#00ACE7",dark:"#0a90bf",contrastText:"#fff"}}})}),[!0]);return p.a.createElement(D.a,{appName:"Completium FA 1.2"},p.a.createElement(b.a,null,p.a.createElement(u.a,{theme:n},p.a.createElement(R,null),p.a.createElement(f.a,null))))}}).call(this,e(256).Buffer)},550:function(r,n,e){"use strict";e.d(n,"a",(function(){return t})),e.d(n,"c",(function(){return i})),e.d(n,"b",(function(){return a})),e.d(n,"d",(function(){return o}));var t=[{prim:"storage",args:[{prim:"pair",args:[{prim:"nat",annots:["%totalsupply"]},{prim:"pair",args:[{prim:"big_map",args:[{prim:"pair",args:[{prim:"address"},{prim:"address"}]},{prim:"nat"}],annots:["%allowance"]},{prim:"big_map",args:[{prim:"address"},{prim:"nat"}],annots:["%ledger"]}]}]}]},{prim:"parameter",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"address",annots:["%owner"]},{prim:"address",annots:["%spender"]}]},{prim:"contract",args:[{prim:"nat"}]}],annots:["%getAllowance"]},{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%owner"]},{prim:"contract",args:[{prim:"nat"}]}],annots:["%getBalance"]},{prim:"or",args:[{prim:"pair",args:[{prim:"unit"},{prim:"contract",args:[{prim:"nat"}]}],annots:["%getTotalSupply"]},{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%from"]},{prim:"pair",args:[{prim:"address",annots:["%to"]},{prim:"nat",annots:["%value"]}]}],annots:["%transfer"]},{prim:"pair",args:[{prim:"address",annots:["%spender"]},{prim:"nat",annots:["%value"]}],annots:["%approve"]}]}]}]}]}]},{prim:"code",args:[[{prim:"NIL",args:[{prim:"operation"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"}]]},{prim:"IF_LEFT",args:[[{prim:"UNPAIR"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"AMOUNT"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PAIR"},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"6"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"6"}]},{prim:"DROP",args:[{int:"3"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"UNPAIR"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"AMOUNT"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"MEM"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]}],[{prim:"PUSH",args:[{prim:"nat"},{int:"0"}]}]]},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"2"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"UNPAIR"},{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"AMOUNT"},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"DUP"},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"COMPARE"},{prim:"GE"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"NotEnoughBalance"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"SENDER"},{prim:"COMPARE"},{prim:"NEQ"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"SENDER"},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"PAIR"},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"COMPARE"},{prim:"LT"},{prim:"IF",args:[[{prim:"DUP"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"PAIR"},{prim:"PUSH",args:[{prim:"string"},{string:"NotEnoughAllowance"}]},{prim:"PAIR"},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"SENDER"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"PAIR"},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PUSH",args:[{prim:"int"},{int:"0"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"INT"},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"SUB"},{prim:"COMPARE"},{prim:"GE"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"INT"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"SUB"},{prim:"ABS"}],[{prim:"PUSH",args:[{prim:"string"},{string:"AssignNat"}]},{prim:"FAILWITH"}]]},{prim:"SOME"},{prim:"SENDER"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"6"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"6"}]},{prim:"DROP",args:[{int:"2"}]}],[]]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"PUSH",args:[{prim:"int"},{int:"0"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"INT"},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"SUB"},{prim:"COMPARE"},{prim:"GE"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"INT"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"SUB"},{prim:"ABS"}],[{prim:"PUSH",args:[{prim:"string"},{string:"AssignNat"}]},{prim:"FAILWITH"}]]},{prim:"SOME"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"MEM"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"ADD"},{prim:"SOME"},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}],[{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"MEM"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"KeyAlreadyExists"}]},{prim:"FAILWITH"}],[{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"PUSH",args:[{prim:"nat"},{int:"0"}]},{prim:"ADD"},{prim:"SOME"},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"3"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"3"}]}]]}]]},{prim:"DROP",args:[{int:"3"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"SENDER"},{prim:"PAIR"},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"MEM"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"PUSH",args:[{prim:"nat"},{int:"0"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"COMPARE"},{prim:"GT"},{prim:"PUSH",args:[{prim:"nat"},{int:"0"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"COMPARE"},{prim:"GT"},{prim:"AND"},{prim:"IF",args:[[{prim:"DUP"},{prim:"PUSH",args:[{prim:"string"},{string:"UnsafeAllowanceChange"}]},{prim:"PAIR"},{prim:"FAILWITH"}],[]]},{prim:"DROP",args:[{int:"1"}]}],[]]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"SOME"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"3"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}]]}]]}]]}]]}]]}],i=function(r,n){return{prim:"Pair",args:[{int:n.toString()},{prim:"Pair",args:[[],[{prim:"Elt",args:[{string:r},{int:n.toString()}]}]]}]}},a=[{prim:"storage",args:[{prim:"pair",args:[{prim:"nat",annots:["%totalsupply"]},{prim:"pair",args:[{prim:"big_map",args:[{prim:"pair",args:[{prim:"address"},{prim:"address"}]},{prim:"nat"}],annots:["%allowance"]},{prim:"pair",args:[{prim:"big_map",args:[{prim:"address"},{prim:"nat"}],annots:["%ledger"]},{prim:"big_map",args:[{prim:"string"},{prim:"bytes"}],annots:["%metadata"]}]}]}]}]},{prim:"parameter",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"address",annots:["%owner"]},{prim:"address",annots:["%spender"]}]},{prim:"contract",args:[{prim:"nat"}]}],annots:["%getAllowance"]},{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%owner"]},{prim:"contract",args:[{prim:"nat"}]}],annots:["%getBalance"]},{prim:"or",args:[{prim:"pair",args:[{prim:"unit"},{prim:"contract",args:[{prim:"nat"}]}],annots:["%getTotalSupply"]},{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%from"]},{prim:"pair",args:[{prim:"address",annots:["%to"]},{prim:"nat",annots:["%value"]}]}],annots:["%transfer"]},{prim:"pair",args:[{prim:"address",annots:["%spender"]},{prim:"nat",annots:["%value"]}],annots:["%approve"]}]}]}]}]}]},{prim:"code",args:[[{prim:"NIL",args:[{prim:"operation"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"UNPAIR"},{prim:"DIP",args:[{int:"1"},[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"}]]},{prim:"IF_LEFT",args:[[{prim:"UNPAIR"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"AMOUNT"},{prim:"DIG",args:[{int:"8"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"9"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"PAIR"},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"7"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"7"}]},{prim:"DROP",args:[{int:"3"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"UNPAIR"},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"AMOUNT"},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"MEM"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]}],[{prim:"PUSH",args:[{prim:"nat"},{int:"0"}]}]]},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"6"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"6"}]},{prim:"DROP",args:[{int:"2"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"UNPAIR"},{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"AMOUNT"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"TRANSFER_TOKENS"},{prim:"CONS"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"IF_LEFT",args:[[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"UNPAIR"},{prim:"SWAP"},{prim:"DUP"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"COMPARE"},{prim:"GE"},{prim:"NOT"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"NotEnoughBalance"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"SENDER"},{prim:"COMPARE"},{prim:"NEQ"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"SENDER"},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"PAIR"},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"COMPARE"},{prim:"LT"},{prim:"IF",args:[[{prim:"DUP"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"PAIR"},{prim:"PUSH",args:[{prim:"string"},{string:"NotEnoughAllowance"}]},{prim:"PAIR"},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"6"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"7"}]},{prim:"SENDER"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"PAIR"},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PUSH",args:[{prim:"int"},{int:"0"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"INT"},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"SUB"},{prim:"COMPARE"},{prim:"GE"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"INT"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"SUB"},{prim:"ABS"}],[{prim:"PUSH",args:[{prim:"string"},{string:"AssignNat"}]},{prim:"FAILWITH"}]]},{prim:"SOME"},{prim:"SENDER"},{prim:"DIG",args:[{int:"7"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"8"}]},{prim:"PAIR"},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"7"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"7"}]},{prim:"DROP",args:[{int:"2"}]}],[]]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"PUSH",args:[{prim:"int"},{int:"0"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"INT"},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"SUB"},{prim:"COMPARE"},{prim:"GE"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"INT"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"SUB"},{prim:"ABS"}],[{prim:"PUSH",args:[{prim:"string"},{string:"AssignNat"}]},{prim:"FAILWITH"}]]},{prim:"SOME"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"MEM"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"ADD"},{prim:"SOME"},{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}],[{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"MEM"},{prim:"IF",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"KeyAlreadyExists"}]},{prim:"FAILWITH"}],[{prim:"DIG",args:[{int:"4"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"5"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"PUSH",args:[{prim:"nat"},{int:"0"}]},{prim:"ADD"},{prim:"SOME"},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"4"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"4"}]}]]}]]},{prim:"DROP",args:[{int:"3"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}],[{prim:"UNPAIR"},{prim:"SWAP"},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"SENDER"},{prim:"PAIR"},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"MEM"},{prim:"IF",args:[[{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"1"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"2"}]},{prim:"GET"},{prim:"IF_NONE",args:[[{prim:"PUSH",args:[{prim:"string"},{string:"GetNoneValue"}]},{prim:"FAILWITH"}],[]]},{prim:"PUSH",args:[{prim:"nat"},{int:"0"}]},{prim:"DIG",args:[{int:"3"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"4"}]},{prim:"COMPARE"},{prim:"GT"},{prim:"PUSH",args:[{prim:"nat"},{int:"0"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"COMPARE"},{prim:"GT"},{prim:"AND"},{prim:"IF",args:[[{prim:"DUP"},{prim:"PUSH",args:[{prim:"string"},{string:"UnsafeAllowanceChange"}]},{prim:"PAIR"},{prim:"FAILWITH"}],[]]},{prim:"DROP",args:[{int:"1"}]}],[]]},{prim:"DIG",args:[{int:"5"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"6"}]},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"SOME"},{prim:"DIG",args:[{int:"2"}]},{prim:"DUP"},{prim:"DUG",args:[{int:"3"}]},{prim:"UPDATE"},{prim:"DIP",args:[{int:"1"},[{prim:"DIG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"1"}]}]]},{prim:"DUG",args:[{int:"5"}]},{prim:"DROP",args:[{int:"3"}]},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"SWAP"},{prim:"PAIR"},{prim:"DIG",args:[{int:"1"}]},{prim:"PAIR"}]]}]]}]]}]]}]]}],o=function(r,n,e){return{prim:"Pair",args:[{int:n.toString()},{prim:"Pair",args:[[],{prim:"Pair",args:[[{prim:"Elt",args:[{string:r},{int:n.toString()}]}],[{prim:"Elt",args:[{string:""},{bytes:"74657a6f732d73746f726167653a68657265"}]},{prim:"Elt",args:[{string:"here"},{bytes:e}]}]]}]}]}}},551:function(r,n,e){"use strict";var t=e(306),i=e(307);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=i(e(0)),o=(0,t(e(308)).default)(a.createElement("path",{d:"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"}),"ExpandMore");n.default=o},606:function(r,n,e){"use strict";var t=e(3),i=e(241),a=e(0),o=(e(1),e(244)),p=e(615),s=e(603),m=e(245),l=e(431),c=a.forwardRef((function(r,n){var e=r.children,m=r.classes,c=r.className,d=r.expandIcon,g=r.IconButtonProps,u=r.onBlur,D=r.onClick,f=r.onFocusVisible,b=Object(i.a)(r,["children","classes","className","expandIcon","IconButtonProps","onBlur","onClick","onFocusVisible"]),P=a.useState(!1),I=P[0],U=P[1],G=a.useContext(l.a),h=G.disabled,O=void 0!==h&&h,A=G.expanded,E=G.toggle;return a.createElement(p.a,Object(t.a)({focusRipple:!1,disableRipple:!0,disabled:O,component:"div","aria-expanded":A,className:Object(o.a)(m.root,c,O&&m.disabled,A&&m.expanded,I&&m.focused),onFocusVisible:function(r){U(!0),f&&f(r)},onBlur:function(r){U(!1),u&&u(r)},onClick:function(r){E&&E(r),D&&D(r)},ref:n},b),a.createElement("div",{className:Object(o.a)(m.content,A&&m.expanded)},e),d&&a.createElement(s.a,Object(t.a)({className:Object(o.a)(m.expandIcon,A&&m.expanded),edge:"end",component:"div",tabIndex:null,role:null,"aria-hidden":!0},g),d))}));n.a=Object(m.a)((function(r){var n={duration:r.transitions.duration.shortest};return{root:{display:"flex",minHeight:48,transition:r.transitions.create(["min-height","background-color"],n),padding:r.spacing(0,2),"&:hover:not($disabled)":{cursor:"pointer"},"&$expanded":{minHeight:64},"&$focused":{backgroundColor:r.palette.action.focus},"&$disabled":{opacity:r.palette.action.disabledOpacity}},expanded:{},focused:{},disabled:{},content:{display:"flex",flexGrow:1,transition:r.transitions.create(["margin"],n),margin:"12px 0","&$expanded":{margin:"20px 0"}},expandIcon:{transform:"rotate(0deg)",transition:r.transitions.create("transform",n),"&:hover":{backgroundColor:"transparent"},"&$expanded":{transform:"rotate(180deg)"}}}}),{name:"MuiAccordionSummary"})(c)},607:function(r,n,e){"use strict";var t=e(3),i=e(241),a=e(0),o=(e(1),e(244)),p=e(245),s=a.forwardRef((function(r,n){var e=r.classes,p=r.className,s=Object(i.a)(r,["classes","className"]);return a.createElement("div",Object(t.a)({className:Object(o.a)(e.root,p),ref:n},s))}));n.a=Object(p.a)((function(r){return{root:{display:"flex",padding:r.spacing(1,2,2)}}}),{name:"MuiAccordionDetails"})(s)},616:function(r,n,e){"use strict";var t=e(3),i=e(386),a=e(389),o=e(349),p=e(388);var s=e(310),m=e(241),l=e(0),c=(e(27),e(1),e(244)),d=e(620),g=e(245),u=e(350),D=e(430),f=e(331),b=e(254),P=l.forwardRef((function(r,n){var e=r.children,i=r.classes,a=r.className,o=r.collapsedHeight,p=void 0===o?"0px":o,g=r.component,P=void 0===g?"div":g,I=r.disableStrictModeCompat,U=void 0!==I&&I,G=r.in,h=r.onEnter,O=r.onEntered,A=r.onEntering,E=r.onExit,N=r.onExited,v=r.onExiting,y=r.style,S=r.timeout,R=void 0===S?u.b.standard:S,j=r.TransitionComponent,w=void 0===j?d.a:j,T=Object(m.a)(r,["children","classes","className","collapsedHeight","component","disableStrictModeCompat","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"]),_=Object(f.a)(),F=l.useRef(),x=l.useRef(null),C=l.useRef(),H="number"==typeof p?"".concat(p,"px"):p;l.useEffect((function(){return function(){clearTimeout(F.current)}}),[]);var L=_.unstable_strictMode&&!U,W=l.useRef(null),k=Object(b.a)(n,L?W:void 0),M=function(r){return function(n,e){if(r){var t=L?[W.current,n]:[n,e],i=Object(s.a)(t,2),a=i[0],o=i[1];void 0===o?r(a):r(a,o)}}},B=M((function(r,n){r.style.height=H,h&&h(r,n)})),V=M((function(r,n){var e=x.current?x.current.clientHeight:0,t=Object(D.a)({style:y,timeout:R},{mode:"enter"}).duration;if("auto"===R){var i=_.transitions.getAutoHeightDuration(e);r.style.transitionDuration="".concat(i,"ms"),C.current=i}else r.style.transitionDuration="string"==typeof t?t:"".concat(t,"ms");r.style.height="".concat(e,"px"),A&&A(r,n)})),z=M((function(r,n){r.style.height="auto",O&&O(r,n)})),q=M((function(r){var n=x.current?x.current.clientHeight:0;r.style.height="".concat(n,"px"),E&&E(r)})),K=M(N),$=M((function(r){var n=x.current?x.current.clientHeight:0,e=Object(D.a)({style:y,timeout:R},{mode:"exit"}).duration;if("auto"===R){var t=_.transitions.getAutoHeightDuration(n);r.style.transitionDuration="".concat(t,"ms"),C.current=t}else r.style.transitionDuration="string"==typeof e?e:"".concat(e,"ms");r.style.height=H,v&&v(r)}));return l.createElement(w,Object(t.a)({in:G,onEnter:B,onEntered:z,onEntering:V,onExit:q,onExited:K,onExiting:$,addEndListener:function(r,n){var e=L?r:n;"auto"===R&&(F.current=setTimeout(e,C.current||0))},nodeRef:L?W:void 0,timeout:"auto"===R?null:R},T),(function(r,n){return l.createElement(P,Object(t.a)({className:Object(c.a)(i.container,a,{entered:i.entered,exited:!G&&"0px"===H&&i.hidden}[r]),style:Object(t.a)({minHeight:H},y),ref:k},n),l.createElement("div",{className:i.wrapper,ref:x},l.createElement("div",{className:i.wrapperInner},e)))}))}));P.muiSupportAuto=!0;var I=Object(g.a)((function(r){return{container:{height:0,overflow:"hidden",transition:r.transitions.create("height")},entered:{height:"auto",overflow:"visible"},hidden:{visibility:"hidden"},wrapper:{display:"flex"},wrapperInner:{width:"100%"}}}),{name:"MuiCollapse"})(P),U=e(397),G=e(431),h=e(290),O=l.forwardRef((function(r,n){var e,d=r.children,g=r.classes,u=r.className,D=r.defaultExpanded,f=void 0!==D&&D,b=r.disabled,P=void 0!==b&&b,O=r.expanded,A=r.onChange,E=r.square,N=void 0!==E&&E,v=r.TransitionComponent,y=void 0===v?I:v,S=r.TransitionProps,R=Object(m.a)(r,["children","classes","className","defaultExpanded","disabled","expanded","onChange","square","TransitionComponent","TransitionProps"]),j=Object(h.a)({controlled:O,default:f,name:"Accordion",state:"expanded"}),w=Object(s.a)(j,2),T=w[0],_=w[1],F=l.useCallback((function(r){_(!T),A&&A(r,!T)}),[T,A,_]),x=l.Children.toArray(d),C=(e=x,Object(i.a)(e)||Object(a.a)(e)||Object(o.a)(e)||Object(p.a)()),H=C[0],L=C.slice(1),W=l.useMemo((function(){return{expanded:T,disabled:P,toggle:F}}),[T,P,F]);return l.createElement(U.a,Object(t.a)({className:Object(c.a)(g.root,u,T&&g.expanded,P&&g.disabled,!N&&g.rounded),ref:n,square:N},R),l.createElement(G.a.Provider,{value:W},H),l.createElement(y,Object(t.a)({in:T,timeout:"auto"},S),l.createElement("div",{"aria-labelledby":H.props.id,id:H.props["aria-controls"],role:"region"},L)))}));n.a=Object(g.a)((function(r){var n={duration:r.transitions.duration.shortest};return{root:{position:"relative",transition:r.transitions.create(["margin"],n),"&:before":{position:"absolute",left:0,top:-1,right:0,height:1,content:'""',opacity:1,backgroundColor:r.palette.divider,transition:r.transitions.create(["opacity","background-color"],n)},"&:first-child":{"&:before":{display:"none"}},"&$expanded":{margin:"16px 0","&:first-child":{marginTop:0},"&:last-child":{marginBottom:0},"&:before":{opacity:0}},"&$expanded + &":{"&:before":{display:"none"}},"&$disabled":{backgroundColor:r.palette.action.disabledBackground}},rounded:{borderRadius:0,"&:first-child":{borderTopLeftRadius:r.shape.borderRadius,borderTopRightRadius:r.shape.borderRadius},"&:last-child":{borderBottomLeftRadius:r.shape.borderRadius,borderBottomRightRadius:r.shape.borderRadius,"@supports (-ms-ime-align: auto)":{borderBottomLeftRadius:0,borderBottomRightRadius:0}}},expanded:{},disabled:{}}}),{name:"MuiAccordion"})(O)}}]);