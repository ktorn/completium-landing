(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{161:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return p}));var a=n(3),c=n(7),i=(n(0),n(186)),r=n(190),l={id:"miles10",title:"Interface",sidebar_label:"Interface",slug:"/dapp-miles/miles-contract-interface"},d={unversionedId:"dapp-miles/miles10",id:"dapp-miles/miles10",isDocsHomePage:!1,title:"Interface",description:"The smart contract is developed with the Archetype language.",source:"@site/docs/dapp-miles/miles10.md",slug:"/dapp-miles/miles-contract-interface",permalink:"/completium-landing/docs/dapp-miles/miles-contract-interface",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dapp-miles/miles10.md",version:"current",sidebar_label:"Interface",sidebar:"miles",previous:{title:"Interactions with contract",permalink:"/completium-landing/docs/dapp-miles/miles-tg-interactions"},next:{title:"Implementation",permalink:"/completium-landing/docs/dapp-miles/miles-contract-implementation"}},o=[{value:"Storage",id:"storage",children:[]},{value:"Entry points",id:"entry-points",children:[{value:"add",id:"add",children:[]},{value:"consume",id:"consume",children:[]},{value:"clear expired",id:"clear-expired",children:[]}]}],s={toc:o};function p(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The smart contract is developed with the ",Object(i.b)(r.a,{to:"/docs/dapp-tools/archetype",mdxType:"Link"},"Archetype")," language."),Object(i.b)("h2",{id:"storage"},"Storage"),Object(i.b)("p",null,"The contract defines an admin address that only can call the ",Object(i.b)("inlineCode",{parentName:"p"},"add")," and ",Object(i.b)("inlineCode",{parentName:"p"},"clear_expired")," entry points:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"variable admin : role = @tz1MZrh8CvYkp7BfLQMcm6mg5FvL5HRZfACw\n")),Object(i.b)("p",null,"The contract defines a ",Object(i.b)(r.a,{to:"/docs/dapp-tools/archetype#collection",mdxType:"Link"},"collection")," of miles:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"asset mile identified by id {\n   id         : string;\n   amount     : nat;\n   expiration : date\n}\n")),Object(i.b)("p",null,"The contract defines a collection of owners and defines which owner owns which miles:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"asset owner identified by addr {\n  addr  : role;\n  miles : partition<mile> = []\n}\n")),Object(i.b)("h2",{id:"entry-points"},"Entry points"),Object(i.b)("h3",{id:"add"},"add"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry add (\n          ow                 : address,\n          newmile_id         : string,\n          newmile_amount     : nat,\n          newmile_expiration : date) {\n  called by admin\n  effect { ... }\n}\n")),Object(i.b)("h3",{id:"consume"},"consume"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry consume (quantity : nat) {\n  ...\n}\n")),Object(i.b)("h3",{id:"clear-expired"},"clear expired"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"entry clear_expired () {\n  called by admin\n  effect {\n    ...\n  }\n}\n")))}p.isMDXComponent=!0}}]);