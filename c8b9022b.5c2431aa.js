(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{226:function(n,t,e){"use strict";e.r(t),e.d(t,"frontMatter",(function(){return S})),e.d(t,"metadata",(function(){return w})),e.d(t,"toc",(function(){return C})),e.d(t,"default",(function(){return T}));var a=e(3),r=e(7),i=e(0),o=e.n(i),c=e(228),l=e(229),s=e(243),u=e(244),d=e(347),b=e.n(d),m=e(349),p=e(388),D=e(390),h=e(605),f=e(391),P=e(592),O=e(552),I=e(590),U=e(254),v=e(280),g=e(255),G=e(284),j=e(551),y=e(612),N=function(n){if(Object(U.d)()){var t=Object(U.b)();return o.a.createElement(D.a,{container:!0,direction:"column",justify:"center",alignItems:"center"},o.a.createElement(f.a,{variant:"subtitle2"},"Connected with:"),o.a.createElement(f.a,{variant:"subtitle2",style:{fontFamily:"Courier Prime, monospace"}},t))}return o.a.createElement(D.a,{container:!0},o.a.createElement(D.a,{item:!0,xs:8},o.a.createElement(G.a,{main:n.main})),o.a.createElement(D.a,{item:!0,xs:2},o.a.createElement(y.a,{checked:n.main,onChange:function(t){n.setMain(t.target.checked)},name:"checkedB",color:"primary"})),o.a.createElement(D.a,{item:!0,xs:2},o.a.createElement(f.a,{variant:"subtitle2",style:{marginTop:"8px"}},"Mainnet")))};var A=function(n){return o.a.createElement(D.a,{container:!0,direction:"column",justify:"center",alignItems:"center"},o.a.createElement(f.a,{variant:"subtitle2"},"Contract available at:"),o.a.createElement(f.a,{component:l.a,to:"https://better-call.dev/"+(n.main?"mainnet":"edo2net")+"/"+n.contract+"/operations",variant:"subtitle2",style:{fontFamily:"Courier Prime, monospace"}},n.contract))},E=function(){var n=o.a.useState(""),t=n[0],a=n[1],r=o.a.useState(5),i=r[0],c=r[1],l=o.a.useState(""),s=l[0],u=l[1],d=o.a.useState(!1),f=d[0],O=d[1],I=Object(g.b)(),v=I.setInfoSnack,G=I.setErrorSnack,y=I.hideSnack,E=Object(U.e)(),R=Object(U.d)(),S=function(){return t.length>0&(36!==(n=t).length|!n.startsWith("tz1"));var n},w=function(){return!(Math.round(i)==i&i>0)},C=function(){var n=Object(m.a)(b.a.mark((function n(){var a,r,o,c,l,s;return b.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,a=e(310).Fraction,r=new a(i),o={prim:"Pair",args:[{int:r.numerator.toString()},{int:r.denominator.toString()}]},n.next=6,E.wallet.originate({code:j.code,init:Object(j.getStorage)(t,o)}).send();case 6:return c=n.sent,l=c.opHash.substring(0,10)+"...",v("waiting for "+l+" to be confirmed ..."),n.next=11,c.contract();case 11:s=n.sent,y(),console.log("Origination completed for "+s.address+"."),setTimeout((function(){return u(s.address)}),5e3),n.next=22;break;case 17:n.prev=17,n.t0=n.catch(0),console.log(n.t0),G(n.t0.message),setTimeout(y,4e3);case 22:case"end":return n.stop()}}),n,null,[[0,17]])})));return function(){return n.apply(this,arguments)}}();return o.a.createElement(p.a,{style:{backgroundColor:"transparent",border:"1px solid #606770",marginTop:"20px",marginBottom:"20px"},raised:!1},o.a.createElement(D.a,{container:!0,style:{padding:22},spacing:3},o.a.createElement(D.a,{item:!0,xs:6},o.a.createElement(h.a,{onChange:function(n){a(n.target.value)},value:t,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"chairmain",label:"Chairman",error:S(),helperText:S()?"Invalid address format":""})),o.a.createElement(D.a,{item:!0,xs:6,style:{textAlign:"center",marginTop:"10px"}},o.a.createElement(N,{main:f,setMain:O})),o.a.createElement(D.a,{item:!0,xs:6},o.a.createElement(h.a,{type:"number",onChange:function(n){c(n.target.value)},error:w(),helperText:w()?"Invalid Integer Number":"",value:i,variant:"outlined",color:"primary",fullWidth:!0,required:!0,id:"maxvotes",label:"Max. nb. votes"})),o.a.createElement(D.a,{item:!0,xs:6,style:{textAlign:"center",marginTop:"10px"}},""!==s?o.a.createElement(A,{contract:s,main:f}):o.a.createElement(P.a,{variant:"contained",color:"primary",disableElevation:!0,disabled:!R|w()|S()|0==t.length,onClick:C},"originate"))))},R=function(n){var t=o.a.useMemo((function(){return Object(O.a)({palette:{type:"dark",primary:{light:"#1dc5ff",main:"#00ACE7",dark:"#0a90bf",contrastText:"#fff"}}})}),[!0]);return o.a.createElement(U.a,{appName:"Completium IOT"},o.a.createElement(g.a,null,o.a.createElement(I.a,{theme:t},o.a.createElement(E,null),o.a.createElement(v.a,null))))},S={id:"template8",title:"Idea box",sidebar_label:"Idea box",slug:"/templates/ideabox"},w={unversionedId:"templates/template8",id:"templates/template8",isDocsHomePage:!1,title:"Idea box",description:"Introduction",source:"@site/docs/templates/template8.md",slug:"/templates/ideabox",permalink:"/docs/templates/ideabox",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/templates/template8.md",version:"current",sidebar_label:"Idea box",sidebar:"templates",previous:{title:"Health care",permalink:"/docs/templates/healthcare"},next:{title:"Competition",permalink:"/docs/templates/competition"}},C=[{value:"Introduction",id:"introduction",children:[]},{value:"API",id:"api",children:[{value:"Storage",id:"storage",children:[]},{value:"Entrypoints",id:"entrypoints",children:[]}]},{value:"Originate",id:"originate",children:[{value:"Command line",id:"command-line",children:[]}]},{value:"Code",id:"code",children:[]}],x={toc:C};function T(n){var t=n.components,e=Object(r.a)(n,["components"]);return Object(c.b)("wrapper",Object(a.a)({},x,e,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"introduction"},"Introduction"),Object(c.b)("p",null,"This contract is a process to propose ideas and to select the best ones. You can see this contract in action in the ",Object(c.b)(l.a,{to:"/docs/dapp-ideabox/",mdxType:"Link"},"Idea Box")," DApp example."),Object(c.b)("h2",{id:"api"},"API"),Object(c.b)("h3",{id:"storage"},"Storage"),Object(c.b)("p",null,"Ideas data (title and description) are stored as ",Object(c.b)("inlineCode",{parentName:"p"},"bytes"),"."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"chairman")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"address")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Address of the box's chairman")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"maxvotes")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"nat")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Maximum number of votes per voter.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"idea")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"collection")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An idea is defined by:",Object(c.b)("ul",null,Object(c.b)("li",null,"an identifier (key)"),Object(c.b)("li",null,"a title"),Object(c.b)("li",null,"a description"),Object(c.b)("li",null,"a number of votes"),Object(c.b)("li",null,"a creation date"),Object(c.b)("li",null,"the author's address")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"voter")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"collection")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A voter is defined by:",Object(c.b)("ul",null,Object(c.b)("li",null,"an address (key)"),Object(c.b)("li",null,"a number of remaining votes")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"selected")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"collecter")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This is the collection of selected ideas.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"_state")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"states")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Box state, one of ",Object(c.b)("inlineCode",{parentName:"td"},"Activated"),", ",Object(c.b)("inlineCode",{parentName:"td"},"Terminated"),".")))),Object(c.b)("h3",{id:"entrypoints"},"Entrypoints"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameters"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"register")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"a")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Called by ",Object(c.b)("inlineCode",{parentName:"td"},"chairman")," to register a new voter at address ",Object(c.b)("inlineCode",{parentName:"td"},"a")," and remaining votes at ",Object(c.b)("inlineCode",{parentName:"td"},"maxvotes"),".")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"add_idea")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"ititle"),", ",Object(c.b)("inlineCode",{parentName:"td"},"description")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Adds an idea in the box if box not terminated (",Object(c.b)("em",{parentName:"td"},"anyone")," can add an idea).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"vote")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"n"),", ",Object(c.b)("inlineCode",{parentName:"td"},"weight")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Called by a voter to increment by ",Object(c.b)("inlineCode",{parentName:"td"},"weight")," the number of votes of idea ",Object(c.b)("inlineCode",{parentName:"td"},"n"),". It fails if box is terminated.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"terminate")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Called by ",Object(c.b)("inlineCode",{parentName:"td"},"chairman")," to close the box and select the top 3 best ideas with numbers of votes above ",Object(c.b)("inlineCode",{parentName:"td"},"maxvotes"),".")))),Object(c.b)("h2",{id:"originate"},"Originate"),Object(c.b)("p",null,"Originate a switch contract with the widget below."),Object(c.b)("p",null,'Click "Connect to Wallet" button, fill the fields "Owner" and "Rate", and click "Originate".'),Object(c.b)(R,{mdxType:"DeployIdeaBox"}),Object(c.b)("h3",{id:"command-line"},"Command line"),Object(c.b)("p",null,"Originate the contract from ",Object(c.b)("a",{href:"https://archetype-lang.org/"},"Archetype")," code below with the following ",Object(c.b)(l.a,{to:"/docs/cli",mdxType:"Link"},"Completium CLI")," example command:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"completium-cli deploy ideabox.arl --init '(@tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG, 5)'\n")),Object(c.b)("p",null,"The command sets:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"chairman")," variable to ",Object(c.b)("inlineCode",{parentName:"li"},"tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"maxvotes")," variable to 2.5")),Object(c.b)("h2",{id:"code"},"Code"),Object(c.b)(s.a,{defaultValue:"archetype",values:[{label:"Archetype",value:"archetype"},{label:"Michelson",value:"michelson"},{label:"Specification",value:"specification"}],mdxType:"Tabs"},Object(c.b)(u.a,{value:"archetype",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype",metastring:'title="ideabox.arl"',title:'"ideabox.arl"'}),"archetype ideasbox(chairman : address, maxvotes : nat)\n\nstates =\n| Activated initial\n| Terminated\n\nasset idea {\n  id       : nat;\n  title    : bytes;\n  desc     : bytes;\n  nbvotes  : nat = 0;\n  creation : date;\n  author   : address;\n}\n\nasset voter {\n  addr      : address;\n  remaining : nat = maxvotes;\n}\n\nasset selected {\n  sid : nat;\n}\n\nentry register (a_voter : address) {\n  called by chairman\n  require {\n    r0 : state = Activated;\n  }\n  effect { voter.add({ addr = a_voter }) }\n}\n\nentry add_idea(ititle : bytes, description : bytes) {\n  require {\n    r1 : state = Activated;\n  }\n  effect {\n    idea.add({\n            id = idea.count();\n      title = ititle;\n            desc = description;\n            creation = now;\n            author = caller\n        })\n  }\n}\n\nentry vote(n : nat, weight : nat) {\n  require {\n    r2 : voter.contains(caller);\n    r3 : voter[caller].remaining >= weight;\n    r4 : state = Activated;\n  }\n  effect {\n    voter[caller].remaining -= weight;\n    idea[n].nbvotes += weight;\n  }\n}\n\ntransition terminate () {\n  called by chairman\n  from Activated\n  to Terminated\n  with effect {\n    for i in idea.select(the.nbvotes > maxvotes).sort(desc(nbvotes)).head(3) do\n        selected.add({i})\n    done\n  }\n}\n"))),Object(c.b)(u.a,{value:"michelson",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'# (Pair chairman (Pair maxvotes (Pair 0 (Pair {  } (Pair {  } {  })))))\n{\n  storage (pair (address %chairman) (pair (nat %maxvotes) (pair (nat %_state) (pair (map %idea nat (pair (bytes %title) (pair (bytes %desc) (pair (nat %nbvotes) (pair (timestamp %creation) (address %author)))))) (pair (map %voter address nat) (set %selected nat))))));\n  parameter (or (address %register) (or (pair %add_idea (bytes %ititle) (bytes %description)) (or (pair %vote (nat %n) (nat %weight)) (unit %terminate))));\n  code { UNPAIR;\n         DIP { UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP };\n         IF_LEFT\n           { DIG 6;\n             DUP;\n             DUG 7;\n             SENDER;\n             COMPARE;\n             EQ;\n             NOT;\n             IF\n               { PUSH string "InvalidCaller";\n                 FAILWITH }\n               {  };\n             PUSH nat 0;\n             DIG 5;\n             DUP;\n             DUG 6;\n             COMPARE;\n             EQ;\n             NOT;\n             IF\n               { PUSH string "InvalidCondition: r0";\n                 FAILWITH }\n               {  };\n             DIG 2;\n             DUP;\n             DUG 3;\n             DIG 1;\n             DUP;\n             DUG 2;\n             MEM;\n             IF\n               { PUSH string "KeyAlreadyExists";\n                 FAILWITH }\n               { DIG 2;\n                 DUP;\n                 DUG 3;\n                 DIG 6;\n                 DUP;\n                 DUG 7;\n                 SOME;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 UPDATE;\n                 DIP { DIG 2; DROP };\n                 DUG 2 };\n             DROP;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             NIL operation;\n             PAIR }\n           { IF_LEFT\n               { UNPAIR;\n                 SWAP;\n                 PUSH nat 0;\n                 DIG 6;\n                 DUP;\n                 DUG 7;\n                 COMPARE;\n                 EQ;\n                 NOT;\n                 IF\n                   { PUSH string "InvalidCondition: r1";\n                     FAILWITH }\n                   {  };\n                 DIG 4;\n                 DUP;\n                 DUG 5;\n                 DIG 5;\n                 DUP;\n                 DUG 6;\n                 SIZE;\n                 MEM;\n                 IF\n                   { PUSH string "KeyAlreadyExists";\n                     FAILWITH }\n                   { DIG 4;\n                     DUP;\n                     DUG 5;\n                     SENDER;\n                     NOW;\n                     PAIR;\n                     PUSH nat 0;\n                     PAIR;\n                     DIG 2;\n                     DUP;\n                     DUG 3;\n                     PAIR;\n                     DIG 3;\n                     DUP;\n                     DUG 4;\n                     PAIR;\n                     SOME;\n                     DIG 6;\n                     DUP;\n                     DUG 7;\n                     SIZE;\n                     UPDATE;\n                     DIP { DIG 4; DROP };\n                     DUG 4 };\n                 DROP 2;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 NIL operation;\n                 PAIR }\n               { IF_LEFT\n                   { UNPAIR;\n                     SWAP;\n                     DIG 3;\n                     DUP;\n                     DUG 4;\n                     SENDER;\n                     MEM;\n                     NOT;\n                     IF\n                       { PUSH string "InvalidCondition: r2";\n                         FAILWITH }\n                       {  };\n                     DUP;\n                     DIG 4;\n                     DUP;\n                     DUG 5;\n                     SENDER;\n                     GET;\n                     IF_NONE\n                       { PUSH string "GetNoneValue";\n                         FAILWITH }\n                       {  };\n                     COMPARE;\n                     GE;\n                     NOT;\n                     IF\n                       { PUSH string "InvalidCondition: r3";\n                         FAILWITH }\n                       {  };\n                     PUSH nat 0;\n                     DIG 6;\n                     DUP;\n                     DUG 7;\n                     COMPARE;\n                     EQ;\n                     NOT;\n                     IF\n                       { PUSH string "InvalidCondition: r4";\n                         FAILWITH }\n                       {  };\n                     DIG 3;\n                     DUP;\n                     DUG 4;\n                     SENDER;\n                     GET;\n                     IF_NONE\n                       { PUSH string "GetNoneValue";\n                         FAILWITH }\n                       {  };\n                     DIG 4;\n                     DUP;\n                     DUG 5;\n                     PUSH int 0;\n                     DIG 3;\n                     DUP;\n                     DUG 4;\n                     INT;\n                     DIG 3;\n                     DUP;\n                     DUG 4;\n                     SUB;\n                     COMPARE;\n                     GE;\n                     IF\n                       { DIG 2;\n                         DUP;\n                         DUG 3;\n                         INT;\n                         DIG 2;\n                         DUP;\n                         DUG 3;\n                         SUB;\n                         ABS }\n                       { PUSH string "AssignNat";\n                         FAILWITH };\n                     SOME;\n                     SENDER;\n                     UPDATE;\n                     DIP { DIG 4; DROP };\n                     DUG 4;\n                     DROP;\n                     DIG 4;\n                     DUP;\n                     DUG 5;\n                     DIG 2;\n                     DUP;\n                     DUG 3;\n                     GET;\n                     IF_NONE\n                       { PUSH string "GetNoneValue";\n                         FAILWITH }\n                       {  };\n                     DIG 5;\n                     DUP;\n                     DUG 6;\n                     DIG 6;\n                     DUP;\n                     DUG 7;\n                     DIG 4;\n                     DUP;\n                     DUG 5;\n                     GET;\n                     IF_NONE\n                       { PUSH string "GetNoneValue";\n                         FAILWITH }\n                       {  };\n                     UNPAIR;\n                     SWAP;\n                     UNPAIR;\n                     SWAP;\n                     UNPAIR;\n                     DROP;\n                     DIG 5;\n                     DUP;\n                     DUG 6;\n                     DIG 5;\n                     DUP;\n                     DUG 6;\n                     CDR;\n                     CDR;\n                     CAR;\n                     ADD;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SOME;\n                     DIG 4;\n                     DUP;\n                     DUG 5;\n                     UPDATE;\n                     DIP { DIG 5; DROP };\n                     DUG 5;\n                     DROP 3;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     NIL operation;\n                     PAIR }\n                   { DROP;\n                     DIG 5;\n                     DUP;\n                     DUG 6;\n                     SENDER;\n                     COMPARE;\n                     EQ;\n                     NOT;\n                     IF\n                       { PUSH string "InvalidCaller";\n                         FAILWITH }\n                       {  };\n                     DIG 3;\n                     DUP;\n                     DUG 4;\n                     DUP;\n                     PUSH nat 0;\n                     COMPARE;\n                     EQ;\n                     IF\n                       { NIL nat;\n                         NIL nat;\n                         PUSH nat 0;\n                         PAIR;\n                         NIL nat;\n                         NIL nat;\n                         NIL nat;\n                         DIG 8;\n                         DUP;\n                         DUG 9;\n                         ITER { UNPAIR;\n                                DIG 12;\n                                DUP;\n                                DUG 13;\n                                DIG 2;\n                                DUP;\n                                DUG 3;\n                                CDR;\n                                CDR;\n                                CAR;\n                                COMPARE;\n                                GT;\n                                IF\n                                  { DIG 2;\n                                    DUP;\n                                    DUG 3;\n                                    DIG 1;\n                                    DUP;\n                                    DUG 2;\n                                    CONS }\n                                  { DIG 2;\n                                    DUP;\n                                    DUG 3 };\n                                DIP { DIG 2; DROP };\n                                DUG 2;\n                                DROP 2 };\n                         ITER { DIG 1;\n                                DUP;\n                                DUG 2;\n                                DIG 1;\n                                DUP;\n                                DUG 2;\n                                CONS;\n                                DIP { DIG 1; DROP };\n                                DUG 1;\n                                DROP };\n                         ITER { DIG 7;\n                                DUP;\n                                DUG 8;\n                                DIG 1;\n                                DUP;\n                                DUG 2;\n                                GET;\n                                IF_NONE\n                                  { PUSH string "GetNoneValue";\n                                    FAILWITH }\n                                  {  };\n                                NIL nat;\n                                DIG 2;\n                                DUP;\n                                DUG 3;\n                                SOME;\n                                PAIR;\n                                DIG 3;\n                                DUP;\n                                DUG 4;\n                                ITER { DIG 1;\n                                       DUP;\n                                       DUG 2;\n                                       CAR;\n                                       DIG 2;\n                                       DUP;\n                                       DUG 3;\n                                       CDR;\n                                       DIG 1;\n                                       DUP;\n                                       DUG 2;\n                                       IF_NONE\n                                         { DUP;\n                                           DIG 3;\n                                           DUP;\n                                           DUG 4;\n                                           CONS;\n                                           DIG 2;\n                                           DUP;\n                                           DUG 3;\n                                           PAIR }\n                                         { PUSH int 0;\n                                           DIG 14;\n                                           DUP;\n                                           DUG 15;\n                                           DIG 5;\n                                           DUP;\n                                           DUG 6;\n                                           GET;\n                                           IF_NONE\n                                             { PUSH string "GetNoneValue";\n                                               FAILWITH }\n                                             {  };\n                                           DIG 7;\n                                           DUP;\n                                           DUG 8;\n                                           CDR;\n                                           CDR;\n                                           CAR;\n                                           DIG 1;\n                                           DUP;\n                                           DUG 2;\n                                           CDR;\n                                           CDR;\n                                           CAR;\n                                           COMPARE;\n                                           LT;\n                                           IF\n                                             { PUSH int 1 }\n                                             { PUSH int 0 };\n                                           DIP { DROP };\n                                           COMPARE;\n                                           GT;\n                                           IF\n                                             { DIG 1;\n                                               DUP;\n                                               DUG 2;\n                                               DIG 7;\n                                               DUP;\n                                               DUG 8;\n                                               CONS;\n                                               DIG 4;\n                                               DUP;\n                                               DUG 5;\n                                               CONS;\n                                               NONE nat;\n                                               PAIR }\n                                             { DIG 1;\n                                               DUP;\n                                               DUG 2;\n                                               DIG 4;\n                                               DUP;\n                                               DUG 5;\n                                               CONS;\n                                               DIG 3;\n                                               DUP;\n                                               DUG 4;\n                                               PAIR };\n                                           SWAP;\n                                           DROP };\n                                       DIP { DROP };\n                                       DIP { DROP };\n                                       DIP { DIG 1; DROP };\n                                       DUG 1;\n                                       DROP };\n                                DUP;\n                                CAR;\n                                DIG 1;\n                                DUP;\n                                DUG 2;\n                                CDR;\n                                NIL nat;\n                                DIG 2;\n                                DUP;\n                                DUG 3;\n                                IF_NONE\n                                  { DIG 1;\n                                    DUP;\n                                    DUG 2 }\n                                  { DIG 2;\n                                    DUP;\n                                    DUG 3;\n                                    DIG 7;\n                                    DUP;\n                                    DUG 8;\n                                    CONS;\n                                    SWAP;\n                                    DROP };\n                                ITER { DIG 1;\n                                       DUP;\n                                       DUG 2;\n                                       DIG 1;\n                                       DUP;\n                                       DUG 2;\n                                       CONS;\n                                       DIP { DIG 1; DROP };\n                                       DUG 1;\n                                       DROP };\n                                DIP { DROP };\n                                DIP { DROP };\n                                DIP { DROP };\n                                DIP { DROP };\n                                DIP { DIG 1; DROP };\n                                DUG 1;\n                                DROP };\n                         ITER { PUSH nat 3;\n                                DIG 2;\n                                DUP;\n                                DUG 3;\n                                CAR;\n                                COMPARE;\n                                LT;\n                                IF\n                                  { DIG 1;\n                                    DUP;\n                                    DUG 2;\n                                    CDR;\n                                    DIG 1;\n                                    DUP;\n                                    DUG 2;\n                                    CONS;\n                                    PUSH nat 1;\n                                    DIG 3;\n                                    DUP;\n                                    DUG 4;\n                                    CAR;\n                                    ADD;\n                                    PAIR }\n                                  { DIG 1;\n                                    DUP;\n                                    DUG 2;\n                                    CDR;\n                                    PUSH nat 1;\n                                    DIG 3;\n                                    DUP;\n                                    DUG 4;\n                                    CAR;\n                                    ADD;\n                                    PAIR };\n                                DIP { DIG 1; DROP };\n                                DUG 1;\n                                DROP };\n                         CDR;\n                         ITER { DIG 1;\n                                DUP;\n                                DUG 2;\n                                DIG 1;\n                                DUP;\n                                DUG 2;\n                                CONS;\n                                DIP { DIG 1; DROP };\n                                DUG 1;\n                                DROP };\n                         ITER { DIG 2;\n                                DUP;\n                                DUG 3;\n                                DIG 1;\n                                DUP;\n                                DUG 2;\n                                MEM;\n                                IF\n                                  { PUSH string "KeyAlreadyExists";\n                                    FAILWITH }\n                                  { DIG 2;\n                                    DUP;\n                                    DUG 3;\n                                    PUSH bool True;\n                                    DIG 2;\n                                    DUP;\n                                    DUG 3;\n                                    UPDATE;\n                                    DIP { DIG 2; DROP };\n                                    DUG 2 };\n                                DROP };\n                         PUSH nat 1;\n                         DIP { DIG 4; DROP };\n                         DUG 4 }\n                       { PUSH string "InvalidState";\n                         FAILWITH };\n                     DROP;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     SWAP;\n                     PAIR;\n                     NIL operation;\n                     PAIR } } } };\n}\n'))),Object(c.b)(u.a,{value:"specification",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype"}),"specification entry vote (n : nat, weight : nat) {\n  postcondition p1 {\n    let some v = voter[caller] in\n    let some bv = before.voter[caller] in\n      v.remaining = bv.remaining - weight\n    otherwise true otherwise true\n  }\n}\n\nspecification {\n  i1 : 5 * voter.count() = idea.sum(nbvotes) + voter.sum(remaining)\n}\n")))))}T.isMDXComponent=!0},254:function(n,t,e){"use strict";e.d(t,"a",(function(){return c})),e.d(t,"f",(function(){return l})),e.d(t,"e",(function(){return s})),e.d(t,"b",(function(){return u})),e.d(t,"d",(function(){return d})),e.d(t,"c",(function(){return b}));var a=e(0),r=e.n(a),i=e(263),o=e(325);const[c,l,s,u,d,b]=Object(i.a)((function({appName:n}){const[{wallet:t,tezos:e,accountPkh:a},i]=r.a.useState((()=>({wallet:null,tezos:null,accountPkh:null}))),c=Boolean(e);r.a.useEffect((()=>o.a.onAvailabilityChange((t=>{i({wallet:t?new o.a(n):null,tezos:null,accountPkh:null})}))),[i,n]);const l=r.a.useCallback((async(n,e)=>{try{if(!t)throw new Error("Thanos Wallet not available");await t.connect(n,e);const a=t.toTezos(),r=await a.wallet.pkh();i({wallet:t,tezos:a,accountPkh:r})}catch(a){alert(`Failed to connect ThanosWallet: ${a.message}`)}}),[i,t]);return{wallet:t,tezos:e,accountPkh:a,ready:c,connect:l}}),(n=>n.wallet),(n=>n.tezos),(n=>n.accountPkh),(n=>n.ready),(n=>n.connect))},255:function(n,t,e){"use strict";e.d(t,"a",(function(){return i})),e.d(t,"b",(function(){return o}));var a=e(0),r=e(263);const[i,o]=Object(r.a)((function(){const[n,t]=Object(a.useState)({show:!1,severity:"info",msg:""});return{snackState:n,setInfoSnack:n=>{t({show:!0,severity:"info",msg:n})},setErrorSnack:n=>{t({show:!0,severity:"error",msg:n})},hideSnack:()=>{t((n=>({...n,show:!1})))}}}))},280:function(n,t,e){"use strict";var a=e(3),r=e(0),i=e.n(r),o=e(610),c=e(607),l=e(324),s=e(255);function u(n){return i.a.createElement(c.a,Object(a.a)({elevation:6,variant:"filled"},n))}t.a=()=>{const{snackState:n}=Object(s.b)();Object(l.a)();return i.a.createElement(o.a,{open:n.show},i.a.createElement(u,{severity:n.severity},n.msg))}},284:function(n,t,e){"use strict";var a=e(0),r=e.n(a),i=e(254);var o=e(592),c=e(598),l=e(324);t.a=n=>{const t=Object(l.a)(),e=Object(i.d)(),a=Object(i.f)(),s=Object(i.c)(),u=r.a.useCallback((n=>async()=>{try{await s(n?"mainnet":"edo2net")}catch(t){alert(t.message)}}),[s]);return e?r.a.createElement("div",null):a?r.a.createElement(o.a,{variant:"outlined",color:t.palette.text.primary,onClick:u(n.main)},"connect to wallet"):r.a.createElement(c.a,{href:"https://templewallet.com/",rel:"noopener",underline:"none"},r.a.createElement(o.a,{variant:"contained",disableElevation:!0,style:{backgroundColor:"#ed8936",color:"white",fontWeight:"bold"}},"install Temple"))}},310:function(n,t){var e,a;Fraction=function(n,t){if(void 0!==n&&t)"number"==typeof n&&"number"==typeof t?(this.numerator=n,this.denominator=t):"string"==typeof n&&"string"==typeof t&&(this.numerator=parseInt(n),this.denominator=parseInt(t));else if(void 0===t)if(num=n,"number"==typeof num)this.numerator=num,this.denominator=1;else if("string"==typeof num){var e,a,r=num.split(" ");if(r[0]&&(e=r[0]),r[1]&&(a=r[1]),e%1==0&&a&&a.match("/"))return new Fraction(e).add(new Fraction(a));if(!e||a)return;if("string"==typeof e&&e.match("/")){var i=e.split("/");this.numerator=i[0],this.denominator=i[1]}else{if("string"==typeof e&&e.match("."))return new Fraction(parseFloat(e));this.numerator=parseInt(e),this.denominator=1}}this.normalize()},Fraction.prototype.clone=function(){return new Fraction(this.numerator,this.denominator)},Fraction.prototype.toString=function(){if("NaN"===this.denominator)return"NaN";var n=this.numerator/this.denominator>0?Math.floor(this.numerator/this.denominator):Math.ceil(this.numerator/this.denominator),t=this.numerator%this.denominator,e=this.denominator,a=[];return 0!=n&&a.push(n),0!=t&&a.push((0===n?t:Math.abs(t))+"/"+e),a.length>0?a.join(" "):0},Fraction.prototype.rescale=function(n){return this.numerator*=n,this.denominator*=n,this},Fraction.prototype.add=function(n){var t=this.clone();return n=n instanceof Fraction?n.clone():new Fraction(n),td=t.denominator,t.rescale(n.denominator),n.rescale(td),t.numerator+=n.numerator,t.normalize()},Fraction.prototype.subtract=function(n){var t=this.clone();return n=n instanceof Fraction?n.clone():new Fraction(n),td=t.denominator,t.rescale(n.denominator),n.rescale(td),t.numerator-=n.numerator,t.normalize()},Fraction.prototype.multiply=function(n){var t=this.clone();if(n instanceof Fraction)t.numerator*=n.numerator,t.denominator*=n.denominator;else{if("number"!=typeof n)return t.multiply(new Fraction(n));t.numerator*=n}return t.normalize()},Fraction.prototype.divide=function(n){var t=this.clone();if(n instanceof Fraction)t.numerator*=n.denominator,t.denominator*=n.numerator;else{if("number"!=typeof n)return t.divide(new Fraction(n));t.denominator*=n}return t.normalize()},Fraction.prototype.equals=function(n){n instanceof Fraction||(n=new Fraction(n));var t=this.clone().normalize();n=n.clone().normalize();return t.numerator===n.numerator&&t.denominator===n.denominator},Fraction.prototype.normalize=(e=function(n){return"number"==typeof n&&(n>0&&n%1>0&&n%1<1||n<0&&n%-1<0&&n%-1>-1)},a=function(n,t){if(t){var e=Math.pow(10,t);return Math.round(n*e)/e}return Math.round(n)},function(){if(e(this.denominator)){var n=a(this.denominator,9),t=Math.pow(10,n.toString().split(".")[1].length);this.denominator=Math.round(this.denominator*t),this.numerator*=t}e(this.numerator)&&(n=a(this.numerator,9),t=Math.pow(10,n.toString().split(".")[1].length),this.numerator=Math.round(this.numerator*t),this.denominator*=t);var r=Fraction.gcf(this.numerator,this.denominator);return this.numerator/=r,this.denominator/=r,(this.numerator<0&&this.denominator<0||this.numerator>0&&this.denominator<0)&&(this.numerator*=-1,this.denominator*=-1),this}),Fraction.gcf=function(n,t){var e=[],a=Fraction.primeFactors(n),r=Fraction.primeFactors(t);return a.forEach((function(n){var t=r.indexOf(n);t>=0&&(e.push(n),r.splice(t,1))})),0===e.length?1:function(){var n,t=e[0];for(n=1;n<e.length;n++)t*=e[n];return t}()},Fraction.primeFactors=function(n){for(var t=Math.abs(n),e=[],a=2;a*a<=t;)t%a==0?(e.push(a),t/=a):a++;return 1!=t&&e.push(t),e},n.exports.Fraction=Fraction},315:function(n,t){},316:function(n,t){},320:function(n,t){},321:function(n,t){},322:function(n,t){},323:function(n,t){},347:function(n,t,e){n.exports=e(348)},348:function(n,t,e){var a=function(n){"use strict";var t,e=Object.prototype,a=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},i=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",c=r.toStringTag||"@@toStringTag";function l(n,t,e){return Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}),n[t]}try{l({},"")}catch(S){l=function(n,t,e){return n[t]=e}}function s(n,t,e,a){var r=t&&t.prototype instanceof h?t:h,i=Object.create(r.prototype),o=new A(a||[]);return i._invoke=function(n,t,e){var a=d;return function(r,i){if(a===m)throw new Error("Generator is already running");if(a===p){if("throw"===r)throw i;return R()}for(e.method=r,e.arg=i;;){var o=e.delegate;if(o){var c=j(o,e);if(c){if(c===D)continue;return c}}if("next"===e.method)e.sent=e._sent=e.arg;else if("throw"===e.method){if(a===d)throw a=p,e.arg;e.dispatchException(e.arg)}else"return"===e.method&&e.abrupt("return",e.arg);a=m;var l=u(n,t,e);if("normal"===l.type){if(a=e.done?p:b,l.arg===D)continue;return{value:l.arg,done:e.done}}"throw"===l.type&&(a=p,e.method="throw",e.arg=l.arg)}}}(n,e,o),i}function u(n,t,e){try{return{type:"normal",arg:n.call(t,e)}}catch(S){return{type:"throw",arg:S}}}n.wrap=s;var d="suspendedStart",b="suspendedYield",m="executing",p="completed",D={};function h(){}function f(){}function P(){}var O={};O[i]=function(){return this};var I=Object.getPrototypeOf,U=I&&I(I(E([])));U&&U!==e&&a.call(U,i)&&(O=U);var v=P.prototype=h.prototype=Object.create(O);function g(n){["next","throw","return"].forEach((function(t){l(n,t,(function(n){return this._invoke(t,n)}))}))}function G(n,t){function e(r,i,o,c){var l=u(n[r],n,i);if("throw"!==l.type){var s=l.arg,d=s.value;return d&&"object"==typeof d&&a.call(d,"__await")?t.resolve(d.__await).then((function(n){e("next",n,o,c)}),(function(n){e("throw",n,o,c)})):t.resolve(d).then((function(n){s.value=n,o(s)}),(function(n){return e("throw",n,o,c)}))}c(l.arg)}var r;this._invoke=function(n,a){function i(){return new t((function(t,r){e(n,a,t,r)}))}return r=r?r.then(i,i):i()}}function j(n,e){var a=n.iterator[e.method];if(a===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=t,j(n,e),"throw"===e.method))return D;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return D}var r=u(a,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,D;var i=r.arg;return i?i.done?(e[n.resultName]=i.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=t),e.delegate=null,D):i:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,D)}function y(n){var t={tryLoc:n[0]};1 in n&&(t.catchLoc=n[1]),2 in n&&(t.finallyLoc=n[2],t.afterLoc=n[3]),this.tryEntries.push(t)}function N(n){var t=n.completion||{};t.type="normal",delete t.arg,n.completion=t}function A(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(y,this),this.reset(!0)}function E(n){if(n){var e=n[i];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,o=function e(){for(;++r<n.length;)if(a.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=t,e.done=!0,e};return o.next=o}}return{next:R}}function R(){return{value:t,done:!0}}return f.prototype=v.constructor=P,P.constructor=f,f.displayName=l(P,c,"GeneratorFunction"),n.isGeneratorFunction=function(n){var t="function"==typeof n&&n.constructor;return!!t&&(t===f||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,P):(n.__proto__=P,l(n,c,"GeneratorFunction")),n.prototype=Object.create(v),n},n.awrap=function(n){return{__await:n}},g(G.prototype),G.prototype[o]=function(){return this},n.AsyncIterator=G,n.async=function(t,e,a,r,i){void 0===i&&(i=Promise);var o=new G(s(t,e,a,r),i);return n.isGeneratorFunction(e)?o:o.next().then((function(n){return n.done?n.value:o.next()}))},g(v),l(v,c,"Generator"),v[i]=function(){return this},v.toString=function(){return"[object Generator]"},n.keys=function(n){var t=[];for(var e in n)t.push(e);return t.reverse(),function e(){for(;t.length;){var a=t.pop();if(a in n)return e.value=a,e.done=!1,e}return e.done=!0,e}},n.values=E,A.prototype={constructor:A,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(N),!n)for(var e in this)"t"===e.charAt(0)&&a.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=t)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(a,r){return c.type="throw",c.arg=n,e.next=a,r&&(e.method="next",e.arg=t),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],c=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var l=a.call(o,"catchLoc"),s=a.call(o,"finallyLoc");if(l&&s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(n,t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=n,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,D):this.complete(o)},complete:function(n,t){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&t&&(this.next=t),D},finish:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.finallyLoc===n)return this.complete(e.completion,e.afterLoc),N(e),D}},catch:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.tryLoc===n){var a=e.completion;if("throw"===a.type){var r=a.arg;N(e)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,a){return this.delegate={iterator:E(n),resultName:e,nextLoc:a},"next"===this.method&&(this.arg=t),D}},n}(n.exports);try{regeneratorRuntime=a}catch(r){Function("r","regeneratorRuntime = r")(a)}},349:function(n,t,e){"use strict";function a(n,t,e,a,r,i,o){try{var c=n[i](o),l=c.value}catch(s){return void e(s)}c.done?t(l):Promise.resolve(l).then(a,r)}function r(n){return function(){var t=this,e=arguments;return new Promise((function(r,i){var o=n.apply(t,e);function c(n){a(o,r,i,c,l,"next",n)}function l(n){a(o,r,i,c,l,"throw",n)}c(void 0)}))}}e.d(t,"a",(function(){return r}))},551:function(n,t){}}]);