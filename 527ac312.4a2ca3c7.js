(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{126:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return b})),t.d(e,"metadata",(function(){return d})),t.d(e,"toc",(function(){return s})),t.d(e,"default",(function(){return p}));var a=t(3),r=t(7),l=(t(0),t(236)),i=t(237),o=t(249),c=t(250),b={id:"template2",title:"ERC20",sidebar_label:"ERC20",slug:"/templates/erc20"},d={unversionedId:"templates/template2",id:"templates/template2",isDocsHomePage:!1,title:"ERC20",description:"Introduction",source:"@site/docs/templates/template2.md",slug:"/templates/erc20",permalink:"/docs/templates/erc20",editUrl:"https://github.com/edukera/completium-landing/tree/master/docs/templates/template2.md",version:"current",sidebar_label:"ERC20",sidebar:"templates",previous:{title:"FA 1.2",permalink:"/docs/templates/fa12"},next:{title:"FA 2",permalink:"/docs/templates/nft"}},s=[{value:"Introduction",id:"introduction",children:[]},{value:"API",id:"api",children:[{value:"Storage",id:"storage",children:[]},{value:"Entrypoints",id:"entrypoints",children:[]}]},{value:"Originate",id:"originate",children:[]},{value:"Code",id:"code",children:[]}],D={toc:s};function p(n){var e=n.components,t=Object(r.a)(n,["components"]);return Object(l.b)("wrapper",Object(a.a)({},D,t,{components:e,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"introduction"},"Introduction"),Object(l.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(l.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"It is strongly suggested to use the ",Object(l.b)(i.a,{to:"/docs/templates/fa12",mdxType:"Link"},"FA 1.2")," norm for fungible token."))),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)("h3",{id:"storage"},"Storage"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"total")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"nat")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"total number of unit tokens.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"onetoken")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"nat")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number of units for one token.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"ledger")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"collection")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Association between token holder and number of tokens.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"allowance")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"collection")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Association between the pair owner and spender and the allowed amount.")))),Object(l.b)("h3",{id:"entrypoints"},"Entrypoints"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameters"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"transfer")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"to"),", ",Object(l.b)("inlineCode",{parentName:"td"},"value")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Transfers ",Object(l.b)("inlineCode",{parentName:"td"},"value")," tokens from ",Object(l.b)("em",{parentName:"td"},"caller")," to ",Object(l.b)("inlineCode",{parentName:"td"},"to"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"approve")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"spender"),", ",Object(l.b)("inlineCode",{parentName:"td"},"value")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Approves ",Object(l.b)("inlineCode",{parentName:"td"},"spender")," to transfer ",Object(l.b)("inlineCode",{parentName:"td"},"value")," tokens from ",Object(l.b)("em",{parentName:"td"},"caller"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"transferFrom")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"from"),", ",Object(l.b)("inlineCode",{parentName:"td"},"to"),", ",Object(l.b)("inlineCode",{parentName:"td"},"value")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Transfers ",Object(l.b)("inlineCode",{parentName:"td"},"value")," tokens from ",Object(l.b)("inlineCode",{parentName:"td"},"from")," to ",Object(l.b)("inlineCode",{parentName:"td"},"to"),". It requires that ",Object(l.b)("em",{parentName:"td"},"caller")," have been allowed by ",Object(l.b)("inlineCode",{parentName:"td"},"from")," to transfer this amount to ",Object(l.b)("inlineCode",{parentName:"td"},"to"),".")))),Object(l.b)("h2",{id:"originate"},"Originate"),Object(l.b)("p",null,"Deploy the contract from ",Object(l.b)("a",{href:"https://archetype-lang.org/"},"Archetype")," code below with the following ",Object(l.b)(i.a,{to:"/docs/cli",mdxType:"Link"},"Completium CLI")," example command:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{}),"completium-cli deploy erc20.arl --init '(1_000_000_000_000_000, 1_000_000, @tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG)'\n")),Object(l.b)("p",null,"The command sets:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"total")," variable to 10 millions"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"onetoken")," variable to 1 million"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"initialholder")," constant to ",Object(l.b)("inlineCode",{parentName:"li"},"tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG"))),Object(l.b)("h2",{id:"code"},"Code"),Object(l.b)(o.a,{defaultValue:"archetype",values:[{label:"Archetype",value:"archetype"},{label:"Michelson",value:"michelson"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"archetype",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-archetype",metastring:'title="erc20.arl"',title:'"erc20.arl"'}),"archetype erc20(total : nat, onetoken: nat, const initialowner : address)\n\nasset allowance identified by owner spender {\n  owner     : address;\n  spender     : address;\n  amount      : nat;\n}\n\nasset ledger identified by holder {\n  holder     : address;\n  tokens     : nat = 0;\n} initialized by {\n  { holder = initialowner; tokens = total }\n}\n\nentry %transfer (%to : pkey<ledger>, value : nat) {\n  require {\n    d0 : ledger[caller].tokens >= value\n  }\n  effect {\n    ledger.addupdate(%to,  { tokens += value });\n    ledger.update(caller, { tokens -= value })\n  }\n}\n\nentry approve(ispender : address, value : nat) {\n  require {\n    d1 : ledger[caller].tokens >= value;\n  }\n  effect {\n    allowance.addupdate((caller, ispender), { amount = value });\n  }\n}\n\nentry transferFrom(%from : address, %to : address, value : nat) {\n  require {\n    d3: allowance[(%from,caller)].amount >= value;\n    d4: ledger[%from].tokens >= value\n  }\n  effect {\n    (* update allowance *)\n    allowance.update((%from,caller), { amount -=  value });\n    (* update token *)\n    ledger.addupdate(%to, { tokens += value });\n    ledger.update(%from,  { tokens -= value });\n  }\n}\n"))),Object(l.b)(c.a,{value:"michelson",mdxType:"TabItem"},Object(l.b)("p",null,"The ",Object(l.b)(i.a,{to:"/docs/contract/programming-language#micheslon",mdxType:"Link"},"Michelson")," code is generated with version 1.2.3 of Archetype."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'# (Pair 1000000000000000 (Pair 1000000 (Pair {  } { Elt "tz1LLJ3nxbpGGMLmjzcp9sTMYui87tycG6nG" 1000000000000000 })))\n{\n  storage (pair (nat %total) (pair (nat %onetoken) (pair (map %allowance (pair address address) nat) (map %ledger address nat))));\n  parameter (or (pair %transfer (address %to) (nat %value)) (or (pair %approve (address %ispender) (nat %value)) (pair %transferFrom (address %from) (pair (address %to) (nat %value)))));\n  code { UNPAIR;\n         DIP { UNPAIR; SWAP; UNPAIR; SWAP; UNPAIR; SWAP };\n         IF_LEFT\n           { UNPAIR;\n             SWAP;\n             DUP;\n             DIG 3;\n             DUP;\n             DUG 4;\n             SENDER;\n             GET;\n             IF_NONE\n               { PUSH string "GetNoneValue";\n                 FAILWITH }\n               {  };\n             COMPARE;\n             GE;\n             NOT;\n             IF\n               { PUSH string "InvalidCondition: d0";\n                 FAILWITH }\n               {  };\n             DIG 2;\n             DUP;\n             DUG 3;\n             DIG 2;\n             DUP;\n             DUG 3;\n             MEM;\n             IF\n               { DIG 2;\n                 DUP;\n                 DUG 3;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 GET;\n                 IF_NONE\n                   { PUSH string "GetNoneValue";\n                     FAILWITH }\n                   {  };\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 ADD;\n                 SOME;\n                 DIG 4;\n                 DUP;\n                 DUG 5;\n                 UPDATE;\n                 DIP { DIG 3; DROP };\n                 DUG 3;\n                 DROP }\n               { DIG 2;\n                 DUP;\n                 DUG 3;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 MEM;\n                 IF\n                   { PUSH string "KeyAlreadyExists";\n                     FAILWITH }\n                   { DIG 2;\n                     DUP;\n                     DUG 3;\n                     DIG 1;\n                     DUP;\n                     DUG 2;\n                     PUSH nat 0;\n                     ADD;\n                     SOME;\n                     DIG 3;\n                     DUP;\n                     DUG 4;\n                     UPDATE;\n                     DIP { DIG 2; DROP };\n                     DUG 2 } };\n             DIG 2;\n             DUP;\n             DUG 3;\n             SENDER;\n             GET;\n             IF_NONE\n               { PUSH string "GetNoneValue";\n                 FAILWITH }\n               {  };\n             DIG 3;\n             DUP;\n             DUG 4;\n             PUSH int 0;\n             DIG 3;\n             DUP;\n             DUG 4;\n             INT;\n             DIG 3;\n             DUP;\n             DUG 4;\n             SUB;\n             COMPARE;\n             GE;\n             IF\n               { DIG 2;\n                 DUP;\n                 DUG 3;\n                 INT;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 SUB;\n                 ABS }\n               { PUSH string "AssignNat";\n                 FAILWITH };\n             SOME;\n             SENDER;\n             UPDATE;\n             DIP { DIG 3; DROP };\n             DUG 3;\n             DROP 3;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             SWAP;\n             PAIR;\n             NIL operation;\n             PAIR }\n           { IF_LEFT\n               { UNPAIR;\n                 SWAP;\n                 DUP;\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 SENDER;\n                 GET;\n                 IF_NONE\n                   { PUSH string "GetNoneValue";\n                     FAILWITH }\n                   {  };\n                 COMPARE;\n                 GE;\n                 NOT;\n                 IF\n                   { PUSH string "InvalidCondition: d1";\n                     FAILWITH }\n                   {  };\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 DIG 1;\n                 DUP;\n                 DUG 2;\n                 SOME;\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 SENDER;\n                 PAIR;\n                 UPDATE;\n                 DIP { DIG 3; DROP };\n                 DUG 3;\n                 DROP 2;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 NIL operation;\n                 PAIR }\n               { UNPAIR;\n                 SWAP;\n                 UNPAIR;\n                 SWAP;\n                 DUP;\n                 DIG 5;\n                 DUP;\n                 DUG 6;\n                 SENDER;\n                 DIG 5;\n                 DUP;\n                 DUG 6;\n                 PAIR;\n                 GET;\n                 IF_NONE\n                   { PUSH string "GetNoneValue";\n                     FAILWITH }\n                   {  };\n                 COMPARE;\n                 GE;\n                 NOT;\n                 IF\n                   { PUSH string "InvalidCondition: d3";\n                     FAILWITH }\n                   {  };\n                 DUP;\n                 DIG 4;\n                 DUP;\n                 DUG 5;\n                 DIG 4;\n                 DUP;\n                 DUG 5;\n                 GET;\n                 IF_NONE\n                   { PUSH string "GetNoneValue";\n                     FAILWITH }\n                   {  };\n                 COMPARE;\n                 GE;\n                 NOT;\n                 IF\n                   { PUSH string "InvalidCondition: d4";\n                     FAILWITH }\n                   {  };\n                 DIG 4;\n                 DUP;\n                 DUG 5;\n                 SENDER;\n                 DIG 4;\n                 DUP;\n                 DUG 5;\n                 PAIR;\n                 GET;\n                 IF_NONE\n                   { PUSH string "GetNoneValue";\n                     FAILWITH }\n                   {  };\n                 DIG 5;\n                 DUP;\n                 DUG 6;\n                 PUSH int 0;\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 INT;\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 SUB;\n                 COMPARE;\n                 GE;\n                 IF\n                   { DIG 2;\n                     DUP;\n                     DUG 3;\n                     INT;\n                     DIG 2;\n                     DUP;\n                     DUG 3;\n                     SUB;\n                     ABS }\n                   { PUSH string "AssignNat";\n                     FAILWITH };\n                 SOME;\n                 SENDER;\n                 DIG 6;\n                 DUP;\n                 DUG 7;\n                 PAIR;\n                 UPDATE;\n                 DIP { DIG 5; DROP };\n                 DUG 5;\n                 DROP;\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 DIG 2;\n                 DUP;\n                 DUG 3;\n                 MEM;\n                 IF\n                   { DIG 3;\n                     DUP;\n                     DUG 4;\n                     DIG 2;\n                     DUP;\n                     DUG 3;\n                     GET;\n                     IF_NONE\n                       { PUSH string "GetNoneValue";\n                         FAILWITH }\n                       {  };\n                     DIG 4;\n                     DUP;\n                     DUG 5;\n                     DIG 2;\n                     DUP;\n                     DUG 3;\n                     DIG 2;\n                     DUP;\n                     DUG 3;\n                     ADD;\n                     SOME;\n                     DIG 4;\n                     DUP;\n                     DUG 5;\n                     UPDATE;\n                     DIP { DIG 4; DROP };\n                     DUG 4;\n                     DROP }\n                   { DIG 3;\n                     DUP;\n                     DUG 4;\n                     DIG 2;\n                     DUP;\n                     DUG 3;\n                     MEM;\n                     IF\n                       { PUSH string "KeyAlreadyExists";\n                         FAILWITH }\n                       { DIG 3;\n                         DUP;\n                         DUG 4;\n                         DIG 1;\n                         DUP;\n                         DUG 2;\n                         PUSH nat 0;\n                         ADD;\n                         SOME;\n                         DIG 3;\n                         DUP;\n                         DUG 4;\n                         UPDATE;\n                         DIP { DIG 3; DROP };\n                         DUG 3 } };\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 GET;\n                 IF_NONE\n                   { PUSH string "GetNoneValue";\n                     FAILWITH }\n                   {  };\n                 DIG 4;\n                 DUP;\n                 DUG 5;\n                 PUSH int 0;\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 INT;\n                 DIG 3;\n                 DUP;\n                 DUG 4;\n                 SUB;\n                 COMPARE;\n                 GE;\n                 IF\n                   { DIG 2;\n                     DUP;\n                     DUG 3;\n                     INT;\n                     DIG 2;\n                     DUP;\n                     DUG 3;\n                     SUB;\n                     ABS }\n                   { PUSH string "AssignNat";\n                     FAILWITH };\n                 SOME;\n                 DIG 5;\n                 DUP;\n                 DUG 6;\n                 UPDATE;\n                 DIP { DIG 4; DROP };\n                 DUG 4;\n                 DROP 4;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 SWAP;\n                 PAIR;\n                 NIL operation;\n                 PAIR } } };\n}\n')))))}p.isMDXComponent=!0},242:function(n,e,t){"use strict";function a(n){var e,t,r="";if("string"==typeof n||"number"==typeof n)r+=n;else if("object"==typeof n)if(Array.isArray(n))for(e=0;e<n.length;e++)n[e]&&(t=a(n[e]))&&(r&&(r+=" "),r+=t);else for(e in n)n[e]&&(r&&(r+=" "),r+=e);return r}e.a=function(){for(var n,e,t=0,r="";t<arguments.length;)(n=arguments[t++])&&(e=a(n))&&(r&&(r+=" "),r+=e);return r}},247:function(n,e,t){"use strict";var a=t(0),r=t(248);e.a=function(){const n=Object(a.useContext)(r.a);if(null==n)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return n}},248:function(n,e,t){"use strict";var a=t(0);const r=Object(a.createContext)(void 0);e.a=r},249:function(n,e,t){"use strict";var a=t(0),r=t.n(a),l=t(247),i=t(242),o=t(56),c=t.n(o);const b=37,d=39;e.a=function(n){const{lazy:e,block:t,defaultValue:o,values:s,groupId:D,className:p}=n,{tabGroupChoices:m,setTabGroupChoices:O}=Object(l.a)(),[u,I]=Object(a.useState)(o),U=a.Children.toArray(n.children);if(null!=D){const n=m[D];null!=n&&n!==u&&s.some((e=>e.value===n))&&I(n)}const P=n=>{I(n),null!=D&&O(D,n)},G=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t},p)},s.map((({value:n,label:e})=>r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":u===n,className:Object(i.a)("tabs__item",c.a.tabItem,{"tabs__item--active":u===n}),key:n,ref:n=>G.push(n),onKeyDown:n=>{((n,e,t)=>{switch(t.keyCode){case d:((n,e)=>{const t=n.indexOf(e)+1;n[t]?n[t].focus():n[0].focus()})(n,e);break;case b:((n,e)=>{const t=n.indexOf(e)-1;n[t]?n[t].focus():n[n.length-1].focus()})(n,e)}})(G,n.target,n)},onFocus:()=>P(n),onClick:()=>{P(n)}},e)))),e?Object(a.cloneElement)(U.filter((n=>n.props.value===u))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},U.map(((n,e)=>Object(a.cloneElement)(n,{key:e,hidden:n.props.value!==u})))))}},250:function(n,e,t){"use strict";var a=t(3),r=t(0),l=t.n(r);e.a=function({children:n,hidden:e,className:t}){return l.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:e,className:t}),n)}}}]);